{"version":3,"sources":["webpack://./src/js/gator_components/plx/controller.js?","webpack://./src/js/gator_components/plx/model.js?","webpack://./src/js/gator_components/plx/view.js?","webpack://./src/js/gator_components/utilities/test.js?","webpack://./src/js/gator_components/utilities/validate_input.js?","webpack://./src/js/gator_components/main_app/model.js?","webpack://./src/js/gator_components/main_app/view.js?","webpack://./src/js/gator_components/main_app/controller.js?","webpack://./src/js/gator_components/utilities/main.js?","webpack://./src/js/gator_components/utilities/util.js?","webpack://./src/js/gator_components/dynamic_map_modules/maps_base/dynamic/model.js?","webpack://./src/js/gator_components/dynamic_map_modules/maps_base/dynamic/view.js?","webpack://./src/js/gator_components/dynamic_map_modules/maps_base/dynamic/initialize_dynamic_map.js?","webpack://./src/js/gator_components/dynamic_map_modules/maps_base/dynamic/controller.js?"],"names":["ScriptsController","util","placeholders","plxButton","viewPane","super","this","currentlySelectedItem","validator","paramBuild","setInitialStateObject","initializeView","scriptTitleParametersToggle","setMyStateToInitialWorkingState","scriptsListContainer","addEventListener","onScriptTitleClick","bind","close","e","target","classList","contains","insertParametersContainer","scriptIndex","parseInt","dataset","index","getNewWorkingState","removeTitleListener","checkShowOn","secondaryParent","id","visualManager","removeEventListener","generate","onPlxClick","removePlxClickListener","removeActive","getStateCurrentlySelectedScript","insertScriptsContainer","init","innerComponentIsNowListening","value","secondaryParentContainsShowRemove","checkActiveOn","renderParams","getParameterNames","getStateCurrentlySelectedScriptIndex","matchParamsTo","level","resetContainerFor","childnodes","document","getElementsByTagName","console","log","n","length","inputNode","onParameterInput","preventDefault","node","inputDetectedOn","inputCount","push","buildClick","alert","inputField","validateInputOn","filteredResult","eval","isTested","validateOutputOn","result","validationCheck","input","regEx","test","Object","defineProperty","writable","final","setParameterValue","generateScriptId","setScriptParamsTo","parameterEntries","entries","getScriptParameterValues","forEach","key","setScriptLinkTo","clickPlxUrl","scriptId","getCurrentlySelectedScript","setScriptIdTo","link","URL","getBasePlxUrl","getScriptId","getParameterInputs","setFullUrlTo","finalResult","field","status","valid","isValid","ScriptsModel","initialState","workingState","myState","statebasePlxUrl","params","parameters","url","currentlySelectedScript","currentlySelectedScriptIndex","setInitialState","param1","param2","state","basePlxUrl","setMyStateToWorkingState","parameterName","parameterValue","scriptsParentHtml","parametersParentHTML","parameter","scripts","title","getCurrentlySelectedScriptIndex","script","setNewState","keys","parentPane","emptyString","primaryParent","createElement","add","primaryParentinnerHTML","getScriptsParentHTML","innerHTML","insertBefore","childNodes","grabInnerComponent","getElementById","scriptButtonContainer","textContent","insert","getScripts","li","toggleScriptsContainer","resetChildren","removeChild","Element","parametersInnerContainer","secondaryParentinnerHTML","getParametersParentHTML","insertAdjacentElement","grabSecondaryComponent","cardInner","item","resetListItems","items","getElementsByClassName","i","onListedItem","remove","parametersHtml","getParameterHTML","toggle","parameterExample","setAttribute","getFullUrl","async","window","open","Test","filter","match","search","filterRegEx","replace","AppModel","views","listOfElementsByClass","classArrays","classList_1","classList_2","classList_3","classList_4","classList_5","classList_6","classList_7","classList_8","non_iretableViews","iterable_views","view","valueOf","head","viewsButtons","mainMenu","viewsPane","viewsListHasChildNodes","resetChildViews","non_iterableViews","checkAndListChildNodes","clearClassesOnChildNodes","checkEachViewIndex","objectView","count","setNewChildView","values","getChildViews","$elInArray","pop","viewObject","object","Util","actionButtons","onLoadCheckForActionButtons","button","loadControllers","instantiateControllersWith","getParametersList","mapsButton","staticMapButton","cl_apiKey","controllerIsNowlistening","staticButton","scriptsController","oneButtonWasClicked","plxShouldLoad","checkAttachedPanes","AppController","clear","data","DynamicMapModel","InitializeMap","map","mapsGlobals","map_ctx_globals","america","control","markers","ids","uniqueId","mapOptions","zoom","center","trafficLayer","mapTypeControlOptions","mapTypeIds","infoWindow","google","maps","InfoWindow","content","name","styledMapType","StyledMapType","elementType","stylers","color","featureType","_map","Map","mapTypes","set","setMapTypeId","controls","ControlPosition","TOP_RIGHT","TrafficLayer","setMap","geocoder","Geocoder","self","initListeners","asyncDirectionsHandler","event","addListener","asyncClickFunction","context","default","AutocompleteDirectionsHandler","directionsHandler","latLng","clicked","clickedMarker","geocodeAddress","mapGlobals","initiliaze_map_objects_and_listeners","initMap"],"mappings":"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","file":"js/3.70547c03.js","sourcesContent":["import ScriptsView from './view';\n\nexport default class ScriptsController extends ScriptsView {\n  constructor( util, placeholders, plxButton, viewPane ) {\n    super(placeholders, viewPane);\n    this.currentlySelectedItem;\n    this.plxButton = plxButton;\n    this.validator = util; //input validation class\n    this.paramBuild;\n  }\n\n  init() {\n    super.setInitialStateObject();\n    super.initializeView();\n    this.scriptTitleParametersToggle();\n  }\n\n  scriptTitleParametersToggle() {\n    super.setMyStateToInitialWorkingState();\n    this.scriptsListContainer.addEventListener(\n      'click', this.onScriptTitleClick.bind(this),\n       false);\n    this.close.addEventListener(\n      'click', this.onScriptTitleClick.bind(this),\n       false);\n    // this.reset.addEventListener(\n    //   'click', this.onScriptTitleClick.bind(this),\n    //    false);\n  }\n\n  onScriptTitleClick (e) {\n    this.currentlySelectedItem;\n    // if ( e === Event ) {\n    //   e.preventDefault();\n    //   this.currentlySelectedItem = e.target;\n    // } else if ( e === Element ) {\n    //   this.currentlySelectedItem = e;\n    // }\n    this.currentlySelectedItem = e.target;\n    if ( this.currentlySelectedItem.classList.contains('listed-item') ) {\n        super.insertParametersContainer();\n        let scriptIndex = parseInt(this.currentlySelectedItem.dataset.index);\n        super.getNewWorkingState(scriptIndex, this.currentlySelectedItem);\n        this.removeTitleListener();\n        this.checkShowOn(this.secondaryParent);\n    }else if ( this.currentlySelectedItem.id == 'close' ){\n              this.visualManager('all');\n              super.setMyStateToInitialWorkingState();\n    }\n    // else if ( currentlySelectedItem.id == 'reset' ){\n    //   this.removeTitleListener();\n    //   super.setMyStateToInitialWorkingState();\n    //   this.visualManager('remove');\n    // }\n  }\n\n  removeTitleListener(){\n    this.scriptsListContainer.removeEventListener(\n      'click', this.onScriptTitleClick.bind(this),\n       false); \n  }\n\n  removePlxClickListener(){\n    this.generate.removeEventListener(\n      'click', this.onPlxClick.bind(this),\n      false);\n  }\n\n  checkShowOn (secondaryParent) {\n    if ( secondaryParent.classList.contains('show') ){\n      this.removeTitleListener();\n      this.removePlxClickListener();\n      this.visualManager('remove');\n      super.removeActive(super.getStateCurrentlySelectedScript());\n      super.setMyStateToInitialWorkingState();\n      super.insertScriptsContainer();\n      this.init();\n      // // this.onScriptTitleClick(super.getCurrentlySelectedScript);\n    } else {\n          // this.removeTitleListener();\n          this.visualManager('insert');\n          // this.generateScriptId();\n          this.innerComponentIsNowListening();\n    }\n  }\n\n  visualManager (value) {\n    if ( value === 'remove' ) {\n      this.secondaryParentContainsShowRemove('children');\n      super.checkActiveOn(super.getStateCurrentlySelectedScript());\n    } else if ( value === 'all' ) {\n      this.secondaryParentContainsShowRemove('all');\n    } else if ( value == 'insert' ) {\n        super.insertParametersContainer();\n        super.renderParams(super.getParameterNames(super.getStateCurrentlySelectedScriptIndex()));\n        super.matchParamsTo(this.placeholders);\n        super.checkActiveOn(super.getStateCurrentlySelectedScript());\n    }\n  }\n\n  secondaryParentContainsShowRemove (level) {\n    super.resetContainerFor(level);\n  }\n\n  innerComponentIsNowListening() {\n    let childnodes = document.getElementsByTagName('input');\n    console.log(childnodes);\n    // listen for field inputs\n    // if values are typed in\n    if(childnodes){\n      for(let n=0; n < childnodes.length; n++){\n        let inputNode = childnodes[n];\n        if (inputNode){\n          inputNode.addEventListener(\n          'input', this.onParameterInput.bind(this), \n          false)\n        }\n      }\n    }\n    // listen for click trigger\n    // if values programmatically inserted\n    this.generate.addEventListener(\n      'click', this.onPlxClick.bind(this),\n      false);\n  }\n\n  onParameterInput (e) {\n    e.preventDefault();\n    let node = e.target;\n    this.inputDetectedOn(node);\n  }\n\n  onPlxClick (e) {\n    e.preventDefault();\n    this.removePlxClickListener();\n    let childnodes = document.getElementsByTagName('input');\n    console.log(childnodes);\n    if(childnodes){\n      let inputCount = [];\n      for(let n=0; n < childnodes.length; n++){\n        let node = childnodes[n];\n        if (node.value.length > 0){\n          inputCount.push(node);\n          this.inputDetectedOn(node); \n          console.log(node);\n        }\n      }\n      if( inputCount.length >= 4){\n        this.buildClick();\n      } else {\n        console.log('We only have these entries: ', inputCount);\n        alert('Please ensure all fields have valid data!')\n      }\n    }\n  }\n\n  inputDetectedOn(target){\n    let inputField = target\n    if ( inputField.classList.contains('input') && inputField.value ) {\n      this.validateInputOn(inputField);\n    }\n  }\n\n  validateInputOn (target) {\n    let inputField = target;\n        // use eval to dynamically invoke regEx functions that filter input\n        // based on target id as the ids are part of the function names.\n        // from `validate_input.js`.\n        // ex: `this.validator.is_project_number(value, validatorFunction)` < validate project number\n        // ex: `this.validator.is_case_number(value, validatorFunction)` < validate case number\n        let id = inputField.id;\n        console.log('Input to filter :: ' + id);\n        let filteredResult = eval('this.validator.is_'+ id)(inputField);\n        console.log('Does input match filter? :: ', filteredResult.isTested);\n        this.validateOutputOn(filteredResult);\n  }\n\n  validateOutputOn (result) {\n    let validationCheck = result;\n    let input = validationCheck.input;\n    // this regEx tests the input.value to ensure\n    // there is no white-space in the tested result.\n    let regEx = /[^\\S+]/gi;\n    console.log(validationCheck);\n  \n    // super.createLinkElement();\n    if ( input.value && regEx.test(input.value) === false ) {\n        console.log('Whitespace in input? :: ', regEx.test(input.value));\n              // add the property `validationcheck.valid`\n              // to be either true or false\n              if ( validationCheck.isTested === true ){\n                Object.defineProperty(validationCheck, 'valid', {value:true, writable: true});\n                this.final(validationCheck);\n                super.setParameterValue(input.id, input.value);\n              } else {\n                Object.defineProperty(validationCheck, 'valid', {value:false, writable: true});\n                this.final(validationCheck);\n             }    \n      }\n  }\n\n buildClick () {\n   this.generateScriptId();\n   this.paramBuild = '';\n   super.setScriptParamsTo(this.paramBuild);\n    const parameterEntries = Object.entries(super.getScriptParameterValues());\n    console.log(parameterEntries);\n    if(parameterEntries.length >= 1){\n        parameterEntries.forEach(( [key, value], index ) => {\n              this.paramBuild += `${key}` + ':' +`${value}`;\n                if ( index !== parameterEntries.length - 1 ) {\n                  this.paramBuild += ',';\n                }\n        });\n        console.log('String representation of parameter inputs :: ', this.paramBuild, '\\n');\n        this.setScriptLinkTo(this.paramBuild);    \n    }\n    super.clickPlxUrl();\n  }\n\n  generateScriptId() {\n    let script = super.getCurrentlySelectedScript();\n    const scriptId = `${script.id}?p=`;\n    super.setScriptIdTo(scriptId);\n  }\n\n  setScriptLinkTo(link){\n    super.setScriptParamsTo(link);\n    let URL  = super.getBasePlxUrl();\n    URL += super.getScriptId();\n    URL += super.getParameterInputs();\n    super.setFullUrlTo(URL);\n  }\n\n  final (finalResult) {\n    let final = finalResult;\n    let field = final.input;\n    let status = final.valid;\n    if ( final && status == true ) {\n      console.log('This', `${field.id}`, 'meets the minimum requirements'); \n      this.isValid(field, status);\n    } else if ( final && status == false ) {\n      console.log('This does not meet the minimum requirements for a', `${field.id}`);\n    // this.isInvalid(field, status);\n    }\n    // super.renderInputValidity(field, status)\n  }\n\n  isValid (input, status) {\n    let field = input;\n    console.log('Is ', field.id, 'valid? ', status, ' ===', field.value);\n  }\n\n  //   isInvalid (input, status) {\n  //   const field = input;\n  // }\n}\n\n","export default class ScriptsModel {\n  constructor() {\n    this.initialState = {};\n    this.workingState = this.initialState;\n    this.myState = {};\n  }\n\n  /**\n   * Reduce lines of code with something like this:\n   *\n    Foo() {\n      let _acctNum = '';\n\n      return {\n          getAcctNum: function() {\n              return _acctNum;\n          },\n          setAcctNum: function (newAcctNum) {\n            _acctNum = newAcctNum;\n          },\n        }\n      }\n   *\n   */\n\n  setInitialStateObject() {\n    let state = {\n      statebasePlxUrl: 'http://plx/scripts2/',\n      id: '',\n      params: '',\n      parameters: {},\n      url: null,\n      currentlySelectedScript: '',\n      currentlySelectedScriptIndex: '',\n    };\n    this.initialState = state;\n    this.setInitialState(this.initialState);\n  }\n\n  setInitialState (initialState) {\n    this.workingState = initialState;\n  }\n\n  setMyStateToInitialWorkingState () {\n    this.setInitialStateObject();\n    this.myState = this.workingState;\n  }\n\n  setNewState (param1, param2) {\n    this.workingState = {};\n    let state = {\n      basePlxUrl: 'http://plx/scripts2/',\n      id: '',\n      params: '',\n      parameters: {},\n      url: null,\n      currentlySelectedScript: param1,\n      currentlySelectedScriptIndex: param2,\n    };\n    this.workingState = state;\n    this.setMyStateToWorkingState(this.workingState);\n  }\n\n  setMyStateToWorkingState(workingState) {\n    this.myState = workingState;\n  }\n\n  setScriptIdTo (id) {\n    this.myState.id = id;\n  }\n\n  setScriptParamsTo (params) {\n    this.myState.params = params;\n  }\n\n  setFullUrlTo (url) {\n    this.myState.url = url;\n  }\n\n  setParameterValue (parameterName, parameterValue) {\n    this.myState.parameters[parameterName] = parameterValue;\n  }\n\n  getScriptsParentHTML() {\n    // debugging on reset button needed \n\n    // this.scriptsParentHtml =\n    //   `<ul id='scriptList' rel='plxScriptWindow' class=''>\n    //       <h2 class='card-header'>Scripts</h2>\n    //       <div id='scriptButtonContainer' class='buttonContainer'>\n    //           <button type='button' class='exitbtn' id='close' title='Close this PLX Window.'></button>\n    //           <button type='button' id='reset' class='exitbtn' title='Close parameters pane.'></button>\n    //           <button type='button' id='generate' class='exitbtn' title='Generate URL for PLX with case info.'></button>\n    //         </div>\n    //       <div class='card-inner' id='plx-InnerCard'>\n    //       </div\n    //    </ul>`;\n       this.scriptsParentHtml =\n       `<ul id='scriptList' rel='plxScriptWindow' class=''>\n          <h2 class='card-header'>Scripts</h2>\n          <div id='scriptButtonContainer' class='buttonContainer'>\n              <button type='button' class='exitbtn' id='close' title='Close this PLX Window.'></button>\n              <button type='button' id='generate' class='exitbtn' title='Generate URL for PLX with case info.'></button>\n            </div>\n          <div class='card-inner' id='plx-InnerCard'>\n          </div\n       </ul>`;\n    return this.scriptsParentHtml;\n  }\n\n  getParametersParentHTML() {\n    this.parametersParentHTML =\n      `<div id='card-inner' class='card-inner'>\n          <h2 class='card-header'>Parameters</h2>\n          <div id='parameters'></div>\n      </div>`;\n    return this.parametersParentHTML;\n  }\n\n  getParameterHTML (parameter) {\n    let paramaterHtml =\n    `<div class='innerParam'>\n          <p class='parameter'>\n              <label for='${parameter}'>${parameter}:</label>\n          </p>\n          <p>\n            <input type='text' size='20' class='input' id='${parameter}' placeholder=''>\n          </p>\n      </div>`;\n    return paramaterHtml;\n\n  }\n\n  getScripts() {\n    this.scripts = [\n      //  {\n      //     title: 'API usage for specified mafe_weblog API by IP',\n      //     id: 'script_5b._a15f62_0000_2cc9_bcc5_001a11404b34',\n      //     parameters: {\n      //       'case_number': '',\n      //       'ip_range': '',\n      //       'query_type': '',\n      //       'api_endpoint_type': '',\n      //       'table_suffix': '',\n      //       'project_number': '',\n      //       'client_id': '',\n      //       },\n      //     },\n      //     {\n      //       title: 'QPS breakdown from Web-Service',\n      //       id: 'script_5b._a16102_0000_254d_940f_089e0822b400',\n      //       parameters: {\n      //         'table_column': '',\n      //         'project_number': '',\n      //         'date_from_YYYY_MM_DD': '',\n      //         'date_to_YYYY_MM_DD': '',\n      //       },\n      //   },\n          // {\n          //   title: 'Daily client and web service requests project and API key',\n          //   id: 'script_5b._4e734f_0000_2d6d_af2d_94eb2c05a52e',\n          //   parameters: {\n          //     'client_id': '',\n          //     'project_number': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n          // {\n          //   title: 'Daily client-side requests per Day & API key',\n          //   id: 'script_5d._03c800_0000_2a6b_85d2_883d24f8e3d4',\n          //   parameters: {\n          //     'client_id': '',\n          //     'project_number': '',\n          //     // 'api_key': '',\n          //     // 'domain': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n          {\n            title: 'Daily requests by API key & Channel',\n            id: 'script_5b._4e734f_0000_2d6d_af2d_94eb2c05a52e',\n            parameters: {\n              'client_id': '',\n              'project_number': '',\n              // 'api_key': '',\n              // 'domain': '',\n              'date_from_YYYY_MM_DD': '',\n              'date_to_YYYY_MM_DD': '',\n            },\n          },\n          // {\n          //   title: 'Total client-side requests by Domain, API key & Days Used',\n          //   id: 'script_5d._03c5d4_0000_2961_9985_24058873f66c',\n          //   parameters: {\n          //     'client_id': '',\n          //     'project_number': '',\n          //     // 'api_key': '',\n          //     // 'domain': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n          {\n            title: 'Total URL STATS(redacted ) by URL, Domain, Project & Days Used',\n            id: 'script_5d._07f69f_0000_21a9_b028_f403043e7540',\n            parameters: {\n              'client_id': '',\n              'project_number': '',\n              // 'url': '',\n              // 'api_key': '',\n              // 'domain': '',\n              'date_from_YYYY_MM_DD': '',\n              'date_to_YYYY_MM_DD': '',\n            },\n          },\n          {\n            title: 'GeoStats Domain & Web-services w/ IP obfuscation',\n            id: 'script_5d._5ef884_0000_2398_b5bf_089e082dbdd4',\n            parameters:{\n              'client_id': '',\n              'project_number': '',\n              // 'url': '',\n              // 'api_key': '',\n              // 'domain': '',\n              'date_from_YYYY_MM_DD': '',\n              'date_to_YYYY_MM_DD': '',\n\n            },\n          },\n          {\n            title: 'Historic Maps APIs: Daily client and web service requests',\n            id: 'script_5d._7814be_0000_2f72_80a4_001a11405cb4',\n            parameters: {\n                    'client_id': '',\n                    'project_number': '',\n                    'date_from_YYYY_MM_DD': '',\n                    'date_to_YYYY_MM_DD': '',\n                  },\n          },\n          // {\n          //   title: 'Places Autocomplete Sessions V2',\n          //   id: 'maps_support_recent_places_autocomplete_sessions2',\n          //   parameters: {\n          //     'client_id': '',\n          //     'project_number': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n          // {\n          //   title: 'User-Agent script - provided by Seth S.',\n          //   id: 'script_5d._5f020f_0000_2cfb_9763_001a11c0ea40 ',\n          //   parameters: {\n          //     'client_id': '',\n          //     'project_number': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n    ];\n    return this.scripts;\n  }\n\n  getScript (index) {\n    return this.scripts[index];\n  }\n\n  getCurrentlySelectedScript() {\n    return this.scripts[this.getCurrentlySelectedScriptIndex()];\n  }\n\n  getCurrentlySelectedScriptIndex() {\n    return this.myState.currentlySelectedScriptIndex;\n  }\n\n  getStateCurrentlySelectedScript () {\n    return this.myState.currentlySelectedScript;\n  }\n\n  getStateCurrentlySelectedScriptIndex () {\n    return this.myState.currentlySelectedScriptIndex;\n  }\n\n  getNewWorkingState (index, script) {\n    let workingState = this.setNewState(script, index);\n    return workingState;\n  }\n\n  getParameterNames (scriptIndex) {\n    return Object.keys(this.scripts[scriptIndex].parameters);\n  }\n\n  getParameterInputs () {\n    return this.myState.params;\n  }\n\n  getBasePlxUrl() {\n    return this.myState.basePlxUrl;\n  }\n\n  getScriptId() {\n    return this.myState.id;\n  }\n\n  getScriptParameterValues() {\n    return this.myState.parameters;\n  }\n\n  getFullUrl() {\n    return this.myState.url;\n  }\n}\n","import ScriptsModel from './model';\n\nexport default class ScriptsView extends ScriptsModel {\n  constructor (placeholders, viewPane) {\n    super();\n    this.placeholders = placeholders;\n    this.parentPane = viewPane;\n    this.emptyString = '';\n  }\n\n  initializeView() {\n    this.insertScriptsContainer();\n  }\n\n  insertScriptsContainer () {\n    if ( !this.primaryParent ) {\n          this.primaryParent = document.createElement('div');\n          this.primaryParent.id = 'scriptsPrimaryContainer';\n          this.primaryParent.classList.add('card');\n          this.primaryParentinnerHTML = ( () => {\n            return super.getScriptsParentHTML();\n          })();\n          this.primaryParent.innerHTML = this.primaryParentinnerHTML;\n          this.parentPane.insertBefore(\n            this.primaryParent,\n            this.parentPane.childNodes[0]);\n          this.grabInnerComponent();\n          // insert scripts primary container\n    } else {\n          this.resetContainerFor('all');\n          // remove scripts primary container if it exists.\n    }\n  }\n\n  grabInnerComponent() {\n    this.scriptsListContainer = document.getElementById('plx-InnerCard');\n    this.scriptButtonContainer = document.getElementById('scriptButtonContainer');\n    // this.reset = document.getElementById('reset');\n    // this.reset.textContent = 'Reset';\n    this.close = document.getElementById('close');\n    this.close.textContent = 'Close';\n    this.generate = document.getElementById('generate');\n    this.generate.textContent = 'Go to PLX';\n    this.insert(super.getScripts());\n  }\n\n  insert (scripts) {\n    console.log('Scripts ::', scripts);\n    scripts.forEach( (script, index ) => {\n      const li = document.createElement('li');\n      li.textContent = script.title;\n      li.classList.add('listed-item');\n      li.dataset.index = index;\n      this.scriptsListContainer.insertBefore(\n        li,\n        this.scriptsListContainer.childNodes[0]);\n    });\n    this.toggleScriptsContainer();\n  }\n\n  toggleScriptsContainer() {\n    this.primaryParent.classList.add('show');\n  }\n\n  resetContainerFor (level) {\n    if ( level == 'all' ){\n      this.resetChildren('children');\n      if ( this.primaryParent ) {\n        this.parentPane.removeChild(this.primaryParent);\n      } \n      this.primaryParent = null;\n    } else if ( level == 'children' ) {\n      this.resetChildren('children');\n    } else if ( level == 'link' ) {\n      this.resetChildren('link');\n    }\n  }\n\n  resetChildren(level) {\n    if ( level == 'children' ){\n      if ( super.getCurrentlySelectedScript === Element ){\n        this.removeActive(super.getCurrentlySelectedScript);\n          //  this.myState.currentlySelectedScript.classList.remove('active');\n      }\n      // if ( this.plxOutputLink ){\n      //      this.scriptButtonContainer.removeChild(this.plxOutputLink);\n      // }\n      if ( this.params ) {\n           this.parametersInnerContainer.removeChild(this.params);\n      }\n      if ( this.secondaryParent ) {\n           this.scriptsListContainer.removeChild(this.secondaryParent);\n      }\n    }\n    //  else if ( level == 'link' ){\n    //     if ( this.plxOutputLink ){\n    //          this.paramButtonContainer.removeChild(this.plxOutputLink);\n    //          this.setNull(this.plxOutputLink);\n    //     }\n    // }\n    // this.plxOutputLink = null;\n    this.params = null;\n    this.secondaryParent = null;\n  }\n\n  // setNull (element) {\n  //   if ( element ){\n  //     if ( element.id == 'plxOutput' ){\n  //       element.removeAttribute('href');\n  //     }\n  //     super.setFullUrlTo(this.emptyString);\n  //     element = null;\n  //   }\n  // }\n\n  insertParametersContainer () {\n    if ( !this.secondaryParent ){\n          this.secondaryParent = document.createElement('div');\n          this.secondaryParent.classList.add('card');\n          this.secondaryParent.id = 'secondaryContainer';\n          this.secondaryParentinnerHTML = ( () => {\n            return super.getParametersParentHTML();\n          })();\n          this.secondaryParent.innerHTML = this.secondaryParentinnerHTML;\n          this.scriptsListContainer.insertAdjacentElement(\n            'afterbegin',\n            this.secondaryParent);\n          this.grabSecondaryComponent();\n    }\n  }\n\n  grabSecondaryComponent() {\n    this.cardInner = document.getElementById('card-inner');\n    this.parametersInnerContainer = document.getElementById('parameters');\n  }\n\n  toggleParamsContainer() {\n    this.secondaryParent.classList.add('show');\n  }\n\n  checkActiveOn (script) {\n    const item = script;\n    if ( item && item.classList.contains('listed-item' )){\n        if ( item.classList.contains('active' )){\n             this.removeActive(item);\n        } else {\n             this.resetListItems();\n             item.classList.add('active');\n        }\n    }\n  }\n\n  resetListItems() {\n    const items = document.getElementsByClassName('listed-item');\n    for ( let i = 0; i < items.length; i++ ){\n      const item = items[i];\n      if ( item.classList.contains('active' )){\n           this.removeActive(item);\n      }\n    }\n  }\n\n  removeActive (onListedItem) {\n    const item = onListedItem;\n    item.classList.remove('active');\n  }\n\n  renderParams (parameters) {\n    if ( !this.params ){\n        this.params = document.createElement('div');\n        this.params.id = 'params';\n    }\n    this.parametersHtml = '';\n    parameters.forEach( (parameter) => {\n      this.parametersHtml += super.getParameterHTML(parameter);\n    });\n    this.params.innerHTML = this.parametersHtml;\n    this.parametersInnerContainer.insertBefore(this.params, this.parametersInnerContainer.childNodes[0]);\n    this.secondaryParent.classList.toggle('show');\n  }\n\n  matchParamsTo (placeholders) {\n    let parameterExample;\n    const fieldSamples = Object.entries(placeholders.parameters);\n    fieldSamples.forEach(( [key, value], index ) => {\n      parameterExample = document.getElementById(`${key}`);\n      if (parameterExample) {\n        parameterExample.setAttribute('placeholder', `${value}`);\n      }\n    });\n  }\n\n  clickPlxUrl() {\n    let url = super.getFullUrl();\n    console.log(url, '\\n');\n     async function open (url){\n      window.open(url, '_blank');\n     }\n    console.log('Object representation of current state :: ', this.myState);\n    open(url);\n  }\n}\n\n","export default class Test {\n    constructor(){\n\n    }\n\n    test(field, filter, match) {\n        if ( field.value || field.value && field.value.search(filterRegEx) > -1) {\n            field.value = field.value.replace(filter, \"\");\n            let result = {\n                isTested: match.test(field.value),\n                input: field,\n            };\n            return result;\n        }\n    }\n}","import Test from './test';\n\nexport default class Validate extends Test {\n    constructor() {\n        super();\n    }\n\n    is_client_id(input) {\n        console.log(input, 'Input value:: ', input.value);\n        let field = input;\n        let filterRegEx = /[^a-z-0-9]{1,25}/gi;\n        let matchRegEx = /[a-z]{3}-[a-z0-9]{2,25}/gi;\n        let test = {\n            result: super.test(field, filterRegEx, matchRegEx)\n        };      \n        return test.result;\n    }\n\n    is_case_number(input) {\n        console.log(input, 'Input value:: ', input.value);\n        let field = input;\n        let filterRegEx = /[^0-9]{1,8}/g;\n        let matchRegEx = /[0-9]{6,8}/g;\n        let test = {\n            result: super.test(field, filterRegEx, matchRegEx)\n        };      \n        return test.result;\n    }\n\n    is_project_number(input) {\n        console.log(input, 'Input value:: ', input.value);\n        let field = input;\n        let filterRegEx = /[^0-9]{1,12}/g;\n        let matchRegEx = /[0-9]{8,12}/g;\n        let test = {\n            result: super.test(field, filterRegEx, matchRegEx)\n        };      \n        return test.result;\n    }\n\n    is_date_from_YYYY_MM_DD(input) {\n        console.log(input, 'Input value:: ', input.value);\n        let field = input;\n        let filterRegEx = /[^-0-9]{1,10}/g;\n        let matchRegEx = /[0-9]{4}-[0-9]{2}-[0-9]{2}/g;\n        let test = {\n            result: super.test(field, filterRegEx, matchRegEx)\n        };      \n        return test.result;\n    }\n\n    is_date_to_YYYY_MM_DD(input) {\n        console.log(input, 'Input value:: ', input.value);\n        let field = input;\n        let filterRegEx = /[^-0-9]{1,10}/g;\n        let matchRegEx = /[0-9]{4}-[0-9]{2}-[0-9]{2}/g;\n        let test = {\n            result: super.test(field, filterRegEx, matchRegEx)\n        };      \n        return test.result;\n    }\n}\n\n    // isNumberField (minLimit, maxLimit, input) {\n    //     let min = minLimit;\n    //     let max = maxLimit;\n    //     let limit = `{${min}},${max}}`;\n    //     let filterRegEx = `/[^0-9]${limit}+$/g;`\n    //     let matchRegEx = `/[0-9]${limit}+$/g`;\n    //     console.log(input, input.value);\n    //     let field = input;\n    //     let result = {\n    //         isFiltered: matchRegEx.test(field.value),\n    //         input: field,\n    //     };\n    //     if ( field.value.search(filterRegEx) > -1 ) {\n    //         field.value = field.value.replace(filterRegEx, \"\");\n    //         let result = {\n    //             isFiltered: matchRegEx.test(field.value),\n    //             input: field,\n    //         };\n    //     return result;\n    //     }\n    //     return result;\n    // }\n\n    // isMixedField (minLimit, maxLimit, input) {\n    //     let min = minLimit;\n    //     let max = maxLimit;\n    //     let limit = `{${min}},${max}}`;\n    //     let filterRegEx = `/[^a-z0-9]${limit}/gi`;\n    //     console.log(input, input.value);\n    //     let field = input;\n    //     let result = {\n    //         isFiltered: matchRegEx.test(field.value),\n    //         input: field,\n    //     };\n    //     if ( field.value.search(filterRegEx) > -1 ) {\n    //         field.value = field.value.replace(regEx, \"\");\n    //         let result = {\n    //             isFiltered: matchRegEx.test(field.value),\n    //             input: field,\n    //         };\n    //     return result;\n    //     }\n    //     return result;\n    // }\n\n    // is_api_key (input) {\n    //     let field = input;\n    //     if (field) {\n    //         return this.isMixedField(15, field);\n    //     }\n    // }\n\n    // is_domain (input) {\n    //     let field = input;\n    //     if (field) {\n    //         return this.isTextField(16, field);\n    //     }\n    // }\n\n    // is_ip_range (input) {\n    //     let field = input;\n    //     if (field) {\n    //         return this.isNumberField(6, field);\n    //     }\n    // }\n\n    // is_place_Id (input) {\n    //     let field = input;\n    //     if (field) {\n    //         return this.isMixedField(6, field);\n    //     }\n    // }\n\n\n    // is_lat_lng (input) {\n    //     let regEx = /[^0-9.,]/g;\n    //     let field = input;\n    //     let result = {\n    //         isFiltered: true,\n    //         input: field,\n    //     };\n    //     if ( field.value.search(regEx) > -1 ) {\n    //             field.value = field.value.replace(regEx, \"\");\n    //             let result = {\n    //                 isFiltered: true,\n    //                 input: field,\n    //             };\n    //         let split = field.split(',');\n    //         split[2] = {\n    //             lat: null,\n    //             lng: null,\n    //         };\n    //         if (split.length >= 2) {\n    //             const lat = split[0];\n    //             const lng = split[1];\n    //             split[2].lat = this.isNumberField(4, 9, lat);\n    //             split[2].lng = this.isNumberField(4, 9, lng);\n    //             if ( Math.abs(lat) <= 90 && Math.abs(lng) <= 180 && split[2].lat == true && split[2].lng == true ) {\n    //                 const latLng = lat + ',' + lng;\n    //                 result.latLng = latLng;\n    //                 return result;\n    //             }\n\n    //         }\n\n    //     }\n    //     return result;      \n    // }","export default class AppModel {\n  constructor() {\n    this.placeholders = [{\n      parameters: {\n        'case_number': 'Unify case number',\n        'ip_range': '10.0.0.0/32 1234:5678::/48',\n        'query_type': 'Geocoding_API_query/Place_API_details_query',\n        'api_endpoint_type': 'Endpoint_Javascript_API/_Web_Service',\n        'table_suffix': '20180503, last3days, latest, all',\n        'project_number': '1234567891012',\n        'client_id': 'gme-XXXXX',\n        'date_from_YYYY_MM_DD': 'YYYY-MM-DD',\n        'date_to_YYYY_MM_DD': 'YYYY-MM-DD',\n        'api_key': 'AIzaSy***********',\n        'table_column': 'QPS column in logs.web_service_qps.all- \"places\"',\n        'domain': 'domain.com',\n        'url': 'domain.com/path',\n      },\n    }];\n    this.views = {};\n    this.listOfElementsByClass = [{\n      classArrays : [{\n          classList_1 : [],\n          classList_2 : [],\n          classList_3 : [],\n          classList_4 : [],\n          classList_5 : [],\n          classList_6 : [],\n          classList_7 : [],\n          classList_8 : [],\n      }]\n    }];\n\n  }\n\n  resetChildViews () {\n    this.views.non_iretableViews = null;\n    this.views.iterable_views = [];\n  }\n\n  getChildViews () {\n    return this.views.iterable_views;\n  }\n\n  setNewChildView (view) {\n    this.views.iterable_views.push(view);\n  }\n\n  getClassList () {\n    return this.listOfElementsByClass[0];\n  }\n\n  getClassListValues () {\n    return Object.valueOf(this.listOfElementsByClass[0].classArrays);\n  }\n\n  getClassListKeys () {\n    return Object.keys(this.listOfElementsByClass[0].classArrays);\n  }\n\n  getFieldSamples () {\n    return this.placeholders;\n  }\n\n  getParametersList () {\n    return this.placeholders[0];\n  }\n\n  getParameterValues () {\n    return Object.valueOf(this.placeholders[0].parameters);\n  }\n\n  getParameterKeys () {\n    return Object.keys(this.placeholders[0].parameters);\n  }\n}\n","import AppModel from './model';\n\nexport default class AppView extends AppModel {\n  constructor () {\n    super ();\n    this.head = document.getElementsByTagName('head')[0];\n    this.viewsButtons = document.getElementsByClassName('dropbtn');\n    this.mainMenu = document.getElementsByTagName('main')[0];\n    this.plxButton = document.getElementById('plx_button');\n    this.plxButton.textContent = 'PLX';\n    // this.mapsButton = document.getElementById('map_button');\n    // this.mapsButton.textContent = 'Dynamic Map'\n    // this.wsButton = document.getElementById('ws_button');\n    // this.wsButton.textContent = 'WS Tester';\n    // this.staticMapButton = document.getElementById('static_map_button');\n    // this.staticMapButton.textContent = 'Static Map';\n    this.viewsPane = document.createElement('section');\n    this.viewsPane.id = 'views_pane';\n    this.mainMenu.insertAdjacentElement('afterend', this.viewsPane);\n  }\n\n  checkAttachedPanes () {\n     if (this.views.iterable_views !== []){\n        this.viewsListHasChildNodes ();\n     } else {\n        super.resetChildViews ();\n        let views = this.viewsPane.childNodes;\n        this.views.non_iterableViews = views;\n        this.checkAndListChildNodes(this.views.non_iterableViews);\n     }\n  }\n\n  viewsListHasChildNodes() {\n    this.clearClassesOnChildNodes();\n    super.resetChildViews();\n    let views = this.viewsPane.childNodes;\n    this.checkAndListChildNodes(views);\n    this.checkEachViewIndex();\n  }\n\n  checkAndListChildNodes (views) {\n    for (let i = 0; i < views.length; i++){\n      let iteratedView = views[i];\n      let index = i;\n      let objectView = {\n        view: iteratedView,\n        count: index\n      };\n      super.setNewChildView(objectView);\n    }\n  }\n\n  clearClassesOnChildNodes () {\n    let values = super.getChildViews ();\n    if(values){\n        for(let i = 0; i < values.length; i++){\n          let $elInArray = values[i];\n          if ($elInArray.view.classList.contains('one')) {\n              $elInArray.view.classList.toggle('one');\n              this.listOfElementsByClass[0].classArrays[0].classList_1.pop($elInArray);\n            } else if ($elInArray.view.classList.contains('two')){\n                $elInArray.view.classList.toggle('two');\n                this.listOfElementsByClass[0].classArrays[0].classList_2.pop($elInArray);\n            } else if ($elInArray.view.classList.contains('three')){\n                $elInArray.view.classList.toggle('three');\n                this.listOfElementsByClass[0].classArrays[0].classList_3.pop($elInArray);\n            } else if  ($elInArray.view.classList.contains('four')){\n                $elInArray.view.classList.toggle('four');\n                this.listOfElementsByClass[0].classArrays[0].classList_4.pop($elInArray);\n            } else if  ($elInArray.view.classList.contains('five')){\n                $elInArray.view.classList.toggle('five');\n                this.listOfElementsByClass[0].classArrays[0].classList_5.pop($elInArray);\n            } else if  ($elInArray.view.classList.contains('six')){\n                $elInArray.view.classList.toggle('six');\n                this.listOfElementsByClass[0].classArrays[0].classList_6.pop($elInArray);\n            } else if  ($elInArray.view.classList.contains('seven')){\n                $elInArray.view.classList.toggle('seven');\n                this.listOfElementsByClass[0].classArrays[0].classList_7.pop($elInArray);\n            } else {\n                $elInArray.view.classList.toggle('eight');\n                this.listOfElementsByClass[0].classArrays[0].classList_8.pop($elInArray);\n            }\n        }\n    }\n  }\n\n  checkEachViewIndex () {\n    this.views.iterable_views.forEach((viewObject) => {\n        let object = viewObject;\n        if( object.count == 0 ){\n            object.view.classList.add('one');\n            this.listOfElementsByClass[0].classArrays[0].classList_1.push(object);\n          } else if ( object.count == 1 ) {\n                      object.view.classList.add('two');\n                      this.listOfElementsByClass[0].classArrays[0].classList_2.push(object);\n          } else if ( object.count == 2 ) {\n                      object.view.classList.add('three');\n                      this.listOfElementsByClass[0].classArrays[0].classList_3.push(object);\n          } else {\n                      object.view.classList.add('four');\n                      this.listOfElementsByClass[0].classArrays[0].classList_4.push(object);\n        }\n        console.log('Classlist for ',\n          object.view.id, ' is now: ',\n          object.view.classList.value,\n          );\n    });\n  }\n}\n\n","// import { ApiKey } from '../utilities/api_key';\nimport AppView from './view';\nimport ScriptsController from '../plx/controller';\nimport MapsController from '../dynamic_map_modules/maps_base/controller';\nimport StaticWSController from '../static_map/controller';\n\nexport default class AppController extends AppView {\n  constructor(Util) {\n    super();\n    this.util = new Util();\n    // this.cl_apiKey = ApiKey;\n    this.actionButtons = [];\n    this.onLoadCheckForActionButtons();\n  }\n\n  onLoadCheckForActionButtons() {\n    for (let i = 0; i < this.viewsButtons.length; i++){\n      let button = this.viewsButtons[i];\n      this.actionButtons.push(button);\n    }\n    this.loadControllers();\n  }\n\n  loadControllers() {\n    this.instantiateControllersWith(\n          this.util,\n          super.getParametersList(),\n          this.mapsButton,\n          this.plxButton,\n          this.staticMapButton,\n          this.head,\n          this.cl_apiKey,\n          this.viewsPane,);\n    this.controllerIsNowlistening();\n  }\n\n  instantiateControllersWith (util, placeholders, mapsButton, plxButton, staticButton, head, cl_apiKey, viewsPane) {\n    if (!this.scriptsController){\n    this.scriptsController = new ScriptsController(util, placeholders, plxButton, viewsPane);\n    }\n    // if (!this.mapsController){\n    // this.mapsController = new MapsController (util, placeholders, mapsButton, viewsPane, cl_apiKey, head);\n    // }\n    // if (!this.StaticWSController){\n    //   this.staticWSController = new StaticWSController (util, placeholders, staticButton, viewsPane, cl_apiKey, head);\n    // }\n\n  }\n\n  plxShouldLoad() {\n    this.scriptsController.init();\n  }\n\n  controllerIsNowlistening() {\n    this.actionButtons.forEach( (button) => {\n      button.addEventListener(\n        'click', this.oneButtonWasClicked.bind(this),\n        true);\n    });\n  }\n\n  oneButtonWasClicked (e) {\n    e.preventDefault();\n    if (e.target.id == 'plx_button'){\n        this.plxShouldLoad();\n    } \n    // else if (e.target.id == 'map_button'){\n    //     this.mapShouldLoad();\n    // } else if (e.target.id == 'ws_button') {\n    //     this.wsShouldLoad();\n    // } else if (e.target.id == 'static_map_button') {\n    //     this.staticMapShouldLoad();\n    // }\n    super.checkAttachedPanes();\n    console.log(this);\n  }\n  \n  // mapShouldLoad() {\n  //   this.mapsController.init();\n  // }\n\n  // wsShouldLoad() {\n  // }\n\n  // staticMapShouldLoad() {\n  //   this.staticWSController.init();\n  // }\n}\n\n","\nimport '../../.././css/dyn_map.css';\nimport '../../.././css/index.css';\nimport Util from './util';\nimport AppController from '../main_app/controller';\n\nexport default (function initialize(util) {\n  const main = new AppController(util);\n})(Util);\n\n\n\n","import Validate from './validate_input.js';\n\n\nexport default class Util extends Validate {\n\tconstructor () {\n\t\tsuper();\n\t}\n\n\tclearConsole () {\n\t\tconsole.clear();\n\t}\n\n\tlog (data) {\n\t\tconsole.log(data);\n\t}\n}","export default class DynamicMapModel {\n    constuctor () {\n        \n    }\n}\n","\nimport DynamicMapModel from './model'\n\nexport default class DynamicMapView extends DynamicMapModel {\n\tconstructor () {\n\t\tsuper();\n\t}\n\n\tinit () {\n\t\t\n\t}\n}\n","export default class InitializeMap {\n\n  constructor (util, map, mapsGlobals) {\n    this.map_ctx_globals = mapsGlobals;\n    console.log(this.map_ctx_globals);    \n    let { america, control, search, markers, ids, uniqueId } = this.map_ctx_globals;\n    this.util = util;\n    this.america = america;\n    this.map = map;\n    this.ids = ids;\n    this.markers = markers;\n    this.search = search;\n    this.control = control;\n    this.uniqueId = uniqueId;\n    this.mapOptions = {\n      zoom: 14,\n      center: this.america,\n      trafficLayer: true,\n      mapTypeControlOptions: {\n              mapTypeIds: ['roadmap', 'satellite', 'hybrid', 'terrain', 'styled_map']\n            },\n    };\n    this.infoWindow = new google.maps.InfoWindow({\n      content: null,\n      });\n    this.name = {name: 'Styled Map'};\n    this.styledMapType = new google.maps.StyledMapType(\n          [\n            {elementType: 'geometry', stylers: [{color: '#000000'}]},\n            {elementType: 'labels.text.fill', stylers: [{color: '#ffffcc'}]},\n            {elementType: 'labels.text.stroke', stylers: [{color: '#db4437'}]},\n            {\n              featureType: 'administrative',\n              elementType: 'geometry.stroke',\n              stylers: [{color: '#009966'}]\n            },\n            {\n              featureType: 'administrative.land_parcel',\n              elementType: 'geometry.stroke',\n              stylers: [{color: '#009966'}]\n            },\n            {\n              featureType: 'administrative.land_parcel',\n              elementType: 'labels.text.fill',\n              stylers: [{color: '#ffffcc'}]\n            },\n            {\n              featureType: 'landscape.natural',\n              elementType: 'geometry',\n              stylers: [{color: '#000000'}]\n            },\n            {\n              featureType: 'poi',\n              elementType: 'geometry',\n              stylers: [{color: '#000000'}]\n            },\n            {\n              featureType: 'poi',\n              elementType: 'labels.text.fill',\n              stylers: [{color: '#ffffcc'}]\n            },\n            {\n              featureType: 'poi.park',\n              elementType: 'geometry.fill',\n              stylers: [{color: '#000000'}]\n            },\n            {\n              featureType: 'poi.park',\n              elementType: 'labels.text.fill',\n              stylers: [{color: '#ffffcc'}]\n            },\n            {\n              featureType: 'road',\n              elementType: 'geometry',\n              stylers: [{color: '#b3ffff'}]\n            },\n            {\n              featureType: 'road.arterial',\n              elementType: 'geometry',\n              stylers: [{color: '#b3ffff'}]\n            },\n            {\n              featureType: 'road.highway',\n              elementType: 'geometry',\n              stylers: [{color: '#b3ffff'}]\n            },\n            {\n              featureType: 'road.highway',\n              elementType: 'geometry.stroke',\n              stylers: [{color: '#009966'}]\n            },\n            {\n              featureType: 'road.highway.controlled_access',\n              elementType: 'geometry',\n              stylers: [{color: '#b3ffff'}]\n            },\n            {\n              featureType: 'road.highway.controlled_access',\n              elementType: 'geometry.stroke',\n              stylers: [{color: '#b3ffff'}]\n            },\n            {\n              featureType: 'road.local',\n              elementType: 'labels.text.fill',\n              stylers: [{color: '#ffffcc'}]\n            },\n            {\n              featureType: 'transit.line',\n              elementType: 'geometry',\n              stylers: [{color: '#b3ffff'}]\n            },\n            {\n              featureType: 'transit.line',\n              elementType: 'labels.text.fill',\n              stylers: [{color: '#b3ffff'}]\n            },\n            {\n              featureType: 'transit.line',\n              elementType: 'labels.text.stroke',\n              stylers: [{color: '#b3ffff'}]\n            },\n            {\n              featureType: 'transit.station',\n              elementType: 'geometry',\n              stylers: [{color: '#b3ffff'}]\n            },\n            {\n              featureType: 'water',\n              elementType: 'geometry.fill',\n              stylers: [{color: '#3399ff'}]\n            },\n            {\n              featureType: 'water',\n              elementType: 'labels.text.fill',\n              stylers: [{color: '#b3ffff'}]\n            }\n          ], this.name);\n  }\n\n  initMap() {\n    this._map = new google.maps.Map(this.map, this.mapOptions);\n    this._map.mapTypes.set('styled_map', this.styledMapType);\n    this._map.setMapTypeId('styled_map');\n    this._map.controls[google.maps.ControlPosition.TOP_RIGHT].push(this.control);\n    this.trafficLayer = new google.maps.TrafficLayer();\n    this.trafficLayer.setMap(this._map);\n    this.geocoder = new google.maps.Geocoder();\n    this.self = this;\n    this.initListeners(this._map, this.infoWindow);\n  }\n\n  initListeners (_map,  infoWindow) {\n    this.asyncDirectionsHandler(_map, this);\n    google.maps.event.addListener(_map, 'click', this.asyncClickFunction.bind(this, infoWindow));\n    // document.getElementById('submit').addEventListener('click', this.asyncGeocoderFunction.bind(this));\n  }\n\n  asyncDirectionsHandler (_map, context) {\n    async function directionsHandler (_map, context){\n          const { default: AutocompleteDirectionsHandler } = await import(\n          /* webpackChunkName: \"directions_handler_class\" */\n          '../../modules/autocomplete_directions_handler');\n          const autocompleteHandler = new AutocompleteDirectionsHandler(_map, context.map_ctx_globals);\n          autocompleteHandler.initListeners();\n    }\n    directionsHandler(_map, context);\n\n  }\n\n  asyncClickFunction (e, infoWindow) {\n      async function clickedMarker (latLng, map, util, ids, infoWindow, markers, uniqueId) {\n            const { default: clicked } = await import(\n            /* webpackChunkName: \"clicked_marker_function\" */\n            '../../modules/clicked_marker.js');\n            clicked(latLng, map, util, ids, infoWindow, markers, uniqueId);\n            util.log('addMarker function completed at point: ' + latLng + ' ' + '.');\n      }\n      clickedMarker(e.latLng, this._map, this.util, this.ids, infoWindow, this.markers, this.uniqueId);\n  }\n\n  asyncGeocoderFunction() {\n      async function geocodeAddress(geocoder, _map, util, infoWindow, markers, ids, uniqueId) {\n            const { default: geocodeAddress } = await import(\n            /* webpackChunkName: \"geocode_address_function\" */\n            '../../modules/geocode_address.js');\n            geocodeAddress(geocoder, _map, util, infoWindow, markers, ids, uniqueId);\n            this.util.log('geoCoder submitted user\\'s address input of : ' + this.search.value);\n      }\n      geocodeAddress(this.geocoder, this._map, this.util, this.infoWindow, this.markers, this.ids, this.uniqueId);\n  }\n}\n\n","import DynamicMapView from './view'\nimport InitializeMap from './initialize_dynamic_map';\n\nexport default class DynamicMapController extends DynamicMapView {\n    constructor (util, map, mapGlobals) {\n       super(); \n       this.map = map;\n       this.util = util;\n       this.mapGlobals= mapGlobals;\n    }\n\n    init() {\n        this.initiliaze_map_objects_and_listeners = new InitializeMap(\n            this.util, \n            this.map, \n            this.mapGlobals);\n\t\tthis.initiliaze_map_objects_and_listeners.initMap();\n    }\n}\n\n"],"sourceRoot":""}