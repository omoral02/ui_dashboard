{"version":3,"sources":["webpack://./src/js/gator_components/dynamic_map_modules/modules/geo_address_marker_load.js?","webpack://./src/js/gator_components/dynamic_map_modules/modules/find_address_marker_render.js?","webpack://./src/js/gator_components/dynamic_map_modules/modules/geocode_address.js?"],"names":["GeoAddressMarkerLoad","currentlyClickedMarker","results","locale","util","infoWindow","markers","map","geocoder","this","littleWindow","document","getElementById","panoOptions","position","pov","heading","pitch","visible","location","contentString2","id","types","formatted_address","geometry","location_type","setContent","open","log","i","length","setMap","splice","geocode","status","findAddressMarkerRender","panorama","google","maps","StreetViewPanorama","innerHTML","getPano","getVisible","setVisible","marker","contentString3","geocodeAddress","ids","uniqueId","entry","value","panTo","Marker","animation","Animation","DROP","title","push","event","addListener","getPosition","geo_address_marker_load","alert"],"mappings":"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","file":"js/geocode_address_function.js","sourcesContent":["export default class GeoAddressMarkerLoad {\n\n\tconstructor (currentlyClickedMarker, results, locale, util, infoWindow, markers, map, geocoder) {\n\t\tthis.locale = locale;\n\t\tthis.littleWindow = document.getElementById('littleWindow');\n\t\tthis.util = util;\n\t\tthis.infoWindow = infoWindow;\n\t\tthis.markers = markers;\n\t\tthis.currentlyClickedMarker = currentlyClickedMarker;\n\t\tthis.results = results;\n\t\tthis.map = map;\n\t\tthis.geocoder = geocoder;\n\t\tthis.panoOptions = {\n\t\t\tposition: locale,\n\t\t\tpov: {\n\t\t\t\theading: 140,\n\t\t\t\tpitch: 35,\n\t\t\t},\n\t\t\tvisible:false\n\t\t};\n\t\tthis.location = { location : this.locale };\n\t\tthis.contentString2 = \n\t\t'<div id=\"littleWindow\">' +\n\t\t'<div id=\"contentTestString2\">' + \n\t\t'<div id=\"sideNotice\">' + \n\t\t'<br>' +\n\t\t'<p id=\"location\">Marker Location:' + '</p>' +\n\t\t'<p id=\"latLong\">' + this.locale + '</p>' +\n\t\t'Marker\\'s ID is : ' + this.currentlyClickedMarker.id +\n\t\t'<br>' +\n\t\t'Address type(s) : ' + this.results[0].types +\n\t\t'<br>' +\n\t\t'Marker\\'s formatted address is : ' + this.results[0].formatted_address +\n\t\t'<br>' +\n\t\t'Location Type : ' + this.results[0].geometry.location_type +\n\t\t'<br>' + \n\t\t'</div>' +\n\t\t'<br>' +\n\t\t'<form action = \"\">' + '<fieldset>' +\n\t\t'<input type = \"button\" id=\"buttonRemover\" value=\"Remove Marker\" onclick =\"deleteMarkers(' + this.currentlyClickedMarker.id + ')\"/>' +\n\t\t'<br>' +\n\n\t\t'<input type = \"button\" id=\"reverseCoder\" value=\"Reverse GeoCode\" onclick =\"findAddress()\"/>' +\n\t\t'<br>' +\n\n\t\t'<input type = \"button\" id=\"streetView\" value=\"Toggle StreetView\" onclick =\"toggleStreetView()\"/>' +\n\n\n\t\t'</div>' +\n\t\t'</div>' + '';\n\t}\n\n\topen () {\n\t\tthis.infoWindow.setContent(this.contentString2);\n\t\tthis.infoWindow.open(this.map, this.currentlyClickedMarker);\n\t\tthis.util.log('Marker ' + this.currentlyClickedMarker.id + 'was opened!');\n\t}\n\n\tdeleteMarkers (id) {\n\t\tfor (let i = 0; i < this.markers.length; i++) {\n\t\t\tif (this.markers[i].id == id) {\n\t\t\tthis.util.log('Marker ' + this.markers[i].id + ' deleted!');\n\t\t\tthis.markers[i].setMap(null);\n\t\t\tthis.markers.splice(i, 1);\n\t\t\treturn;\n\t\t\t} \n\t\t}  \n\t}\n\n\tfindAddress () {\n\t\tthis.util.log(this.location);\n\t\tthis.geocoder.geocode(this.location, function statusTest(results, status) {\n\t\t\tthis.util.log('reverseGeocode STATUS is : ' + status);\n\t\t\tif (status == 'OK') {\n\t\t\t\tconst findAddressMarkerRender = require('./find_address_marker_render.js');\n\t\t\t\tfindAddressMarkerRender(this.currentlyClickedMarker, results, this.util, this.infoWindow, this.map);\n\t\t\t\tif (results[0]) {\n\t\t\t\tthis.util.log('findAddress function location result is: ' + results[0].formatted_address);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\ttoggleStreetView () {\n\t\tlet panorama = new google.maps.StreetViewPanorama(this.littleWindow, this.panoOptions);\n\t\tpanorama.innerHTML = panorama.getPano();\n\t\tlet toggle = panorama.getVisible();\n\t\tif (toggle == false) {\n\t\t\tpanorama.setVisible(true);\n\t\t\t} else {\n\t\t\tpanorama.setVisible(false);\n\t\t}\n\t}\n}","export default function findAddressMarkerRender(marker, results, util, infoWindow, map) {\n      \n  let contentString3 = \n    '<div id=\"returnFind\">'+\n    '<p id=\"content\">' + results[0].formatted_address + '' +\n    ''+\n    '</div>';\n  infoWindow.setContent(contentString3);\n  infoWindow.open(map, marker);\n  util.log('InfoWindow updated with the formatted address!');\n}","export default function geocodeAddress(geocoder, map, util, infoWindow, markers, ids, uniqueId) {\n\t\tlet address = document.getElementById('address').value;\n\t\tlet entry = {'address': address};\n\t\tlet marker;\n\t\tgeocoder.geocode(entry, function(results, status) {\n\t\t\t\tif (status == 'OK') {\n\t\t\t\t\tmap.panTo(results[0].geometry.location);\n\t\t\t\t\tmarker = new google.maps.Marker({\n\t\t\t\t\t\tmap: map,\n\t\t\t\t\t\tposition: results[0].geometry.location,\n\t\t\t\t\t\tanimation: google.maps.Animation.DROP,\n\t\t\t\t\t\ttitle: results[0].formatted_address\n\t\t\t\t\t});\n\t\t\t\t\tmarker.id = uniqueId;\n\t\t\t\t\tuniqueId++;\n\t\t\t\t\tmarkers.push(marker);\n\t\t\t\t\tids.push(uniqueId);\n\n\t\t\t\t\tutil.log('Marker\\'s ID in the array is ' + marker.id + '.' + ('\\n') + \n\t\t\t\t\t'Marker(s) pushed to \\'Markers\\' array within addMarker function. These are the following IDs:');\n\t\t\t\t\tfor (let i = 0; i < markers.length; i++) {\n\t\t\t\t\t\tutil.log(markers[i].id);\n\t\t\t\t\t}\n\t\t\t\t\tgoogle.maps.event.addListener(marker, 'click', function() {\n\t\t\t\t\t\tconst GeoAddressMarkerLoad = require('./geo_address_marker_load.js');\n\t\t\t\t\t\tlet currentlyClickedMarker = marker;\n\t\t\t\t\t\tlet locale = currentlyClickedMarker.getPosition();\n\t\t\t\t\t\tthis.geo_address_marker_load = new GeoAddressMarkerLoad(currentlyClickedMarker, results, locale, util, infoWindow, markers, map, geocoder);\n\t\t\t\t\t\tthis.geo_address_marker_load.open();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\talert('Geocode was not successful for the following reason: ' + status);\n\t\t\t\t} \n\t\t});\n\n}"],"sourceRoot":""}