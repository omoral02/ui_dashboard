{"version":3,"sources":["webpack://./src/js/gator_components/utilities/api_key.js?","webpack://./src/js/gator_components/plx/controller.js?","webpack://./src/js/gator_components/plx/view.js?","webpack://./src/js/gator_components/plx/model.js?","webpack://./src/js/gator_components/dynamic_map_modules/maps_base/index.html?","webpack://./src/js/gator_components/dynamic_map_modules/maps_base/controller.js?","webpack://./src/js/gator_components/dynamic_map_modules/maps_base/view.js?","webpack://./src/js/gator_components/dynamic_map_modules/maps_base/model.js?","webpack://./src/js/gator_components/static_map/controller.js?","webpack://./src/js/gator_components/static_map/view.js?","webpack://./src/js/gator_components/static_map/model.js?","webpack://./src/js/gator_components/dremel/controller.js?","webpack://./src/js/gator_components/dremel/view.js?","webpack://./src/js/gator_components/dremel/model.js?","webpack://./src/js/gator_components/main_app/controller.js?","webpack://./src/js/gator_components/main_app/view.js?","webpack://./src/js/gator_components/main_app/model.js?","webpack://./src/js/gator_components/utilities/main.js?","webpack://./src/js/gator_components/utilities/util.js?","webpack://./src/js/gator_components/utilities/validate_input.js?","webpack://./src/js/gator_components/utilities/test.js?"],"names":["module","exports","cl_ApiKey","ScriptsController","util","placeholders","plxButton","viewPane","super","this","currentlySelectedItem","validator","paramBuild","inputCount","setInitialStateObject","initializeView","scriptTitleParametersToggle","setMyStateToInitialWorkingState","scriptsListContainer","addEventListener","onScriptTitleClick","bind","close","e","target","classList","contains","insertParametersContainer","scriptIndex","parseInt","dataset","index","getNewWorkingState","checkShowOn","secondaryParent","id","visualManager","removeEventListener","generate","onPlxClick","removeTitleListener","removePlxClickListener","removeActive","getStateCurrentlySelectedScript","checkForScriptsContainer","init","hideInactive","innerComponentIsNowListening","value","secondaryParentContainsShowRemove","checkActiveOn","renderParams","getParameterNames","getStateCurrentlySelectedScriptIndex","matchParamsTo","level","resetContainerFor","childnodes","document","getElementsByTagName","console","log","n","length","inputNode","onParameterInput","preventDefault","node","inputDetectedOn","push","buildClick","alert","inputField","validateInputOn","filteredResult","eval","matchesFilter","validateOutputOn","result","validationCheck","input","regEx","test","setParameterValue","Object","defineProperty","writable","final","finalResult","field","status","valid","isValid","isInvalid","generateScriptId","setScriptParamsTo","parameterEntries","entries","getScriptParameterValues","forEach","key","setScriptLinkTo","clickPlxUrl","scriptId","getCurrentlySelectedScript","setScriptIdTo","link","URL","getBasePlxUrl","getScriptId","getParameterInputs","setFullUrlTo","url","getFullUrl","myState","window","open","focus","initialState","workingState","statebasePlxUrl","params","parameters","currentlySelectedScript","currentlySelectedScriptIndex","setInitialState","param1","param2","state","basePlxUrl","setMyStateToWorkingState","parameterName","parameterValue","scriptsParentHtml","parametersParentHTML","parameter","paramaterHtml","scripts","title","getCurrentlySelectedScriptIndex","script","setNewState","keys","utility","parentPane","emptyString","primaryParent","createElement","add","primaryParentinnerHTML","getScriptsParentHTML","innerHTML","insertBefore","childNodes","grabInnerComponent","getElementById","scriptButtonContainer","textContent","insert","getScripts","li","appendChild","toggleScriptsContainer","resetChildren","removeChild","Element","parametersInnerContainer","secondaryParentinnerHTML","getParametersParentHTML","insertAdjacentElement","grabSecondaryComponent","cardInner","item","resetListItems","items","getElementsByClassName","i","toggle","removeInactive","onListedItem","remove","parametersHtml","getParameterHTML","parameterExample","setAttribute","secondaryHTML","resetPrimaryContainerFor","getMapParentHTML","secondaryParentInnerHTML","getMapSecondaryHTML","iframe","src","element","removeAttribute","mapButton","head","apikey","isNowListening","getStaticMapParentHTML","getStaticSecondaryHTML","mapStaticButton","staticButton","getDremelParentHTML","getDremelSecondaryHTML","views","non_iretableViews","iterable_views","view","valueOf","viewsButtons","mainMenu","menuBotton","menuButtons","firstHalf","secondHalf","results","viewsPane","viewportWidth","viewportHeight","minimumWindow","actionButtons","menuClicked","viewsListHasChildNodes","resetChildViews","non_iterableViews","checkAndListChildNodes","checkEachViewIndex","objectView","count","setNewChildView","table","setOrder","viewObject","arr","object","style","order","innerWidth","documentElement","clientWidth","innerHeight","clientHeight","current","ceiling","Util","require","cl_apiKey","onLoadCheckForActionButtons","button","loadControllers","instantiateControllersWith","getParametersList","mapsButton","staticMapButton","dremelButton","scriptsController","StaticWSController","staticWSController","mapsController","dremelController","controllerIsNowlistening","windowEvent","oneButtonWasClicked","resize","logView","plxShouldLoad","menuItemClicked","menuShouldRender","mapShouldLoad","dremelShouldLoad","staticMapShouldLoad","checkAttachedPanes","AppController","filter","match","search","filterRegEx","replace","clear","data"],"mappings":"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","file":"js/main.0d75d045864e30b1bec9.js","sourcesContent":[" const cl_ApiKey = 'AIzaSyAVUjC3CiwXLDElAq0AwWEntiVIfNadpW8';\n\nmodule.exports = {cl_ApiKey};\n","import ScriptsView from './view';\n\nexport default class ScriptsController extends ScriptsView {\n  constructor( util, placeholders, plxButton, viewPane ) {\n    super( util, placeholders, viewPane);\n    this.currentlySelectedItem;\n    this.plxButton = plxButton;\n    this.validator = util; //input validation class\n    this.paramBuild;\n    this.inputCount = [];\n  }\n\n  init() {\n    super.setInitialStateObject();\n    super.initializeView();\n    this.scriptTitleParametersToggle();\n  }\n\n  scriptTitleParametersToggle() {\n    super.setMyStateToInitialWorkingState();\n    this.scriptsListContainer.addEventListener(\n      'click', this.onScriptTitleClick.bind(this),\n       false);\n    this.close.addEventListener(\n      'click', this.onScriptTitleClick.bind(this),\n       false);\n    // this.reset.addEventListener(\n    //   'click', this.onScriptTitleClick.bind(this),\n    //    false);\n  }\n\n  onScriptTitleClick (e) {\n    this.currentlySelectedItem;\n    // if ( e === Event ) {\n    //   e.preventDefault();\n    //   this.currentlySelectedItem = e.target;\n    // } else if ( e === Element ) {\n    //   this.currentlySelectedItem = e;\n    // }\n    this.currentlySelectedItem = e.target;\n    if ( this.currentlySelectedItem.classList.contains('listed-item') ) {\n        super.insertParametersContainer();\n        let scriptIndex = parseInt(this.currentlySelectedItem.dataset.index);\n        super.getNewWorkingState(scriptIndex, this.currentlySelectedItem);\n        this.checkShowOn(this.secondaryParent);\n    } else if ( this.currentlySelectedItem.id === 'close_plx' ){\n              this.visualManager('all');\n              super.setMyStateToInitialWorkingState();\n    }\n    // else if ( currentlySelectedItem.id == 'reset' ){\n    //   this.removeTitleListener();\n    //   super.setMyStateToInitialWorkingState();\n    //   this.visualManager('remove');\n    // }\n  }\n\n  removeTitleListener(){\n    this.scriptsListContainer.removeEventListener(\n      'click', this.onScriptTitleClick.bind(this),\n       false); \n  }\n\n  removePlxClickListener(){\n    this.generate.removeEventListener(\n      'click', this.onPlxClick.bind(this),\n      false);\n  }\n\n  checkShowOn (secondaryParent) {\n    if ( secondaryParent.classList.contains('show') ){\n      this.removeTitleListener();\n      this.removePlxClickListener();\n      this.visualManager('remove');\n      super.removeActive(super.getStateCurrentlySelectedScript());\n      super.setMyStateToInitialWorkingState();\n      super.checkForScriptsContainer();\n      this.init();\n    } else {\n          this.visualManager('insert');\n          super.hideInactive();\n          this.innerComponentIsNowListening();\n    }\n  }\n\n  visualManager (value) {\n    if ( value === 'remove' ) {\n      this.secondaryParentContainsShowRemove('children');\n      super.checkActiveOn(super.getStateCurrentlySelectedScript());\n    } else if ( value === 'all' ) {\n      this.secondaryParentContainsShowRemove('all');\n    } else if ( value == 'insert' ) {\n        super.insertParametersContainer();\n        super.renderParams(super.getParameterNames(super.getStateCurrentlySelectedScriptIndex()));\n        super.matchParamsTo(this.placeholders);\n        super.checkActiveOn(super.getStateCurrentlySelectedScript());\n    }\n  }\n\n  secondaryParentContainsShowRemove (level) {\n    super.resetContainerFor(level);\n  }\n\n  innerComponentIsNowListening() {\n    let childnodes = document.getElementsByTagName('input');\n    console.log(childnodes);\n    // listen for field inputs\n    // if values are typed in\n    if(childnodes){\n      for(let n=0; n < childnodes.length; n++){\n        let inputNode = childnodes[n];\n        if (inputNode){\n          inputNode.addEventListener(\n          'input', this.onParameterInput.bind(this), \n          false)\n          inputNode.addEventListener(\n          'onkeydown', this.onParameterInput.bind(this),\n          false)\n        }\n      }\n    }\n    // listen for click trigger\n    // if values are dynamically inserted\n    this.generate.addEventListener(\n      'click', this.onPlxClick.bind(this),\n      false);\n  }\n\n  onParameterInput (e) {\n    e.preventDefault();\n    let node = e.target;\n    this.inputDetectedOn(node);\n  }\n\n  onPlxClick (e) {\n    e.preventDefault();\n    this.removePlxClickListener();\n    this.inputCount = [];\n    let childnodes = document.getElementsByTagName('input');\n    console.log(childnodes);\n    if(childnodes){\n      let inputCount = [];\n      for(let n=0; n < childnodes.length; n++){\n        let node = childnodes[n];\n        // this.inputDetectedOn(node); \n        //   console.log(node);\n        if (node.value.length > 0){\n          inputCount.push(node);\n          this.inputDetectedOn(node); \n          console.log(node);\n        }\n      }\n\n      // if( this.inputCount.length >= 4){\n      //   this.buildClick();\n      // } else {\n      //   console.log('We only have these entries: ', inputCount);\n      //   alert('Please ensure all fields have valid data!')\n\n      if( inputCount.length >= 3){\n        this.buildClick();\n      } else {\n        console.log('We only have these entries: ', inputCount);\n        alert('Please ensure the following fields have valid data in the listed form inputs:\\n\\n\\bProject: 123456789 AND / OR ClientID: gme-xxxxx \\nAND \\nDate From: YYYY-MM-DD \\nDate To: YYYY-MM-DD');\n      }\n    }\n  }\n\n  inputDetectedOn(target){\n    let inputField = target\n    if ( inputField.classList.contains('input') && inputField.value ) {\n      this.validateInputOn(inputField);\n    }\n  }\n\n  validateInputOn (target) {\n    let inputField = target;\n        // use eval to dynamically invoke regEx functions that filter input\n        // based on target id as the ids are part of the function names.\n        // from `validate_input.js`.\n        // ex: `this.validator.is_project_number(value, validatorFunction)` < validate project number\n        // ex: `this.validator.is_case_number(value, validatorFunction)` < validate case number\n        let id = inputField.id;\n        console.log('Input to filter :: ' + id);\n        let filteredResult = eval('this.validator.is_'+ id)(inputField);\n        console.log('Does input match filter? :: ', filteredResult.matchesFilter);\n        this.validateOutputOn(filteredResult);\n  }\n\n  validateOutputOn (result) {\n    let validationCheck = result;\n    let input = validationCheck.input;\n    // this regEx tests the input.value to ensure\n    // there is no white-space in the tested result.\n    let regEx = /[^\\S+]/gi;\n    console.log(validationCheck);\n    if ( input.value ) {\n        console.log('Whitespace in input? :: ', regEx.test(input.value));\n              // add the property `validationcheck.valid`\n              // to be either true or false\n              super.setParameterValue(input.id, input.value);\n              if ( validationCheck.matchesFilter === true && regEx.test(input.value) === false ){\n                Object.defineProperty(validationCheck, 'valid', {value:true, writable: true});\n                this.inputCount.push(validationCheck);\n                this.final(validationCheck);\n              } else {\n                Object.defineProperty(validationCheck, 'valid', {value:false, writable: true});\n                this.inputCount.push(validationCheck);\n                this.final(validationCheck);\n             }    \n      }\n  }\n\n  final (finalResult) {\n      let final = finalResult;\n      let field = final.input;\n      let status = final.valid;\n      if ( final && status == true ) {\n        console.log('This', `${field.id}`, 'meets the minimum requirements'); \n        super.isValid(field, status);\n        return true;\n      } else if ( final && status == false ) {\n        super.isInvalid(field, status);\n        console.log('This does not meet the minimum requirements for a', `${field.id}`);\n        return false;\n      }\n        return false;\n  }\n\n  buildClick () {\n    this.generateScriptId();\n    this.paramBuild = '';\n    super.setScriptParamsTo(this.paramBuild);\n     const parameterEntries = Object.entries(super.getScriptParameterValues());\n     console.log(parameterEntries);\n     if(parameterEntries.length >= 1){\n         parameterEntries.forEach(( [key, value], index ) => {\n               this.paramBuild += `${key}` + ':' +`${value}`;\n                 if ( index !== parameterEntries.length - 1 ) {\n                   this.paramBuild += ',';\n                 }\n         });\n         console.log('String representation of parameter inputs :: ', this.paramBuild, '\\n');\n         this.setScriptLinkTo(this.paramBuild);    \n     }\n     this.clickPlxUrl();\n   }\n \n   generateScriptId() {\n     let script = super.getCurrentlySelectedScript();\n     const scriptId = `${script.id}?p=`;\n     super.setScriptIdTo(scriptId);\n   }\n \n   setScriptLinkTo(link){\n     super.setScriptParamsTo(link);\n     let URL  = super.getBasePlxUrl();\n     URL += super.getScriptId();\n     URL += super.getParameterInputs();\n     super.setFullUrlTo(URL);\n   }\n \n   clickPlxUrl() {\n     let url = super.getFullUrl();\n     function open (url){\n        let _window = window.open(url, '_blank');\n        _window.focus();\n \n      }\n     console.log(url, '\\n');\n     console.log('Object representation of current state :: ', this.myState);\n     open(url);\n   }\n}\n\n","import ScriptsModel from './model';\n\nexport default class ScriptsView extends ScriptsModel {\n  constructor (util, placeholders, viewPane) {\n    super(util);\n    this.utility = super.util;\n    this.placeholders = placeholders;\n    this.parentPane = viewPane;\n    this.emptyString = '';\n  }\n\n  initializeView() {\n    this.checkForScriptsContainer();\n  }\n\n  checkForScriptsContainer () {\n    if ( !this.primaryParent ) {\n          this.primaryParent = document.createElement('div');\n          this.primaryParent.id = 'scriptsPrimaryContainer';\n          this.primaryParent.classList.add('card');\n          this.primaryParent.classList.add('component');\n          this.primaryParentinnerHTML = ( () => {\n            return super.getScriptsParentHTML();\n          })();\n          this.primaryParent.innerHTML = this.primaryParentinnerHTML;\n          this.parentPane.insertBefore(\n            this.primaryParent,\n            this.parentPane.childNodes[0]);\n          this.grabInnerComponent();\n    } else {\n          this.resetContainerFor('all');\n    }\n  }\n\n  grabInnerComponent() {\n    this.scriptsListContainer = document.getElementById('plx-InnerCard');\n    this.scriptButtonContainer = document.getElementById('scriptButtonContainer');\n    // this.reset = document.getElementById('reset');\n    // this.reset.textContent = 'Reset';\n    this.close = document.getElementById('close_plx');\n    this.close.textContent = 'Close';\n    this.generate = document.getElementById('gen_plx');\n    this.generate.textContent = 'Go to PLX';\n    this.insert(super.getScripts());\n  }\n\n  insert (scripts) {\n    console.log('Plx scripts :: ', scripts);\n    scripts.forEach( (script, index ) => {\n      const li = document.createElement('li');\n      li.textContent = script.title;\n      li.classList.add('listed-item');\n      li.title = 'Click this title name to select the script or to reset your script selection.';\n      li.dataset.index = index;\n      this.scriptsListContainer.appendChild(li);\n    });\n    this.toggleScriptsContainer();\n  }\n\n  toggleScriptsContainer() {\n    this.primaryParent.classList.add('show');\n  }\n\n  resetContainerFor (level) {\n    if ( level === 'all' ){\n      this.resetChildren('children');\n      if ( this.primaryParent ) {\n        this.parentPane.removeChild(this.primaryParent);\n      } \n      this.primaryParent = null;\n    } else if ( level === 'children' ) {\n      this.resetChildren('children');\n    }\n  }\n\n  resetChildren(level) {\n    if ( level === 'children' ){\n      if ( super.getCurrentlySelectedScript === Element ){\n        this.removeActive(super.getCurrentlySelectedScript);\n      }\n      if ( this.params ) {\n           this.parametersInnerContainer.removeChild(this.params);\n      }\n      if ( this.secondaryParent ) {\n           this.scriptsListContainer.removeChild(this.secondaryParent);\n      }\n    }\n    this.params = null;\n    this.secondaryParent = null;\n  }\n\n  insertParametersContainer () {\n    if ( !this.secondaryParent ){\n          this.secondaryParent = document.createElement('div');\n          this.secondaryParent.classList.add('card');\n          this.secondaryParent.id = 'secondaryContainer';\n          this.secondaryParentinnerHTML = ( () => {\n            return super.getParametersParentHTML();\n          })();\n          this.secondaryParent.innerHTML = this.secondaryParentinnerHTML;\n          this.scriptsListContainer.insertAdjacentElement(\n            'afterbegin',\n            this.secondaryParent);\n          this.grabSecondaryComponent();\n    }\n  }\n\n  grabSecondaryComponent() {\n    this.cardInner = document.getElementById('card-inner');\n    this.parametersInnerContainer = document.getElementById('parameters');\n  }\n\n  toggleParamsContainer() {\n    this.secondaryParent.classList.add('show');\n  }\n\n  checkActiveOn (script) {\n    const item = script;\n    if ( item && item.classList.contains('listed-item' )){\n        if ( item.classList.contains('active' )){\n             this.removeActive(item);\n        } else {\n             this.resetListItems();\n             item.classList.add('active');\n             item.focus();\n        }\n    }\n  }\n\n  hideInactive(){\n    let items = document.getElementsByClassName('listed-item');\n    for(let i=0; i < items.length; i++){\n      let item = items[i];\n      if( !item.classList.contains('active')){\n        item.classList.toggle('inactive');\n      }\n    }\n  }\n\n  resetListItems() {\n    const items = document.getElementsByClassName('listed-item');\n    for ( let i = 0; i < items.length; i++ ){\n      const item = items[i];\n      if ( item.classList.contains('active' )){\n           this.removeActive(item);\n      }\n      if ( item.classList.contains('inactive')){\n           this.removeInactive(item);\n      }\n    }\n  }\n\n  removeActive (onListedItem) {\n    const item = onListedItem;\n    item.classList.remove('active');\n  }\n\n  removeInactive (onListedItem) {\n    const item = onListedItem;\n    item.classList.remove('inactive');\n  }\n\n  renderParams (parameters) {\n    if ( !this.params ){\n        this.params = document.createElement('div');\n        this.params.id = 'params';\n    }\n    this.parametersHtml = '';\n    parameters.forEach( (parameter) => {\n      this.parametersHtml += super.getParameterHTML(parameter);\n    });\n    this.params.innerHTML = this.parametersHtml;\n    this.parametersInnerContainer.insertBefore(this.params, this.parametersInnerContainer.childNodes[0]);\n    this.secondaryParent.classList.toggle('show');\n  }\n\n  matchParamsTo (placeholders) {\n    let parameterExample;\n    const fieldSamples = Object.entries(placeholders.parameters);\n    fieldSamples.forEach(( [key, value], index ) => {\n      parameterExample = document.getElementById(`${key}`);\n      if (parameterExample) {\n        parameterExample.setAttribute('placeholder', `${value}`);\n      }\n    });\n  }\n\n  isValid (input, status) {\n    let field = input;\n    console.log('Is ', field.id, 'valid? ', status, ' === ', field.value);\n    if( field && field.classList.contains('valid')){\n      console.log('Input is already marked as valid...');\n      } else if ( field && field.classList.contains('invalid')){\n          console.log('Input is now valid!');\n          field.classList.toggle('invalid');\n          field.classList.toggle('valid');\n      } else if ( field && !field.classList.toggle('valid')) {\n          console.log('Input has been initially marked as valid, great!');\n          field.classList.toggle('valid');\n      }\n  }\n\n  isInvalid (input, status) {\n    let field = input;\n    console.log('Is ', field.id, 'valid? ', status, ' ===', field.value);\n    if( field && field.classList.contains('invalid')){\n        console.log('Input is already marked as invalid...');\n    } else if ( field && field.classList.contains('valid')){\n        console.log('Input is no longer valid!');\n        field.classList.toggle('valid');\n        field.classList.toggle('invalid');\n    } else if ( field && !field.classList.toggle('invalid')) {\n        console.log('Input has been initially marked as invalid...');\n        field.classList.toggle('invalid');\n    }\n  }\n}\n\n","export default class ScriptsModel {\n  constructor(util) {\n    this.util = util;\n    this.initialState = {};\n    this.workingState = this.initialState;\n    this.myState = {};\n  }\n\n  /**\n   * Reduce lines of code with something like this:\n   *\n    Foo() {\n      let _acctNum = '';\n\n      return {\n          getAcctNum: function() {\n              return _acctNum;\n          },\n          setAcctNum: function (newAcctNum) {\n            _acctNum = newAcctNum;\n          },\n        }\n      }\n   *\n   */\n\n  setInitialStateObject() {\n    let state = {\n      statebasePlxUrl: 'http://plx/scripts2/',\n      id: '',\n      params: '',\n      parameters: {},\n      url: null,\n      currentlySelectedScript: '',\n      currentlySelectedScriptIndex: '',\n    };\n    this.initialState = state;\n    this.setInitialState(this.initialState);\n  }\n\n  setInitialState (initialState) {\n    this.workingState = initialState;\n  }\n\n  setMyStateToInitialWorkingState () {\n    this.setInitialStateObject();\n    this.myState = this.workingState;\n  }\n\n  setNewState (param1, param2) {\n    this.workingState = {};\n    let state = {\n      basePlxUrl: 'http://plx/scripts2/',\n      id: '',\n      params: '',\n      parameters: {},\n      url: null,\n      currentlySelectedScript: param1,\n      currentlySelectedScriptIndex: param2,\n    };\n    this.workingState = state;\n    this.setMyStateToWorkingState(this.workingState);\n  }\n\n  setMyStateToWorkingState(workingState) {\n    this.myState = workingState;\n  }\n\n  setScriptIdTo (id) {\n    this.myState.id = id;\n  }\n\n  setScriptParamsTo (params) {\n    this.myState.params = params;\n  }\n\n  setFullUrlTo (url) {\n    this.myState.url = url;\n  }\n\n  setParameterValue (parameterName, parameterValue) {\n    this.myState.parameters[parameterName] = parameterValue;\n  }\n\n  getScriptsParentHTML() {\n    this.scriptsParentHtml =\n       `<div id='scriptList' rel='plxScriptWindow' class=''>\n          <h2 class='card-header'>PLX Scripts</h2>\n          <ul id='scriptButtonContainer' class='buttonContainer'>\n              <button type='button' class='exitbtn' id='close_plx' title='Close this PLX Window.'></button>\n              <button type='button' id='gen_plx' class='exitbtn' title='Generate URL for PLX with case info.'></button>\n          </ul>\n          <ul class='card-inner' id='plx-InnerCard'></ul>\n        </div>`;\n    return this.scriptsParentHtml;\n    // const higher_order_template = require('./pug/higher_order_component.pug');\n    // async function template(fileTemplate){\n    //   this.inserts = {\n    //     parentId: 'scriptsParentHtml',\n    //     rel: 'plxScriptWindow',\n    //     secondaryId: 'scriptButtonContainer'\n    //   };\n      \n    //   const pugModule = import(/* webpackChunkName: \"pug\" */ 'pug').then(module => {\n    //      const pug = module.default;\n    //      async function generateTemplate(pug){\n    //       const file = pug.compileFile(fileTemplate);\n    //       return file;\n    //      }\n    //      return template = generateTemplate(pug);\n    //     });\n      \n    //   };\n\n    // return template(higher_order_template);\n  }\n\n  getParametersParentHTML() {\n    this.parametersParentHTML =\n      `<div id='card-inner' class='card-inner'>\n          <h2 class='card-header'>Parameters</h2>\n          <div id='parameters'><form></form></div>\n      </div>`;\n    return this.parametersParentHTML;\n  }\n\n  getParameterHTML (parameter) {\n    let paramaterHtml;\n    if (parameter === 'date_from_YYYY_MM_DD' || parameter === 'date_to_YYYY_MM_DD'){\n      if (parameter === 'date_from_YYYY_MM_DD'){\n        paramaterHtml =\n        `<div class='parameter'>\n                <label for='${parameter}'>Date From:</label>\n                <input type='text' size='20' maxlength='10' class='input' id='${parameter}' placeholder=''required>\n        </div>`;\n      }\n      else if (parameter === 'date_to_YYYY_MM_DD') {\n        paramaterHtml =\n        `<div class='parameter'>\n              <label for='${parameter}'>Date To:</label>\n              <input type='text' size='20' maxlength='10' class='input' id='${parameter}' placeholder='' required>\n        </div>`;\n      }\n    } else if (parameter === 'project_number') {\n      paramaterHtml =\n        `<div class='parameter'>\n              <label for='${parameter}'>Project:</label>\n              <input type='text' name='project' size='20' class='input' id='${parameter}' placeholder='' autofocus required>\n        </div>`;\n    } else if (parameter === 'client_id') {\n      paramaterHtml =\n        `<div class='parameter'>\n              <label for='${parameter}'>ClientID (if applicable):</label>  \n              <input type='text' name='clientID' size='20' class='input' id='${parameter}' placeholder='' required>\n        </div>`;\n    }\n    // if (parameter === 'date_from_YYYY_MM_DD' || parameter === 'date_to_YYYY_MM_DD'){\n    //   if (parameter === 'date_from_YYYY_MM_DD'){\n    //     paramaterHtml =\n    //     `<div class='innerParam'>\n    //           <p class='parameter'>\n    //             <label for='${parameter}'>Date From</label>\n    //             <input type='text' size='20' maxlength='10' class='input' id='${parameter}' placeholder=''required>\n    //           </p>\n    //       </div>`;\n    //   }\n    //   else if (parameter === 'date_to_YYYY_MM_DD') {\n    //     paramaterHtml =\n    //     `<div class='innerParam'>\n    //           <p class='parameter'>\n    //               <label for='${parameter}'>Date To</label>\n    //           </p>\n    //           <p>\n    //             <input type='text' size='20' maxlength='10' class='input' id='${parameter}' placeholder='' required>\n    //           </p>\n    //       </div>`;\n    //   }\n    // } else if (parameter === 'project_number') {\n    //   paramaterHtml =\n    //     `<div class='innerParam'>\n    //           <p class='parameter'>\n    //               <label for='${parameter}'>Project</label>\n    //           </p>\n    //           <p>\n    //             <input type='text' name='project' size='20' class='input' id='${parameter}' placeholder='' autofocus required>\n    //           </p>\n    //       </div>`;\n    // } else if (parameter === 'client_id') {\n    //   paramaterHtml =\n    //     `<div class='innerParam'>\n    //           <p class='parameter'>\n    //               <label for='${parameter}'>ClientID (if applicable)</label>\n    //           </p>\n    //           <p>\n    //             <input type='text' name='clientID' size='20' class='input' id='${parameter}' placeholder='' required>\n    //           </p>\n    //       </div>`;\n    // }\n    return paramaterHtml;\n  }\n\n  getScripts() {\n    this.scripts = [\n      //  {\n      //     title: 'API usage for specified mafe_weblog API by IP',\n      //     id: 'script_5b._a15f62_0000_2cc9_bcc5_001a11404b34',\n      //     parameters: {\n      //       'case_number': '',\n      //       'ip_range': '',\n      //       'query_type': '',\n      //       'api_endpoint_type': '',\n      //       'table_suffix': '',\n      //       'project_number': '',\n      //       'client_id': '',\n      //       },\n      //     },\n      //     {\n      //       title: 'QPS breakdown from Web-Service',\n      //       id: 'script_5b._a16102_0000_254d_940f_089e0822b400',\n      //       parameters: {\n      //         'table_column': '',\n      //         'project_number': '',\n      //         'date_from_YYYY_MM_DD': '',\n      //         'date_to_YYYY_MM_DD': '',\n      //       },\n      //   },\n          // {\n          //   title: 'Daily client and web service requests project and API key',\n          //   id: 'script_5b._4e734f_0000_2d6d_af2d_94eb2c05a52e',\n          //   parameters: {\n          //     'client_id': '',\n          //     'project_number': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n          // {\n          //   title: 'Daily client-side requests per Day & API key',\n          //   id: 'script_5d._03c800_0000_2a6b_85d2_883d24f8e3d4',\n          //   parameters: {\n          //     'client_id': '',\n          //     'project_number': '',\n          //     // 'api_key': '',\n          //     // 'domain': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n          {\n            title: 'Daily requests by API key & Channel',\n            id: 'script_5b._4e734f_0000_2d6d_af2d_94eb2c05a52e',\n            parameters: {\n              'project_number': '',\n              'client_id': '',\n              // 'api_key': '',\n              // 'domain': '',\n              'date_from_YYYY_MM_DD': '',\n              'date_to_YYYY_MM_DD': '',\n            },\n          },\n          // {\n          //   title: 'Total client-side requests by Domain, API key & Days Used',\n          //   id: 'script_5d._03c5d4_0000_2961_9985_24058873f66c',\n          //   parameters: {\n          //     'client_id': '',\n          //     'project_number': '',\n          //     // 'api_key': '',\n          //     // 'domain': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n          {\n            title: 'Total URL Stats(redacted ) by URL, Domain, Project & Days Used',\n            id: 'script_5d._07f69f_0000_21a9_b028_f403043e7540',\n            parameters: {\n              'project_number': '',\n              'client_id': '',\n              // 'url': '',\n              // 'api_key': '',\n              // 'domain': '',\n              'date_from_YYYY_MM_DD': '',\n              'date_to_YYYY_MM_DD': '',\n            },\n          },\n          {\n            title: 'GeoStats Domain & Web-services w/ IP obfuscation',\n            id: 'script_5d._5ef884_0000_2398_b5bf_089e082dbdd4',\n            parameters:{\n              'project_number': '',\n              'client_id': '',\n              // 'url': '',\n              // 'api_key': '',\n              // 'domain': '',\n              'date_from_YYYY_MM_DD': '',\n              'date_to_YYYY_MM_DD': '',\n\n            },\n          },\n          {\n            title: 'Historic Maps APIs: Daily client and web service requests',\n            id: 'script_5d._7814be_0000_2f72_80a4_001a11405cb4',\n            parameters: {\n                    'project_number': '',\n                    'client_id': '',\n                    'date_from_YYYY_MM_DD': '',\n                    'date_to_YYYY_MM_DD': '',\n                  },\n          },\n          // {\n          //   title: 'Places Autocomplete Sessions V2',\n          //   id: 'maps_support_recent_places_autocomplete_sessions2',\n          //   parameters: {\n          //     'client_id': '',\n          //     'project_number': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n          // {\n          //   title: 'User-Agent script - provided by Seth S.',\n          //   id: 'script_5d._5f020f_0000_2cfb_9763_001a11c0ea40 ',\n          //   parameters: {\n          //     'client_id': '',\n          //     'project_number': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n    ];\n    return this.scripts;\n  }\n\n  getScript (index) {\n    return this.scripts[index];\n  }\n\n  getCurrentlySelectedScript() {\n    return this.scripts[this.getCurrentlySelectedScriptIndex()];\n  }\n\n  getCurrentlySelectedScriptIndex() {\n    return this.myState.currentlySelectedScriptIndex;\n  }\n\n  getStateCurrentlySelectedScript () {\n    return this.myState.currentlySelectedScript;\n  }\n\n  getStateCurrentlySelectedScriptIndex () {\n    return this.myState.currentlySelectedScriptIndex;\n  }\n\n  getNewWorkingState (index, script) {\n    let workingState = this.setNewState(script, index);\n    return workingState;\n  }\n\n  getParameterNames (scriptIndex) {\n    return Object.keys(this.scripts[scriptIndex].parameters);\n  }\n\n  getParameterInputs () {\n    return this.myState.params;\n  }\n\n  getBasePlxUrl() {\n    return this.myState.basePlxUrl;\n  }\n\n  getScriptId() {\n    return this.myState.id;\n  }\n\n  getScriptParameterValues() {\n    return this.myState.parameters;\n  }\n\n  getFullUrl() {\n    return this.myState.url;\n  }\n}\n","module.exports = __webpack_public_path__ + \"c373a2ace3191dfe7fd1dfd8a5b492e5.html\";","import MapView from './view';\n\nexport default class MapController extends MapView {\n  constructor ( util, placeholders, mapButton, viewPane, key, head ) {\n        super(placeholders, viewPane);\n        this.mapButton = mapButton;\n        this.apikey = key;\n        this.head = head;\n        this.validator = util; //form input validation class\n  }\n\n  init(){\n    super.initializeView();\n    this.isNowListening();\n  }\n\n  isNowListening(){\n  }\n}\n","import MapModel from './model';\n\nexport default class MapView extends MapModel{\n    constructor (placeholders, viewPane) {\n    super();\n    this.placeholders = placeholders;\n    this.parentPane = viewPane;\n    this.emptyString = '';\n  }\n\n    initializeView(){\n        if ( !this.primaryParent ) {\n            this.primaryParent = document.createElement('div');\n            this.primaryParent.id = 'mapPrimaryContainer';\n            this.primaryParent.classList.add('card');\n            this.primaryParent.classList.add('component');\n            this.primaryParentinnerHTML = ( () => {\n                return super.getMapParentHTML()\n            })();\n            this.primaryParent.innerHTML = this.primaryParentinnerHTML;\n            this.parentPane.insertBefore(\n            this.primaryParent,\n            this.parentPane.childNodes[0]);\n            this.grabInnerComponent();\n            // insert static map primary container\n        } else {\n                this.resetPrimaryContainerFor('all');\n                // remove scripts primary container if it exists.\n        }\n    }\n\n    grabInnerComponent(){\n      this.secondaryParent = document.createElement('div');\n      this.secondaryParent.id = 'mapSecondary';\n      this.secondaryParentInnerHTML =( ()=>{\n        return super.getMapSecondaryHTML();\n      })();\n      this.secondaryParent.innerHTML= this.secondaryParentInnerHTML;\n      this.iframe = document.createElement('iframe');\n      this.iframe.id = 'testIframe';\n      this.iframe.src = require('./index.html');\n      console.log(this.iframe.src);\n      this.secondaryParent.appendChild(this.iframe);\n      this.primaryParent.appendChild(this.secondaryParent);\n    }\n\n    resetPrimaryContainerFor (level) {\n        if ( level === 'all' ){\n          this.resetChildren('children');\n          if ( this.primaryParent ) {\n            this.parentPane.removeChild(this.primaryParent);\n          }\n          this.primaryParent = null;\n        } else if ( level === 'children' ) {\n          this.resetChildren('children');\n        } else if ( level === 'link' ) {\n          this.resetChildren('link');\n        }\n      }\n    resetChildren(level) {\n        // if ( level == 'children' ){\n        // if (  ){\n        // }\n        // if (  ){\n        // }\n        // if (  ) {\n        // }\n        // if (  ) {\n        //\n        // } else if (  ){\n        //     if (  ){       \n        //     }\n        // }\n    }\n\n    setNull (element) {\n        if ( element ){\n        if ( element.id == '' ){\n            element.removeAttribute('href');\n        }\n        super.setFullUrlTo(this.emptyString);\n        element = null;\n        }\n    }\n}\n","export default class MapModel {\n  constructor(){\n\n  }\n\n  getMapParentHTML(){\n    this.scriptsParentHtml =\n       `<div id='mapMain' rel='mapTester' class=''>\n          <h2 class='card-header'>Dynamic Map Testing</h2>\n          <ul id='mapButtonContainer' class='buttonContainer'>\n              <button type='button' class='exitbtn' id='close_static' title='Close this Map Window.'></button>\n              <button type='button' id='gen_map' class='exitbtn' title='Generate Map w/ options config.'></button>\n          </ul>\n          \n        </div>`;\n    return this.scriptsParentHtml;\n  }\n\n  getMapSecondaryHTML(){\n    this.secondaryHTML = \n      `<div id=\"mapInner\" class=\"card-inner\">\n          <ul class=\"card\">\n          <p>JS API V3</p>\n          <p>\n              <label for=\"center\">Center:</label>\n              <input id=\"center\" size='40' placeholder=\" Austin, TX \">\n          </p>\n          <p>\n              <label for=\"zoom\">Zoom:</label>\n              <input id=\"zoom\" size='40' maxlength='2'placeholder=\" 14 (Accepts 1-20)\">\n          </p>\n          <p>\n              <label for=\"size\">Size:</label>\n              <input id=\"size\" size='40' maxlength='9' placeholder=\" 400x400 || 2048x2048(PP) \">\n          </p>\n          <p>\n            <label for=\"scale\">Scale:</label>\n            <input id=\"scale\" size='40' maxlength='2' placeholder=\" 2 || 4 (default is 1) \">\n          </p>\n          </ul>\n      </div>`;\n    return this.secondaryHTML;\n  }\n\n}\n","import StaticWSView from './view';\n\nexport default class StaticWSController extends StaticWSView {\n  constructor ( util, placeholders, mapStaticButton, viewPane, key, head ) {\n        super(placeholders, viewPane);\n        this.staticButton = mapStaticButton;\n        this.apikey = key;\n        this.head = head;\n        this.validator = util; //form input validation class\n  }\n\n  init(){\n    super.initializeView();\n    this.isNowListening();\n  }\n\n  isNowListening(){\n\n  }\n}\n","import StaticWSModel from './model';\n\nexport default class StaticWSView extends StaticWSModel{\n    constructor (placeholders, viewPane) {\n    super();\n    this.placeholders = placeholders;\n    this.parentPane = viewPane;\n    this.emptyString = '';\n  }\n\n    initializeView(){\n        if ( !this.primaryParent ) {\n            this.primaryParent = document.createElement('div');\n            this.primaryParent.id = 'staticMapPrimaryContainer';\n            this.primaryParent.classList.add('card');\n            this.primaryParent.classList.add('component');\n            this.primaryParentinnerHTML = ( () => {\n                return super.getStaticMapParentHTML()\n            })();\n            this.primaryParent.innerHTML = this.primaryParentinnerHTML;\n            this.parentPane.insertBefore(\n            this.primaryParent,\n            this.parentPane.childNodes[0]);\n            this.grabInnerComponent();\n            // insert static map primary container\n        } else {\n                this.resetPrimaryContainerFor('all');\n                // remove scripts primary container if it exists.\n        }\n    }\n\n    grabInnerComponent(){\n      this.secondaryParent = document.createElement('div');\n      this.secondaryParent.id = 'staticSecondary';\n      this.secondaryParentInnerHTML =( ()=>{\n        return super.getStaticSecondaryHTML();\n      })();\n      this.secondaryParent.innerHTML= this.secondaryParentInnerHTML;\n      this.primaryParent.appendChild(this.secondaryParent);\n    }\n\n    resetPrimaryContainerFor (level) {\n        if ( level === 'all' ){\n          this.resetChildren('children');\n          if ( this.primaryParent ) {\n            this.parentPane.removeChild(this.primaryParent);\n          }\n          this.primaryParent = null;\n        } else if ( level === 'children' ) {\n          this.resetChildren('children');\n        } else if ( level === 'link' ) {\n          this.resetChildren('link');\n        }\n      }\n    resetChildren(level) {\n        // if ( level == 'children' ){\n        // if (  ){\n        // }\n        // if (  ){\n        // }\n        // if (  ) {\n        // }\n        // if (  ) {\n        //\n        // } else if (  ){\n        //     if (  ){       \n        //     }\n        // }\n    }\n\n    setNull (element) {\n        if ( element ){\n        if ( element.id == '' ){\n            element.removeAttribute('href');\n        }\n        super.setFullUrlTo(this.emptyString);\n        element = null;\n        }\n    }\n}\n","export default class StaticWSModel {\n  constructor(){\n\n  }\n\n  getStaticMapParentHTML(){\n    this.scriptsParentHtml =\n       `<div id='staticMain' rel='staticTester' class=''>\n          <h2 class='card-header'>Static Map W/S Testing</h2>\n          <ul id='wsButtonContainer' class='buttonContainer'>\n              <button type='button' class='exitbtn' id='close_static' title='Close this Static Window.'></button>\n              <button type='button' id='gen_static' class='exitbtn' title='Generate URL for Static Map testing.'></button>\n          </ul>\n          <ul class='card-inner' id='static-InnerCard'></ul>\n        </div>`;\n    return this.scriptsParentHtml;\n  }\n\n  getStaticSecondaryHTML(){\n    this.secondaryHTML = \n      `<div id=\"staticInner\" class=\"card component\">\n          <p>https://maps.googleapis.com/maps/api/staticmap?</p>\n          <p>\n              <label for=\"center\">Center:</label>\n              <input id=\"center\" size='40' placeholder=\" Austin, TX \">\n          </p>\n          <p>\n              <label for=\"zoom\">Zoom:</label>\n              <input id=\"zoom\" size='40' maxlength='2'placeholder=\" 14 (Accepts 1-20)\">\n          </p>\n          <p>\n              <label for=\"size\">Size:</label>\n              <input id=\"size\" size='40' maxlength='9' placeholder=\" 400x400 || 2048x2048(PP) \">\n          </p>\n          <p>\n            <label for=\"scale\">Scale:</label>\n            <input id=\"scale\" size='40' maxlength='2' placeholder=\" 2 || 4 (default is 1) \">\n          </p>\n      </div>`;\n    return this.secondaryHTML;\n  }\n\n}\n","import StaticWSView from './view';\n\nexport default class StaticWSController extends StaticWSView {\n  constructor ( util, placeholders, mapStaticButton, viewPane, key, head ) {\n        super(placeholders, viewPane);\n        this.staticButton = mapStaticButton;\n        this.apikey = key;\n        this.head = head;\n        this.validator = util; //form input validation class\n  }\n\n  init(){\n    super.initializeView();\n    this.isNowListening();\n  }\n\n  isNowListening(){\n\n  }\n}\n","import DremelModel from './model';\n\nexport default class DremelView extends DremelModel{\n    constructor (placeholders, viewPane) {\n    super();\n    this.placeholders = placeholders;\n    this.parentPane = viewPane;\n    this.emptyString = '';\n  }\n\n    initializeView(){\n        if ( !this.primaryParent ) {\n            this.primaryParent = document.createElement('div');\n            this.primaryParent.id = 'dremelPrimaryContainer';\n            this.primaryParent.classList.add('card');\n            this.primaryParent.classList.add('component');\n            this.primaryParentinnerHTML = ( () => {\n                return super.getDremelParentHTML()\n            })();\n            this.primaryParent.innerHTML = this.primaryParentinnerHTML;\n            this.parentPane.insertBefore(\n            this.primaryParent,\n            this.parentPane.childNodes[0]);\n            this.grabInnerComponent();\n            // insert static map primary container\n        } else {\n                this.resetPrimaryContainerFor('all');\n                // remove scripts primary container if it exists.\n        }\n    }\n\n    grabInnerComponent(){\n      this.secondaryParent = document.createElement('div');\n      this.secondaryParent.id = 'dremelSecondary';\n      this.secondaryParentInnerHTML =( ()=>{\n        return super.getDremelSecondaryHTML();\n      })();\n      this.secondaryParent.innerHTML= this.secondaryParentInnerHTML;\n      this.primaryParent.appendChild(this.secondaryParent);\n    }\n\n    resetPrimaryContainerFor (level) {\n        if ( level === 'all' ){\n          this.resetChildren('children');\n          if ( this.primaryParent ) {\n            this.parentPane.removeChild(this.primaryParent);\n          }\n          this.primaryParent = null;\n        } else if ( level === 'children' ) {\n          this.resetChildren('children');\n        } else if ( level === 'link' ) {\n          this.resetChildren('link');\n        }\n      }\n    resetChildren(level) {\n        // if ( level == 'children' ){\n        // if (  ){\n        // }\n        // if (  ){\n        // }\n        // if (  ) {\n        // }\n        // if (  ) {\n        //\n        // } else if (  ){\n        //     if (  ){       \n        //     }\n        // }\n    }\n\n    setNull (element) {\n        if ( element ){\n        if ( element.id == '' ){\n            element.removeAttribute('href');\n        }\n        super.setFullUrlTo(this.emptyString);\n        element = null;\n        }\n    }\n}\n","export default class DremelModel {\n  constructor(){\n\n  }\n\n  getDremelParentHTML(){\n    this.scriptsParentHtml =\n       `<div id='dremelMain' rel='dremel' class=''>\n          <h2 class='card-header'>Dremel Scripts</h2>\n          <ul id='dremelButtonContainer' class='buttonContainer'>\n              <button type='button' class='exitbtn' id='close_dremel' title='Close this Dremel Window.'></button>\n              <button type='button' id='gen_dremel' class='exitbtn' title='Generate URL for Dremel query.'></button>\n          </ul>\n          <ul class='card-inner' id='dremel-InnerCard'></ul>\n        </div>`;\n    return this.scriptsParentHtml;\n  }\n\n  getDremelSecondaryHTML(){\n    this.secondaryHTML = \n      `<div id=\"dremelInner\" class=\"card\">\n          <p>\n              <label for=\"center\">Center:</label>\n              <input id=\"center\" size='40' placeholder=\" Austin, TX \">\n          </p>\n          <p>\n              <label for=\"zoom\">Zoom:</label>\n              <input id=\"zoom\" size='40' maxlength='2'placeholder=\" 14 (Accepts 1-20)\">\n          </p>\n          <p>\n              <label for=\"size\">Size:</label>\n              <input id=\"size\" size='40' maxlength='9' placeholder=\" 400x400 || 2048x2048(PP) \">\n          </p>\n          <p>\n            <label for=\"scale\">Scale:</label>\n            <input id=\"scale\" size='40' maxlength='2' placeholder=\" 2 || 4 (default is 1) \">\n          </p>\n      </div>`;\n    return this.secondaryHTML;\n  }\n\n}\n","import { cl_ApiKey } from '../utilities/api_key.js';\nimport AppView from './view.js';\nimport ScriptsController from '../plx/controller.js';\nimport MapsController from '../dynamic_map_modules/maps_base/controller.js';\nimport StaticWSController from '../static_map/controller.js';\nimport DremelController from '../dremel/controller.js'\n\nexport default class AppController extends AppView {\n  constructor(Util, require) {\n    super();\n    this.util = new Util();\n    this.require = require;\n    this.cl_apiKey = cl_ApiKey;\n    this.actionButtons = [];\n    this.onLoadCheckForActionButtons();\n  }\n\n  onLoadCheckForActionButtons() {\n    for (let i = 0; i < this.viewsButtons.length; i++){\n      let button = this.viewsButtons[i];\n      this.actionButtons.push(button);\n    }\n    this.loadControllers();\n  }\n\n  loadControllers() {\n    this.instantiateControllersWith(\n          this.util,\n          super.getParametersList(),\n          this.mapsButton,\n          this.plxButton,\n          this.staticMapButton,\n          this.dremelButton,\n          this.head,\n          this.cl_apiKey,\n          this.viewsPane,);\n  }\n\n  instantiateControllersWith (util, placeholders, mapsButton, plxButton, staticButton, dremelButton, head, cl_apiKey, viewsPane) {\n    if (!this.scriptsController){\n        this.scriptsController = new ScriptsController(util, placeholders, plxButton, viewsPane);\n    }\n    if (!this.StaticWSController){\n      this.staticWSController = new StaticWSController (util, placeholders, staticButton, viewsPane, cl_apiKey, head);\n    }\n    if (!this.mapsController){\n    this.mapsController = new MapsController (util, placeholders, mapsButton, viewsPane, cl_apiKey, head);\n    }\n\n    if (!this.dremelController){\n      this.dremelController = new DremelController(util, placeholders, dremelButton, viewsPane);\n    }\n    this.controllerIsNowlistening();\n  }\n\n  controllerIsNowlistening() {\n    window.addEventListener('resize', this.windowEvent, false);\n    this.actionButtons.forEach( (button) => {\n      if (button.id === 'menu_button'){\n        button.focus();\n      }\n      button.addEventListener(\n        'click', this.oneButtonWasClicked.bind(this),\n        true);\n    });\n  }\n\n  windowEvent() {\n    super.resize();\n    super.logView();\n  }\n\n  oneButtonWasClicked (e) {\n    e.preventDefault();\n    if (e.target.id === 'plx_button'){\n        this.plxShouldLoad();\n        super.menuItemClicked();\n    } else if (e.target.id === 'menu_button'){\n        this.menuShouldRender();\n    } else if (e.target.id === 'maps_button') {\n        this.mapShouldLoad();\n        super.menuItemClicked();\n    } else if (e.target.id === 'dremel_button') {\n        this.dremelShouldLoad();\n        super.menuItemClicked();\n    } else if (e.target.id === 'static_map_button') {\n        this.staticMapShouldLoad();\n        super.menuItemClicked();\n    }\n    super.checkAttachedPanes();\n    console.log('SPA App-level controller :: ', this);\n  }\n\n  menuShouldRender() {\n    super.menuClicked();\n  }\n\n  plxShouldLoad() {\n    this.scriptsController.init();\n  }\n\n  staticMapShouldLoad() {\n    this.staticWSController.init();\n  }\n  \n  mapShouldLoad() {\n    this.mapsController.init();\n  }\n\n  dremelShouldLoad() {\n    this.dremelController.init();\n  }\n\n}\n\n","import AppModel from './model';\n\nexport default class AppView extends AppModel {\n  constructor () {\n    super ();\n    this.head = document.getElementsByTagName('head')[0];\n    this.viewsButtons = document.getElementsByClassName('dropbtn');\n    this.mainMenu = document.getElementById('main_menu');\n    this.menuBotton = document.getElementById('menu_title');\n    this.menuButtons = document.getElementById('menu_options');\n    this.plxButton = document.getElementById('plx_button');\n    this.plxButton.textContent = 'PLX Scripts';\n    // this.mapsButton = document.getElementById('maps_button');\n    // this.mapsButton.textContent = 'Dynamic Map Testing';\n    // this.dremelButton = document.getElementById('dremel_button');\n    // this.dremelButton.textContent = 'Dremel';\n    // this.staticMapButton = document.getElementById('static_map_button');\n    // this.staticMapButton.textContent = 'Static Map W/S Tester';\n    this.firstHalf = document.getElementById('firstHalf');\n    this.secondHalf = document.getElementById('secondHalf');\n    this.results = document.getElementById('results');\n    this.viewsPane = document.getElementById('views_pane');\n    // this.wsButton = document.getElementById('ws_button');\n    // this.wsButton.textContent = 'WS Tester';\n    this.secondHalf.insertBefore(this.viewsPane, this.secondHalf.childNodes[0]);\n    this.viewportWidth;\n    this.viewportHeight\n    this.minimumWindow;\n  }\n\n  menuClicked() {\n    this.menuButtons.classList.toggle('visible');\n    this.firstHalf.classList.toggle('visible');\n    if ( this.actionButtons[0]){\n         this.actionButtons[0].focus();\n    }\n  }\n\n  menuItemClicked() {\n    this.menuClicked();\n  }\n\n  checkAttachedPanes () {\n     if (this.views.iterable_views !== []){\n        this.viewsListHasChildNodes ();\n     } else {\n        super.resetChildViews ();\n        let views = this.viewsPane.childNodes;\n        this.views.non_iterableViews = views;\n        this.checkAndListChildNodes(this.views.non_iterableViews);\n     }\n  }\n\n  viewsListHasChildNodes() {\n    super.resetChildViews();\n    let views = this.viewsPane.childNodes;\n    this.checkAndListChildNodes(views);\n    this.checkEachViewIndex();\n  }\n\n  checkAndListChildNodes (views) {\n    for (let i = 0; i < views.length; i++){\n      let iteratedView = views[i];\n      // let index = i;\n      let objectView = {\n        view: iteratedView,\n        count: i\n      };\n      super.setNewChildView(objectView);\n    }\n  }\n\n  checkEachViewIndex () {\n    if (this.views.iterable_views.length > 0){\n      console.table('Child componenets of the SPA :: ', this.views.iterable_views);\n      this.views.iterable_views.forEach(this.setOrder);\n    }\n  }\n\n  setOrder(viewObject, i, arr){\n      let object = viewObject;\n          object.view.style.order = `${i}`;\n          object.count = [i];\n  }\n\n  resize(){\n    // console.log('Window resize');\n    this.viewportWidth = window.innerWidth || document.documentElement.clientWidth;\n    this.viewportHeight = window.innerHeight || document.documentElement.clientHeight;\n    this.minimumWindow = [700, 520];\n    let current = [this.viewportWidth, this.viewportHeight];\n    let ceiling = [];\n    let i = 2;\n    while(i-- > 0){\n      ceiling[i] = this.minimumWindow[i] > current[i] ? this.minimumWindow[i] : current[i];\n    }\n    console.log(`Ceiling:: W=${ceiling[0]}, H=${ceiling[1]}`)\n    if (this.viewportWidth > 640) {\n      console.log('Current width:: ', current[0], 'Current Height:: ', current[1]);\n    } else {\n      console.log('Width to restrict by:: ', current[0], 'Height to restrict by:: ', current[1]);\n    }\n  }\n\n  logView(){\n    // console.log(this.minimum);\n    if (this.viewportWidth > 640){\n      console.log(`WIDE :: W=${this.viewportWidth}, H=${this.viewportHeight}`);\n    } else {\n      console.log(`SMALL :: W=${this.viewportWidth}, H=${this.viewportHeight}`);\n    }\n  }\n}\n","export default class AppModel {\n  constructor() {\n    this.placeholders = [{\n      parameters: {\n        'case_number': 'Unify case number',\n        'ip_range': '10.0.0.0/32 1234:5678::/48',\n        'query_type': 'Geocoding_API_query/Place_API_details_query',\n        'api_endpoint_type': 'Endpoint_Javascript_API/_Web_Service',\n        'table_suffix': '20180503, last3days, latest, all',\n        'project_number': '1234567891012',\n        'client_id': 'gme-XXXXX',\n        'date_from_YYYY_MM_DD': 'YYYY-MM-DD',\n        'date_to_YYYY_MM_DD': 'YYYY-MM-DD',\n        'api_key': 'AIzaSy***********',\n        'table_column': 'QPS column in logs.web_service_qps.all- \"places\"',\n        'domain': 'domain.com',\n        'url': 'domain.com/path',\n      },\n    }];\n    this.views = {};\n  }\n\n  resetChildViews () {\n    this.views.non_iretableViews = null;\n    this.views.iterable_views = [];\n  }\n\n  getChildViews () {\n    return this.views.iterable_views;\n  }\n\n  setNewChildView (view) {\n    this.views.iterable_views.push(view);\n  }\n\n  getFieldSamples () {\n    return this.placeholders;\n  }\n\n  getParametersList () {\n    return this.placeholders[0];\n  }\n\n  getParameterValues () {\n    return Object.valueOf(this.placeholders[0].parameters);\n  }\n\n  getParameterKeys () {\n    return Object.keys(this.placeholders[0].parameters);\n  }\n}\n","\n// require(['require', 'strip-ansi'], (require)=> {\n//   let module_ = require('strip-ansi');\n//   return module_;\n// });\nimport '../../.././css/dyn_map.css';\nimport '../../.././css/index.css';\nimport Util from './util';\nimport AppController from '../main_app/controller';\n\nexport default (function initialize(util) {\n  return new AppController(util);\n  \n})(Util);\n\n\n\n","import Validate from './validate_input.js';\n\nexport default class Util extends Validate {\n\tconstructor () {\n\t\tsuper();\n\t}\n\n\tclearConsole () {\n\t\tconsole.clear();\n\t}\n\n\tlog (data) {\n\t\tconsole.log(data);\n\t}\n}","import Test from './test';\n\nexport default class Validate extends Test {\n    constructor() {\n        super();\n    }\n\n    is_client_id(input) {\n        console.log(input, 'Input value:: ', input.value);\n        let field = input;\n        let filterRegEx = /[^a-z-0-9]{1,25}/gi;\n        let matchRegEx = /[a-z]{3}-[a-z0-9]{2,25}/gi;\n        let test = {\n            result: super.test(field, filterRegEx, matchRegEx)\n        };      \n        return test.result;\n    }\n\n    is_case_number(input) {\n        console.log(input, 'Input value:: ', input.value);\n        let field = input;\n        let filterRegEx = /[^0-9]{1,8}/g;\n        let matchRegEx = /[0-9]{6,8}/g;\n        let test = {\n            result: super.test(field, filterRegEx, matchRegEx)\n        };      \n        return test.result;\n    }\n\n    is_project_number(input) {\n        console.log(input, 'Input value:: ', input.value);\n        let field = input;\n        let filterRegEx = /[^0-9]{1,12}/g;\n        let matchRegEx = /[0-9]{8,12}/g;\n        let test = {\n            result: super.test(field, filterRegEx, matchRegEx)\n        };      \n        return test.result;\n    }\n\n    is_date_from_YYYY_MM_DD(input) {\n        console.log(input, 'Input value:: ', input.value);\n        let field = input;\n        let filterRegEx = /[^-0-9]{1,10}/g;\n        let matchRegEx = /[0-9]{4}-[0-9]{2}-[0-9]{2}/g;\n        let test = {\n            result: super.test(field, filterRegEx, matchRegEx)\n        };      \n        return test.result;\n    }\n\n    is_date_to_YYYY_MM_DD(input) {\n        console.log(input, 'Input value:: ', input.value);\n        let field = input;\n        let filterRegEx = /[^-0-9]{1,10}/g;\n        let matchRegEx = /[0-9]{4}-[0-9]{2}-[0-9]{2}/g;\n        let test = {\n            result: super.test(field, filterRegEx, matchRegEx)\n        };      \n        return test.result;\n    }\n}\n\n    // isNumberField (minLimit, maxLimit, input) {\n    //     let min = minLimit;\n    //     let max = maxLimit;\n    //     let limit = `{${min}},${max}}`;\n    //     let filterRegEx = `/[^0-9]${limit}+$/g;`\n    //     let matchRegEx = `/[0-9]${limit}+$/g`;\n    //     console.log(input, input.value);\n    //     let field = input;\n    //     let result = {\n    //         isFiltered: matchRegEx.test(field.value),\n    //         input: field,\n    //     };\n    //     if ( field.value.search(filterRegEx) > -1 ) {\n    //         field.value = field.value.replace(filterRegEx, \"\");\n    //         let result = {\n    //             isFiltered: matchRegEx.test(field.value),\n    //             input: field,\n    //         };\n    //     return result;\n    //     }\n    //     return result;\n    // }\n\n    // isMixedField (minLimit, maxLimit, input) {\n    //     let min = minLimit;\n    //     let max = maxLimit;\n    //     let limit = `{${min}},${max}}`;\n    //     let filterRegEx = `/[^a-z0-9]${limit}/gi`;\n    //     console.log(input, input.value);\n    //     let field = input;\n    //     let result = {\n    //         isFiltered: matchRegEx.test(field.value),\n    //         input: field,\n    //     };\n    //     if ( field.value.search(filterRegEx) > -1 ) {\n    //         field.value = field.value.replace(regEx, \"\");\n    //         let result = {\n    //             isFiltered: matchRegEx.test(field.value),\n    //             input: field,\n    //         };\n    //     return result;\n    //     }\n    //     return result;\n    // }\n\n    // is_api_key (input) {\n    //     let field = input;\n    //     if (field) {\n    //         return this.isMixedField(15, field);\n    //     }\n    // }\n\n    // is_domain (input) {\n    //     let field = input;\n    //     if (field) {\n    //         return this.isTextField(16, field);\n    //     }\n    // }\n\n    // is_ip_range (input) {\n    //     let field = input;\n    //     let ip_regex = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/\n    //     if (field) {\n    //         return this.isNumberField(6, field);\n    //     }\n    // }\n\n    // is_place_Id (input) {\n    //     let field = input;\n    //     if (field) {\n    //         return this.isMixedField(6, field);\n    //     }\n    // }\n\n\n    // is_lat_lng (input) {\n    //     let regEx = /[^0-9.,]/g;\n    //     let field = input;\n    //     let result = {\n    //         isFiltered: true,\n    //         input: field,\n    //     };\n    //     if ( field.value.search(regEx) > -1 ) {\n    //             field.value = field.value.replace(regEx, \"\");\n    //             let result = {\n    //                 isFiltered: true,\n    //                 input: field,\n    //             };\n    //         let split = field.split(',');\n    //         split[2] = {\n    //             lat: null,\n    //             lng: null,\n    //         };\n    //         if (split.length >= 2) {\n    //             const lat = split[0];\n    //             const lng = split[1];\n    //             split[2].lat = this.isNumberField(4, 9, lat);\n    //             split[2].lng = this.isNumberField(4, 9, lng);\n    //             if ( Math.abs(lat) <= 90 && Math.abs(lng) <= 180 && split[2].lat == true && split[2].lng == true ) {\n    //                 const latLng = lat + ',' + lng;\n    //                 result.latLng = latLng;\n    //                 return result;\n    //             }\n\n    //         }\n\n    //     }\n    //     return result;      \n    // }","export default class Test {\n    constructor(){\n\n    }\n\n    test(field, filter, match) {\n        if ( field.value || field.value && field.value.search(filterRegEx) > -1) {\n            field.value = field.value.replace(filter, \"\");\n            let result = {\n                matchesFilter: match.test(field.value),\n                input: field,\n            };\n            return result;\n        }\n    }\n}"],"sourceRoot":""}