{"version":3,"sources":["webpack://./src/js/gator_components/dynamic_map_modules/modules/autocomplete_directions_handler.js?","webpack://./src/js/gator_components/dynamic_map_modules/modules/calculate_and_display_route.js?","webpack://./src/js/gator_components/dynamic_map_modules/modules/show_steps.js?"],"names":["AutocompleteDirectionsHandler","map","globals","this","markers","origin","destination","search","control","i","calculateAndDisplayRoute","directionsService","directionsDisplay","stepDisplay","length","setMap","colors","request","document","getElementById","value","optimizeWaypoints","travelMode","provideRouteAlternatives","unitSystem","google","maps","UnitSystem","IMPERIAL","drivingOptions","departureTime","Date","now","trafficModel","route","result","status","routes","setOptions","supressMarkers","DirectionsRenderer","directions","routeIndex","polylineOptions","strokeColor","strokeWeight","strokeOpacity","innerHtml","warnings","console","log","setDirections","summaryPanel","innerHTML","legs","routeSegment","start_address","end_address","distance","text","ShowSteps","myRoute","steps","marker","Marker","position","start_location","attachInstructionText","instructions","event","addListener","navigationContent","setContent","open"],"mappings":"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","file":"js/19d4b308.js","sourcesContent":["export default class AutocompleteDirectionsHandler {\n\n\tconstructor (map, globals) {\n\t\tthis.map = map;\n\t\tconst { markers, origin, destination, search, control, i } = globals;\n\t\tconst directionsConfig = {\n\t\t\tmap: this.map,\n\t\t\tdraggable: true,\n\t\t\trouteIndex: i,\n\t\t\tpolylineOptions:{strokeColor:'#208000', strokeWeight:10, strokeOpacity:'.95'}\n\t\t};\n\t\t// this.directionsService = new google.maps.DirectionsService();\n\t\t// this.stepDisplay = new google.maps.InfoWindow();\n\t\t// this.originAutocomplete = new google.maps.places.Autocomplete(origin, {});\n\t\t// this.destinationAutocomplete = new google.maps.places.Autocomplete(destination, {});\n\t\t// this.searchAutoComplete = new google.maps.places.Autocomplete(_search, {});\n\t\t// this.directionsDisplay = new google.maps.DirectionsRenderer(directionsConfig);\n\n\t\t// directionsDisplay.setPanel(control);\n\t\t// control.style.display = 'block';\n\t}\n\n\tinitListeners () {\n\t\t// this.originAutocomplete.addEventListener('change', this.onChangeHandler);\n\t\t// document.getElementById('origin-input').addEventListener('change', this.onChangeHandler);\n\n\t\t// this.destinationAutocomplete.addEventListener('change', this.onChangeHandler);\n\t\t// document.getElementById('destination-input').addEventListener('change', this.onChangeHandler);\n\t}\n\n\tonChangeHandler () {\n\t\tconst calculateAndDisplayRoute = require('./calculate_and_display_route.js');\n\t\tcalculateAndDisplayRoute(this.directionsService, this.directionsDisplay, this.stepDisplay, this.map, markers);\n\t}\n}","export default function calculateAndDisplayRoute(directionsService, directionsDisplay, stepDisplay, map, markers) {\n\t// Clear all preceding markers when calculating route.\n\tfor (let i = 0; i < markers.length; i++){\n\tmarkers[i].setMap(null);\n\t} \n\tlet colors = ['#b366ff', '#bf80ff', '#9933ff'];\n\tlet start = document.getElementById('origin-input').value;\n\tlet end = document.getElementById('destination-input').value;\n\tlet request = {\n\t\torigin: start,\n\t\tdestination: end,\n\t\toptimizeWaypoints: true,\n\t\ttravelMode: 'DRIVING',\n\t\tprovideRouteAlternatives: true,\n\t\tunitSystem: google.maps.UnitSystem.IMPERIAL,\n\t\tdrivingOptions: {\n\t\t\tdepartureTime: new Date(Date.now() + 3500000),\n\t\t\ttrafficModel: 'optimistic'\n\t\t}\n\t};\n\n\tdirectionsService.route(request, function(result, status) {\n\t\tif (status === 'OK') {\n\t\t\tlet routes = result.routes;\n\n\t\t\tfor ( let i = 0; i <routes.length; i++){\n\t\t\t\tdirectionsDisplay.setOptions({supressMarkers:true});\n\t\t\t\tnew google.maps.DirectionsRenderer({\n\t\t\t\t\tmap: map,\n\t\t\t\t\tdirections: result,\n\t\t\t\t\trouteIndex: i + 1,\n\t\t\t\t\tpolylineOptions:{strokeColor:colors[i],strokeWeight:8,strokeOpacity:'.8'},\n\t\t\t\t});  \n\t\t\t}\n\n\t\t\tlet warningsPanel = document.getElementById('warnings-panel');\n\t\t\twarningsPanel.innerHtml = '<br>' + result.routes[0].warnings + '</br>';\n\n\t\t\tconsole.log('Direction Service Request STATUS : ' + status + result.routes);\n\n\t\t\tdirectionsDisplay.setDirections(result);\n\t\t\tlet showSteps = require('./show_steps.js');\n\t\t\tnew showSteps(result, stepDisplay, map, markers);\n\n\t\t\tlet route = result.routes[0];\n\t\t\t\n\t\t\tlet summaryPanel = document.getElementById('summary-panel');\n\t\t\tsummaryPanel.innerHTML = '';\n\n\t\t\t// For each route, display summary information.\n\t\t\tfor(let i = 0; i < route.legs.length; i++) {\n\t\t\t\tlet routeSegment = i + 1;\n\t\t\t\tsummaryPanel.innerHTML += '<b> SUMMARY for <br></b>'\n\t\t\t\tsummaryPanel.innerHTML += '<b>Route Segment: ' + routeSegment +\n\t\t\t\t'</b><br>';\n\t\t\t\tsummaryPanel.innerHTML += route.legs[i].start_address + ' to ';\n\t\t\t\tsummaryPanel.innerHTML += route.legs[i].end_address + '<br>';\n\t\t\t\tsummaryPanel.innerHTML += route.legs[i].distance.text + '<br><br>';\n\t\t\t}\n\t\t}\n\t\treturn   \n\t}); \n}","export default class ShowSteps {\n\n\tconstructor (result, stepDisplay, map, markers){\n\t\tthis.map = map;\n\t\tthis.stepDisplay = stepDisplay;\n\t\tthis.myRoute = result.routes[0].legs[0];\n\t\tthis.markers = markers;\n\t}\n\n\trenderSteps () {\n\t\tfor (let i = 0; i < this.myRoute.steps.length; i++) {\n\t\t\tthis.marker = this.markers[i] = this.markers[i] || new google.maps.Marker({\n\t\t\t\tmap: this.map,\n\t\t\t\tposition: this.myRoute.steps[i].start_location\n\t\t\t});\n\t\t\tthis.attachInstructionText(this.marker, this.myRoute.steps[i].instructions);\n\t\t}\n\t}\n\n\tattachInstructionText(marker, text) {\n        google.maps.event.addListener(marker, 'click', function() {\n          let navigationContent = text;\n          this.stepDisplay.setContent(navigationContent);\n          this.stepDisplay.open(this.map, marker);\n        });\n\t}\n}\t"],"sourceRoot":""}