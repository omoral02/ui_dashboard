{"version":3,"sources":["webpack://./src/js/gator_components/dynamic_map_modules/modules/geo_address_marker_load.js?","webpack://./src/js/gator_components/dynamic_map_modules/modules/find_address_marker_render.js?","webpack://./src/js/gator_components/dynamic_map_modules/modules/geocode_address.js?"],"names":["__webpack_require__","r","__webpack_exports__","d","GeoAddressMarkerLoad","[object Object]","currentlyClickedMarker","results","locale","util","infoWindow","markers","map","geocoder","this","littleWindow","document","getElementById","panoOptions","position","pov","heading","pitch","visible","location","contentString2","id","types","formatted_address","geometry","location_type","setContent","open","log","i","length","setMap","splice","geocode","status","findAddressMarkerRender","panorama","google","maps","StreetViewPanorama","innerHTML","getPano","getVisible","setVisible","marker","contentString3","geocodeAddress","ids","uniqueId","entry","address","value","panTo","Marker","animation","Animation","DROP","title","push","event","addListener","getPosition","geo_address_marker_load","alert"],"mappings":"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","file":"js/2edf0b23.js","sourcesContent":["export default class GeoAddressMarkerLoad {\n\n\tconstructor (currentlyClickedMarker, results, locale, util, infoWindow, markers, map, geocoder) {\n\t\tthis.locale = locale;\n\t\tthis.littleWindow = document.getElementById('littleWindow');\n\t\tthis.util = util;\n\t\tthis.infoWindow = infoWindow;\n\t\tthis.markers = markers;\n\t\tthis.currentlyClickedMarker = currentlyClickedMarker;\n\t\tthis.results = results;\n\t\tthis.map = map;\n\t\tthis.geocoder = geocoder;\n\t\tthis.panoOptions = {\n\t\t\tposition: locale,\n\t\t\tpov: {\n\t\t\t\theading: 140,\n\t\t\t\tpitch: 35,\n\t\t\t},\n\t\t\tvisible:false\n\t\t};\n\t\tthis.location = { location : this.locale };\n\t\tthis.contentString2 = \n\t\t'<div id=\"littleWindow\">' +\n\t\t'<div id=\"contentTestString2\">' + \n\t\t'<div id=\"sideNotice\">' + \n\t\t'<br>' +\n\t\t'<p id=\"location\">Marker Location:' + '</p>' +\n\t\t'<p id=\"latLong\">' + this.locale + '</p>' +\n\t\t'Marker\\'s ID is : ' + this.currentlyClickedMarker.id +\n\t\t'<br>' +\n\t\t'Address type(s) : ' + this.results[0].types +\n\t\t'<br>' +\n\t\t'Marker\\'s formatted address is : ' + this.results[0].formatted_address +\n\t\t'<br>' +\n\t\t'Location Type : ' + this.results[0].geometry.location_type +\n\t\t'<br>' + \n\t\t'</div>' +\n\t\t'<br>' +\n\t\t'<form action = \"\">' + '<fieldset>' +\n\t\t'<input type = \"button\" id=\"buttonRemover\" value=\"Remove Marker\" onclick =\"deleteMarkers(' + this.currentlyClickedMarker.id + ')\"/>' +\n\t\t'<br>' +\n\n\t\t'<input type = \"button\" id=\"reverseCoder\" value=\"Reverse GeoCode\" onclick =\"findAddress()\"/>' +\n\t\t'<br>' +\n\n\t\t'<input type = \"button\" id=\"streetView\" value=\"Toggle StreetView\" onclick =\"toggleStreetView()\"/>' +\n\n\n\t\t'</div>' +\n\t\t'</div>' + '';\n\t}\n\n\topen () {\n\t\tthis.infoWindow.setContent(this.contentString2);\n\t\tthis.infoWindow.open(this.map, this.currentlyClickedMarker);\n\t\tthis.util.log('Marker ' + this.currentlyClickedMarker.id + 'was opened!');\n\t}\n\n\tdeleteMarkers (id) {\n\t\tfor (let i = 0; i < this.markers.length; i++) {\n\t\t\tif (this.markers[i].id == id) {\n\t\t\tthis.util.log('Marker ' + this.markers[i].id + ' deleted!');\n\t\t\tthis.markers[i].setMap(null);\n\t\t\tthis.markers.splice(i, 1);\n\t\t\treturn;\n\t\t\t} \n\t\t}  \n\t}\n\n\tfindAddress () {\n\t\tthis.util.log(this.location);\n\t\tthis.geocoder.geocode(this.location, function statusTest(results, status) {\n\t\t\tthis.util.log('reverseGeocode STATUS is : ' + status);\n\t\t\tif (status == 'OK') {\n\t\t\t\tconst findAddressMarkerRender = require('./find_address_marker_render.js');\n\t\t\t\tfindAddressMarkerRender(this.currentlyClickedMarker, results, this.util, this.infoWindow, this.map);\n\t\t\t\tif (results[0]) {\n\t\t\t\tthis.util.log('findAddress function location result is: ' + results[0].formatted_address);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\ttoggleStreetView () {\n\t\tlet panorama = new google.maps.StreetViewPanorama(this.littleWindow, this.panoOptions);\n\t\tpanorama.innerHTML = panorama.getPano();\n\t\tlet toggle = panorama.getVisible();\n\t\tif (toggle == false) {\n\t\t\tpanorama.setVisible(true);\n\t\t\t} else {\n\t\t\tpanorama.setVisible(false);\n\t\t}\n\t}\n}","export default function findAddressMarkerRender(marker, results, util, infoWindow, map) {\n      \n  let contentString3 = \n    '<div id=\"returnFind\">'+\n    '<p id=\"content\">' + results[0].formatted_address + '' +\n    ''+\n    '</div>';\n  infoWindow.setContent(contentString3);\n  infoWindow.open(map, marker);\n  util.log('InfoWindow updated with the formatted address!');\n}","export default function geocodeAddress(geocoder, map, util, infoWindow, markers, ids, uniqueId) {\n\t\tlet address = document.getElementById('address').value;\n\t\tlet entry = {'address': address};\n\t\tlet marker;\n\t\tgeocoder.geocode(entry, function(results, status) {\n\t\t\t\tif (status == 'OK') {\n\t\t\t\t\tmap.panTo(results[0].geometry.location);\n\t\t\t\t\tmarker = new google.maps.Marker({\n\t\t\t\t\t\tmap: map,\n\t\t\t\t\t\tposition: results[0].geometry.location,\n\t\t\t\t\t\tanimation: google.maps.Animation.DROP,\n\t\t\t\t\t\ttitle: results[0].formatted_address\n\t\t\t\t\t});\n\t\t\t\t\tmarker.id = uniqueId;\n\t\t\t\t\tuniqueId++;\n\t\t\t\t\tmarkers.push(marker);\n\t\t\t\t\tids.push(uniqueId);\n\n\t\t\t\t\tutil.log('Marker\\'s ID in the array is ' + marker.id + '.' + ('\\n') + \n\t\t\t\t\t'Marker(s) pushed to \\'Markers\\' array within addMarker function. These are the following IDs:');\n\t\t\t\t\tfor (let i = 0; i < markers.length; i++) {\n\t\t\t\t\t\tutil.log(markers[i].id);\n\t\t\t\t\t}\n\t\t\t\t\tgoogle.maps.event.addListener(marker, 'click', function() {\n\t\t\t\t\t\tconst GeoAddressMarkerLoad = require('./geo_address_marker_load.js');\n\t\t\t\t\t\tlet currentlyClickedMarker = marker;\n\t\t\t\t\t\tlet locale = currentlyClickedMarker.getPosition();\n\t\t\t\t\t\tthis.geo_address_marker_load = new GeoAddressMarkerLoad(currentlyClickedMarker, results, locale, util, infoWindow, markers, map, geocoder);\n\t\t\t\t\t\tthis.geo_address_marker_load.open();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\talert('Geocode was not successful for the following reason: ' + status);\n\t\t\t\t} \n\t\t});\n\n}"],"sourceRoot":""}