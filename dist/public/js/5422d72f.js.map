{"version":3,"sources":["webpack://./src/js/gator_components/dynamic_map_modules/modules/find_address_marker_render.js?","webpack://./src/js/gator_components/dynamic_map_modules/modules/geocode_address.js?","webpack://./src/js/gator_components/dynamic_map_modules/modules/geo_address_marker_load.js?"],"names":["findAddressMarkerRender","marker","results","util","infoWindow","map","contentString3","formatted_address","setContent","open","log","geocodeAddress","geocoder","markers","ids","uniqueId","entry","document","getElementById","value","geocode","status","panTo","geometry","location","google","maps","Marker","position","animation","Animation","DROP","title","id","push","i","length","event","addListener","GeoAddressMarkerLoad","currentlyClickedMarker","locale","getPosition","this","geo_address_marker_load","alert","littleWindow","panoOptions","pov","heading","pitch","visible","contentString2","types","location_type","setMap","splice","panorama","StreetViewPanorama","innerHTML","getPano","getVisible","setVisible"],"mappings":"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","file":"js/5422d72f.js","sourcesContent":["export default function findAddressMarkerRender(marker, results, util, infoWindow, map) {\n      \n  let contentString3 = \n    '<div id=\"returnFind\">'+\n    '<p id=\"content\">' + results[0].formatted_address + '' +\n    ''+\n    '</div>';\n  infoWindow.setContent(contentString3);\n  infoWindow.open(map, marker);\n  util.log('InfoWindow updated with the formatted address!');\n}","export default function geocodeAddress(geocoder, map, util, infoWindow, markers, ids, uniqueId) {\n\t\tlet address = document.getElementById('address').value;\n\t\tlet entry = {'address': address};\n\t\tlet marker;\n\t\tgeocoder.geocode(entry, function(results, status) {\n\t\t\t\tif (status == 'OK') {\n\t\t\t\t\tmap.panTo(results[0].geometry.location);\n\t\t\t\t\tmarker = new google.maps.Marker({\n\t\t\t\t\t\tmap: map,\n\t\t\t\t\t\tposition: results[0].geometry.location,\n\t\t\t\t\t\tanimation: google.maps.Animation.DROP,\n\t\t\t\t\t\ttitle: results[0].formatted_address\n\t\t\t\t\t});\n\t\t\t\t\tmarker.id = uniqueId;\n\t\t\t\t\tuniqueId++;\n\t\t\t\t\tmarkers.push(marker);\n\t\t\t\t\tids.push(uniqueId);\n\n\t\t\t\t\tutil.log('Marker\\'s ID in the array is ' + marker.id + '.' + ('\\n') + \n\t\t\t\t\t'Marker(s) pushed to \\'Markers\\' array within addMarker function. These are the following IDs:');\n\t\t\t\t\tfor (let i = 0; i < markers.length; i++) {\n\t\t\t\t\t\tutil.log(markers[i].id);\n\t\t\t\t\t}\n\t\t\t\t\tgoogle.maps.event.addListener(marker, 'click', function() {\n\t\t\t\t\t\tconst GeoAddressMarkerLoad = require('./geo_address_marker_load.js');\n\t\t\t\t\t\tlet currentlyClickedMarker = marker;\n\t\t\t\t\t\tlet locale = currentlyClickedMarker.getPosition();\n\t\t\t\t\t\tthis.geo_address_marker_load = new GeoAddressMarkerLoad(currentlyClickedMarker, results, locale, util, infoWindow, markers, map, geocoder);\n\t\t\t\t\t\tthis.geo_address_marker_load.open();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\talert('Geocode was not successful for the following reason: ' + status);\n\t\t\t\t} \n\t\t});\n\n}","export default class GeoAddressMarkerLoad {\n\n\tconstructor (currentlyClickedMarker, results, locale, util, infoWindow, markers, map, geocoder) {\n\t\tthis.locale = locale;\n\t\tthis.littleWindow = document.getElementById('littleWindow');\n\t\tthis.util = util;\n\t\tthis.infoWindow = infoWindow;\n\t\tthis.markers = markers;\n\t\tthis.currentlyClickedMarker = currentlyClickedMarker;\n\t\tthis.results = results;\n\t\tthis.map = map;\n\t\tthis.geocoder = geocoder;\n\t\tthis.panoOptions = {\n\t\t\tposition: locale,\n\t\t\tpov: {\n\t\t\t\theading: 140,\n\t\t\t\tpitch: 35,\n\t\t\t},\n\t\t\tvisible:false\n\t\t};\n\t\tthis.location = { location : this.locale };\n\t\tthis.contentString2 = \n\t\t'<div id=\"littleWindow\">' +\n\t\t'<div id=\"contentTestString2\">' + \n\t\t'<div id=\"sideNotice\">' + \n\t\t'<br>' +\n\t\t'<p id=\"location\">Marker Location:' + '</p>' +\n\t\t'<p id=\"latLong\">' + this.locale + '</p>' +\n\t\t'Marker\\'s ID is : ' + this.currentlyClickedMarker.id +\n\t\t'<br>' +\n\t\t'Address type(s) : ' + this.results[0].types +\n\t\t'<br>' +\n\t\t'Marker\\'s formatted address is : ' + this.results[0].formatted_address +\n\t\t'<br>' +\n\t\t'Location Type : ' + this.results[0].geometry.location_type +\n\t\t'<br>' + \n\t\t'</div>' +\n\t\t'<br>' +\n\t\t'<form action = \"\">' + '<fieldset>' +\n\t\t'<input type = \"button\" id=\"buttonRemover\" value=\"Remove Marker\" onclick =\"deleteMarkers(' + this.currentlyClickedMarker.id + ')\"/>' +\n\t\t'<br>' +\n\n\t\t'<input type = \"button\" id=\"reverseCoder\" value=\"Reverse GeoCode\" onclick =\"findAddress()\"/>' +\n\t\t'<br>' +\n\n\t\t'<input type = \"button\" id=\"streetView\" value=\"Toggle StreetView\" onclick =\"toggleStreetView()\"/>' +\n\n\n\t\t'</div>' +\n\t\t'</div>' + '';\n\t}\n\n\topen () {\n\t\tthis.infoWindow.setContent(this.contentString2);\n\t\tthis.infoWindow.open(this.map, this.currentlyClickedMarker);\n\t\tthis.util.log('Marker ' + this.currentlyClickedMarker.id + 'was opened!');\n\t}\n\n\tdeleteMarkers (id) {\n\t\tfor (let i = 0; i < this.markers.length; i++) {\n\t\t\tif (this.markers[i].id == id) {\n\t\t\tthis.util.log('Marker ' + this.markers[i].id + ' deleted!');\n\t\t\tthis.markers[i].setMap(null);\n\t\t\tthis.markers.splice(i, 1);\n\t\t\treturn;\n\t\t\t} \n\t\t}  \n\t}\n\n\tfindAddress () {\n\t\tthis.util.log(this.location);\n\t\tthis.geocoder.geocode(this.location, function statusTest(results, status) {\n\t\t\tthis.util.log('reverseGeocode STATUS is : ' + status);\n\t\t\tif (status == 'OK') {\n\t\t\t\tconst findAddressMarkerRender = require('./find_address_marker_render.js');\n\t\t\t\tfindAddressMarkerRender(this.currentlyClickedMarker, results, this.util, this.infoWindow, this.map);\n\t\t\t\tif (results[0]) {\n\t\t\t\tthis.util.log('findAddress function location result is: ' + results[0].formatted_address);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\ttoggleStreetView () {\n\t\tlet panorama = new google.maps.StreetViewPanorama(this.littleWindow, this.panoOptions);\n\t\tpanorama.innerHTML = panorama.getPano();\n\t\tlet toggle = panorama.getVisible();\n\t\tif (toggle == false) {\n\t\t\tpanorama.setVisible(true);\n\t\t\t} else {\n\t\t\tpanorama.setVisible(false);\n\t\t}\n\t}\n}"],"sourceRoot":""}