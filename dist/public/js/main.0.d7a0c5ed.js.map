{"version":3,"sources":["webpack://./src/js/gator_components/plx/controller.js?","webpack://./src/js/gator_components/plx/model.js?","webpack://./src/js/gator_components/plx/view.js?","webpack://./src/js/gator_components/utilities/test.js?","webpack://./src/js/gator_components/utilities/validate_input.js?","webpack://./src/js/gator_components/main_app/model.js?","webpack://./src/js/gator_components/main_app/view.js?","webpack://./src/js/gator_components/main_app/controller.js?","webpack://./src/js/gator_components/utilities/main.js?","webpack://./src/js/gator_components/utilities/util.js?"],"names":["ScriptsController","util","placeholders","plxButton","viewPane","super","this","currentlySelectedItem","validator","paramBuild","inputCount","setInitialStateObject","initializeView","scriptTitleParametersToggle","setMyStateToInitialWorkingState","scriptsListContainer","addEventListener","onScriptTitleClick","bind","close","e","target","classList","contains","insertParametersContainer","scriptIndex","parseInt","dataset","index","getNewWorkingState","removeTitleListener","checkShowOn","secondaryParent","id","visualManager","removeEventListener","generate","onPlxClick","removePlxClickListener","removeActive","getStateCurrentlySelectedScript","insertScriptsContainer","init","innerComponentIsNowListening","value","secondaryParentContainsShowRemove","checkActiveOn","renderParams","getParameterNames","getStateCurrentlySelectedScriptIndex","matchParamsTo","level","resetContainerFor","childnodes","document","getElementsByTagName","console","log","n","length","inputNode","onParameterInput","preventDefault","node","inputDetectedOn","push","buildClick","alert","inputField","validateInputOn","filteredResult","eval","matchesFilter","validateOutputOn","result","validationCheck","input","regEx","test","setParameterValue","Object","defineProperty","writable","final","generateScriptId","setScriptParamsTo","parameterEntries","entries","getScriptParameterValues","forEach","key","setScriptLinkTo","clickPlxUrl","scriptId","getCurrentlySelectedScript","setScriptIdTo","link","URL","getBasePlxUrl","getScriptId","getParameterInputs","setFullUrlTo","finalResult","field","status","valid","isValid","isInvalid","ScriptsModel","initialState","workingState","myState","statebasePlxUrl","params","parameters","url","currentlySelectedScript","currentlySelectedScriptIndex","setInitialState","param1","param2","state","basePlxUrl","setMyStateToWorkingState","parameterName","parameterValue","scriptsParentHtml","parametersParentHTML","parameter","paramaterHtml","scripts","title","getCurrentlySelectedScriptIndex","script","setNewState","keys","parentPane","emptyString","primaryParent","createElement","add","primaryParentinnerHTML","getScriptsParentHTML","innerHTML","insertBefore","childNodes","grabInnerComponent","getElementById","scriptButtonContainer","textContent","insert","getScripts","li","toggleScriptsContainer","resetChildren","removeChild","Element","parametersInnerContainer","secondaryParentinnerHTML","getParametersParentHTML","insertAdjacentElement","grabSecondaryComponent","cardInner","item","resetListItems","items","getElementsByClassName","i","onListedItem","remove","parametersHtml","getParameterHTML","toggle","parameterExample","setAttribute","getFullUrl","async","window","open","Test","filter","match","search","filterRegEx","replace","AppModel","views","listOfElementsByClass","classArrays","classList_1","classList_2","classList_3","classList_4","classList_5","classList_6","classList_7","classList_8","non_iretableViews","iterable_views","view","valueOf","head","viewsButtons","mainMenu","viewsPane","viewsListHasChildNodes","resetChildViews","non_iterableViews","checkAndListChildNodes","clearClassesOnChildNodes","checkEachViewIndex","objectView","count","setNewChildView","values","getChildViews","$elInArray","pop","viewObject","object","Util","actionButtons","onLoadCheckForActionButtons","button","loadControllers","instantiateControllersWith","getParametersList","mapsButton","staticMapButton","cl_apiKey","controllerIsNowlistening","staticButton","scriptsController","oneButtonWasClicked","plxShouldLoad","checkAttachedPanes","AppController","clear","data"],"mappings":"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","file":"js/main.0.d7a0c5ed.js","sourcesContent":["import ScriptsView from './view';\n\nexport default class ScriptsController extends ScriptsView {\n  constructor( util, placeholders, plxButton, viewPane ) {\n    super(placeholders, viewPane);\n    this.currentlySelectedItem;\n    this.plxButton = plxButton;\n    this.validator = util; //input validation class\n    this.paramBuild;\n    this.inputCount = [];\n  }\n\n  init() {\n    super.setInitialStateObject();\n    super.initializeView();\n    this.scriptTitleParametersToggle();\n  }\n\n  scriptTitleParametersToggle() {\n    super.setMyStateToInitialWorkingState();\n    this.scriptsListContainer.addEventListener(\n      'click', this.onScriptTitleClick.bind(this),\n       false);\n    this.close.addEventListener(\n      'click', this.onScriptTitleClick.bind(this),\n       false);\n    // this.reset.addEventListener(\n    //   'click', this.onScriptTitleClick.bind(this),\n    //    false);\n  }\n\n  onScriptTitleClick (e) {\n    this.currentlySelectedItem;\n    // if ( e === Event ) {\n    //   e.preventDefault();\n    //   this.currentlySelectedItem = e.target;\n    // } else if ( e === Element ) {\n    //   this.currentlySelectedItem = e;\n    // }\n    this.currentlySelectedItem = e.target;\n    if ( this.currentlySelectedItem.classList.contains('listed-item') ) {\n        super.insertParametersContainer();\n        let scriptIndex = parseInt(this.currentlySelectedItem.dataset.index);\n        super.getNewWorkingState(scriptIndex, this.currentlySelectedItem);\n        this.removeTitleListener();\n        this.checkShowOn(this.secondaryParent);\n    }else if ( this.currentlySelectedItem.id == 'close' ){\n              this.visualManager('all');\n              super.setMyStateToInitialWorkingState();\n    }\n    // else if ( currentlySelectedItem.id == 'reset' ){\n    //   this.removeTitleListener();\n    //   super.setMyStateToInitialWorkingState();\n    //   this.visualManager('remove');\n    // }\n  }\n\n  removeTitleListener(){\n    this.scriptsListContainer.removeEventListener(\n      'click', this.onScriptTitleClick.bind(this),\n       false); \n  }\n\n  removePlxClickListener(){\n    this.generate.removeEventListener(\n      'click', this.onPlxClick.bind(this),\n      false);\n  }\n\n  checkShowOn (secondaryParent) {\n    if ( secondaryParent.classList.contains('show') ){\n      this.removeTitleListener();\n      this.removePlxClickListener();\n      this.visualManager('remove');\n      super.removeActive(super.getStateCurrentlySelectedScript());\n      super.setMyStateToInitialWorkingState();\n      super.insertScriptsContainer();\n      this.init();\n      // // this.onScriptTitleClick(super.getCurrentlySelectedScript);\n    } else {\n          // this.removeTitleListener();\n          this.visualManager('insert');\n          // this.generateScriptId();\n          this.innerComponentIsNowListening();\n    }\n  }\n\n  visualManager (value) {\n    if ( value === 'remove' ) {\n      this.secondaryParentContainsShowRemove('children');\n      super.checkActiveOn(super.getStateCurrentlySelectedScript());\n    } else if ( value === 'all' ) {\n      this.secondaryParentContainsShowRemove('all');\n    } else if ( value == 'insert' ) {\n        super.insertParametersContainer();\n        super.renderParams(super.getParameterNames(super.getStateCurrentlySelectedScriptIndex()));\n        super.matchParamsTo(this.placeholders);\n        super.checkActiveOn(super.getStateCurrentlySelectedScript());\n    }\n  }\n\n  secondaryParentContainsShowRemove (level) {\n    super.resetContainerFor(level);\n  }\n\n  innerComponentIsNowListening() {\n    let childnodes = document.getElementsByTagName('input');\n    console.log(childnodes);\n    // listen for field inputs\n    // if values are typed in\n    if(childnodes){\n      for(let n=0; n < childnodes.length; n++){\n        let inputNode = childnodes[n];\n        if (inputNode){\n          inputNode.addEventListener(\n          'input', this.onParameterInput.bind(this), \n          false)\n        }\n      }\n    }\n    // listen for click trigger\n    // if values programmatically inserted\n    this.generate.addEventListener(\n      'click', this.onPlxClick.bind(this),\n      false);\n  }\n\n  onParameterInput (e) {\n    e.preventDefault();\n    let node = e.target;\n    this.inputDetectedOn(node);\n  }\n\n  onPlxClick (e) {\n    e.preventDefault();\n    this.removePlxClickListener();\n    this.inputCount = [];\n    let childnodes = document.getElementsByTagName('input');\n    console.log(childnodes);\n    if(childnodes){\n      let inputCount = [];\n      for(let n=0; n < childnodes.length; n++){\n        let node = childnodes[n];\n        if (node.value.length > 0){\n          inputCount.push(node);\n          this.inputDetectedOn(node); \n          console.log(node);\n        }\n      }\n      if( inputCount.length >= 4){\n        this.buildClick();\n      } else {\n        console.log('We only have these entries: ', inputCount);\n        alert('Please ensure all fields have valid data!')\n    \n      }\n    }\n    // this.checkInputs();\n  }\n\n  // checkInputs(){\n  //   let count = [];\n  //   if( count.length == 4){\n  //     this.buildClick();\n  //   } else {\n  //     if(this.inputCount){\n  //       this.inputCount.forEach((item)=>{\n  //         let isCounted = this.final(item);\n  //         if (isCounted == true){\n  //           count.push(item);\n  //         }\n  //    });\n  //    console.log('We only have these entries: ', count);\n  //    alert('Please ensure all fields have valid data!')\n  //   //  this.checkInputs();\n  //     }\n    // }\n  // }\n\n  inputDetectedOn(target){\n    let inputField = target\n    if ( inputField.classList.contains('input') && inputField.value ) {\n      this.validateInputOn(inputField);\n    }\n  }\n\n  validateInputOn (target) {\n    let inputField = target;\n        // use eval to dynamically invoke regEx functions that filter input\n        // based on target id as the ids are part of the function names.\n        // from `validate_input.js`.\n        // ex: `this.validator.is_project_number(value, validatorFunction)` < validate project number\n        // ex: `this.validator.is_case_number(value, validatorFunction)` < validate case number\n        let id = inputField.id;\n        console.log('Input to filter :: ' + id);\n        let filteredResult = eval('this.validator.is_'+ id)(inputField);\n        console.log('Does input match filter? :: ', filteredResult.matchesFilter);\n        this.validateOutputOn(filteredResult);\n  }\n\n  validateOutputOn (result) {\n    let validationCheck = result;\n    let input = validationCheck.input;\n    // this regEx tests the input.value to ensure\n    // there is no white-space in the tested result.\n    let regEx = /[^\\S+]/gi;\n    console.log(validationCheck);\n  \n    // super.createLinkElement();\n    if ( input.value && regEx.test(input.value) === false ) {\n        console.log('Whitespace in input? :: ', regEx.test(input.value));\n              // add the property `validationcheck.valid`\n              // to be either true or false\n              super.setParameterValue(input.id, input.value);\n              if ( validationCheck.matchesFilter === true ){\n                Object.defineProperty(validationCheck, 'valid', {value:true, writable: true});\n                this.inputCount.push(validationCheck);\n                this.final(validationCheck);\n              } else {\n                Object.defineProperty(validationCheck, 'valid', {value:false, writable: true});\n                this.inputCount.push(validationCheck);\n                this.final(validationCheck);\n             }    \n      }\n  }\n\n buildClick () {\n   this.generateScriptId();\n   this.paramBuild = '';\n   super.setScriptParamsTo(this.paramBuild);\n    const parameterEntries = Object.entries(super.getScriptParameterValues());\n    console.log(parameterEntries);\n    if(parameterEntries.length >= 1){\n        parameterEntries.forEach(( [key, value], index ) => {\n              this.paramBuild += `${key}` + ':' +`${value}`;\n                if ( index !== parameterEntries.length - 1 ) {\n                  this.paramBuild += ',';\n                }\n        });\n        console.log('String representation of parameter inputs :: ', this.paramBuild, '\\n');\n        this.setScriptLinkTo(this.paramBuild);    \n    }\n    super.clickPlxUrl();\n  }\n\n  generateScriptId() {\n    let script = super.getCurrentlySelectedScript();\n    const scriptId = `${script.id}?p=`;\n    super.setScriptIdTo(scriptId);\n  }\n\n  setScriptLinkTo(link){\n    super.setScriptParamsTo(link);\n    let URL  = super.getBasePlxUrl();\n    URL += super.getScriptId();\n    URL += super.getParameterInputs();\n    super.setFullUrlTo(URL);\n  }\n\n  final (finalResult) {\n    let final = finalResult;\n    let field = final.input;\n    let status = final.valid;\n    if ( final && status == true ) {\n      console.log('This', `${field.id}`, 'meets the minimum requirements'); \n      super.isValid(field, status);\n      return true;\n    } else if ( final && status == false ) {\n      super.isInvalid(field, status);\n      console.log('This does not meet the minimum requirements for a', `${field.id}`);\n      return false;\n    }\n      return false;\n  }\n}\n\n","export default class ScriptsModel {\n  constructor() {\n    this.initialState = {};\n    this.workingState = this.initialState;\n    this.myState = {};\n  }\n\n  /**\n   * Reduce lines of code with something like this:\n   *\n    Foo() {\n      let _acctNum = '';\n\n      return {\n          getAcctNum: function() {\n              return _acctNum;\n          },\n          setAcctNum: function (newAcctNum) {\n            _acctNum = newAcctNum;\n          },\n        }\n      }\n   *\n   */\n\n  setInitialStateObject() {\n    let state = {\n      statebasePlxUrl: 'http://plx/scripts2/',\n      id: '',\n      params: '',\n      parameters: {},\n      url: null,\n      currentlySelectedScript: '',\n      currentlySelectedScriptIndex: '',\n    };\n    this.initialState = state;\n    this.setInitialState(this.initialState);\n  }\n\n  setInitialState (initialState) {\n    this.workingState = initialState;\n  }\n\n  setMyStateToInitialWorkingState () {\n    this.setInitialStateObject();\n    this.myState = this.workingState;\n  }\n\n  setNewState (param1, param2) {\n    this.workingState = {};\n    let state = {\n      basePlxUrl: 'http://plx/scripts2/',\n      id: '',\n      params: '',\n      parameters: {},\n      url: null,\n      currentlySelectedScript: param1,\n      currentlySelectedScriptIndex: param2,\n    };\n    this.workingState = state;\n    this.setMyStateToWorkingState(this.workingState);\n  }\n\n  setMyStateToWorkingState(workingState) {\n    this.myState = workingState;\n  }\n\n  setScriptIdTo (id) {\n    this.myState.id = id;\n  }\n\n  setScriptParamsTo (params) {\n    this.myState.params = params;\n  }\n\n  setFullUrlTo (url) {\n    this.myState.url = url;\n  }\n\n  setParameterValue (parameterName, parameterValue) {\n    this.myState.parameters[parameterName] = parameterValue;\n  }\n\n  getScriptsParentHTML() {\n    // debugging on reset button needed \n\n    // this.scriptsParentHtml =\n    //   `<ul id='scriptList' rel='plxScriptWindow' class=''>\n    //       <h2 class='card-header'>Scripts</h2>\n    //       <div id='scriptButtonContainer' class='buttonContainer'>\n    //           <button type='button' class='exitbtn' id='close' title='Close this PLX Window.'></button>\n    //           <button type='button' id='reset' class='exitbtn' title='Close parameters pane.'></button>\n    //           <button type='button' id='generate' class='exitbtn' title='Generate URL for PLX with case info.'></button>\n    //         </div>\n    //       <div class='card-inner' id='plx-InnerCard'>\n    //       </div\n    //    </ul>`;\n       this.scriptsParentHtml =\n       `<ul id='scriptList' rel='plxScriptWindow' class=''>\n          <h2 class='card-header'>Scripts</h2>\n          <div id='scriptButtonContainer' class='buttonContainer'>\n              <button type='button' class='exitbtn' id='close' title='Close this PLX Window.'></button>\n              <button type='button' id='generate' class='exitbtn' title='Generate URL for PLX with case info.'></button>\n            </div>\n          <div class='card-inner' id='plx-InnerCard'>\n          </div\n       </ul>`;\n    return this.scriptsParentHtml;\n  }\n\n  getParametersParentHTML() {\n    this.parametersParentHTML =\n      `<div id='card-inner' class='card-inner'>\n          <h2 class='card-header'>Parameters</h2>\n          <div id='parameters'><form></form></div>\n      </div>`;\n    return this.parametersParentHTML;\n  }\n\n  getParameterHTML (parameter) {\n    let paramaterHtml;\n    if (parameter == 'date_from_YYYY_MM_DD' || parameter == 'date_to_YYYY_MM_DD'){\n      if (parameter == 'date_from_YYYY_MM_DD'){\n        paramaterHtml =\n        `<div class='innerParam'>\n              <p class='parameter'>\n                  <label for='${parameter}'>Date From</label>\n              </p>\n              <p>\n                <input type='text' size='20' maxlength='10' class='input' id='${parameter}' placeholder=''required>\n              </p>\n          </div>`;\n      }\n      else {\n        paramaterHtml =\n        `<div class='innerParam'>\n              <p class='parameter'>\n                  <label for='${parameter}'>Date To</label>\n              </p>\n              <p>\n                <input type='text' size='20' maxlength='10' class='input' id='${parameter}' placeholder='' required>\n              </p>\n          </div>`;\n      }\n    } else if (parameter == 'project_number') {\n      paramaterHtml =\n        `<div class='innerParam'>\n              <p class='parameter'>\n                  <label for='${parameter}'>Project</label>\n              </p>\n              <p>\n                <input type='text' name='project' size='20' class='input' id='${parameter}' placeholder='' autofocus required>\n              </p>\n          </div>`;\n    } else {\n      paramaterHtml =\n        `<div class='innerParam'>\n              <p class='parameter'>\n                  <label for='${parameter}'>ClientID (if applicable)</label>\n              </p>\n              <p>\n                <input type='text' name='clientID' size='20' class='input' id='${parameter}' placeholder='' required>\n              </p>\n          </div>`;\n    }\n    return paramaterHtml;\n  }\n\n  getScripts() {\n    this.scripts = [\n      //  {\n      //     title: 'API usage for specified mafe_weblog API by IP',\n      //     id: 'script_5b._a15f62_0000_2cc9_bcc5_001a11404b34',\n      //     parameters: {\n      //       'case_number': '',\n      //       'ip_range': '',\n      //       'query_type': '',\n      //       'api_endpoint_type': '',\n      //       'table_suffix': '',\n      //       'project_number': '',\n      //       'client_id': '',\n      //       },\n      //     },\n      //     {\n      //       title: 'QPS breakdown from Web-Service',\n      //       id: 'script_5b._a16102_0000_254d_940f_089e0822b400',\n      //       parameters: {\n      //         'table_column': '',\n      //         'project_number': '',\n      //         'date_from_YYYY_MM_DD': '',\n      //         'date_to_YYYY_MM_DD': '',\n      //       },\n      //   },\n          // {\n          //   title: 'Daily client and web service requests project and API key',\n          //   id: 'script_5b._4e734f_0000_2d6d_af2d_94eb2c05a52e',\n          //   parameters: {\n          //     'client_id': '',\n          //     'project_number': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n          // {\n          //   title: 'Daily client-side requests per Day & API key',\n          //   id: 'script_5d._03c800_0000_2a6b_85d2_883d24f8e3d4',\n          //   parameters: {\n          //     'client_id': '',\n          //     'project_number': '',\n          //     // 'api_key': '',\n          //     // 'domain': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n          {\n            title: 'Daily requests by API key & Channel',\n            id: 'script_5b._4e734f_0000_2d6d_af2d_94eb2c05a52e',\n            parameters: {\n              'project_number': '',\n              'client_id': '',\n              // 'api_key': '',\n              // 'domain': '',\n              'date_from_YYYY_MM_DD': '',\n              'date_to_YYYY_MM_DD': '',\n            },\n          },\n          // {\n          //   title: 'Total client-side requests by Domain, API key & Days Used',\n          //   id: 'script_5d._03c5d4_0000_2961_9985_24058873f66c',\n          //   parameters: {\n          //     'client_id': '',\n          //     'project_number': '',\n          //     // 'api_key': '',\n          //     // 'domain': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n          {\n            title: 'Total URL STATS(redacted ) by URL, Domain, Project & Days Used',\n            id: 'script_5d._07f69f_0000_21a9_b028_f403043e7540',\n            parameters: {\n              'project_number': '',\n              'client_id': '',\n              // 'url': '',\n              // 'api_key': '',\n              // 'domain': '',\n              'date_from_YYYY_MM_DD': '',\n              'date_to_YYYY_MM_DD': '',\n            },\n          },\n          {\n            title: 'GeoStats Domain & Web-services w/ IP obfuscation',\n            id: 'script_5d._5ef884_0000_2398_b5bf_089e082dbdd4',\n            parameters:{\n              'project_number': '',\n              'client_id': '',\n              // 'url': '',\n              // 'api_key': '',\n              // 'domain': '',\n              'date_from_YYYY_MM_DD': '',\n              'date_to_YYYY_MM_DD': '',\n\n            },\n          },\n          {\n            title: 'Historic Maps APIs: Daily client and web service requests',\n            id: 'script_5d._7814be_0000_2f72_80a4_001a11405cb4',\n            parameters: {\n                    'project_number': '',\n                    'client_id': '',\n                    'date_from_YYYY_MM_DD': '',\n                    'date_to_YYYY_MM_DD': '',\n                  },\n          },\n          // {\n          //   title: 'Places Autocomplete Sessions V2',\n          //   id: 'maps_support_recent_places_autocomplete_sessions2',\n          //   parameters: {\n          //     'client_id': '',\n          //     'project_number': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n          // {\n          //   title: 'User-Agent script - provided by Seth S.',\n          //   id: 'script_5d._5f020f_0000_2cfb_9763_001a11c0ea40 ',\n          //   parameters: {\n          //     'client_id': '',\n          //     'project_number': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n    ];\n    return this.scripts;\n  }\n\n  getScript (index) {\n    return this.scripts[index];\n  }\n\n  getCurrentlySelectedScript() {\n    return this.scripts[this.getCurrentlySelectedScriptIndex()];\n  }\n\n  getCurrentlySelectedScriptIndex() {\n    return this.myState.currentlySelectedScriptIndex;\n  }\n\n  getStateCurrentlySelectedScript () {\n    return this.myState.currentlySelectedScript;\n  }\n\n  getStateCurrentlySelectedScriptIndex () {\n    return this.myState.currentlySelectedScriptIndex;\n  }\n\n  getNewWorkingState (index, script) {\n    let workingState = this.setNewState(script, index);\n    return workingState;\n  }\n\n  getParameterNames (scriptIndex) {\n    return Object.keys(this.scripts[scriptIndex].parameters);\n  }\n\n  getParameterInputs () {\n    return this.myState.params;\n  }\n\n  getBasePlxUrl() {\n    return this.myState.basePlxUrl;\n  }\n\n  getScriptId() {\n    return this.myState.id;\n  }\n\n  getScriptParameterValues() {\n    return this.myState.parameters;\n  }\n\n  getFullUrl() {\n    return this.myState.url;\n  }\n}\n","import ScriptsModel from './model';\n\nexport default class ScriptsView extends ScriptsModel {\n  constructor (placeholders, viewPane) {\n    super();\n    this.placeholders = placeholders;\n    this.parentPane = viewPane;\n    this.emptyString = '';\n  }\n\n  initializeView() {\n    this.insertScriptsContainer();\n  }\n\n  insertScriptsContainer () {\n    if ( !this.primaryParent ) {\n          this.primaryParent = document.createElement('div');\n          this.primaryParent.id = 'scriptsPrimaryContainer';\n          this.primaryParent.classList.add('card');\n          this.primaryParentinnerHTML = ( () => {\n            return super.getScriptsParentHTML();\n          })();\n          this.primaryParent.innerHTML = this.primaryParentinnerHTML;\n          this.parentPane.insertBefore(\n            this.primaryParent,\n            this.parentPane.childNodes[0]);\n          this.grabInnerComponent();\n          // insert scripts primary container\n    } else {\n          this.resetContainerFor('all');\n          // remove scripts primary container if it exists.\n    }\n  }\n\n  grabInnerComponent() {\n    this.scriptsListContainer = document.getElementById('plx-InnerCard');\n    this.scriptButtonContainer = document.getElementById('scriptButtonContainer');\n    // this.reset = document.getElementById('reset');\n    // this.reset.textContent = 'Reset';\n    this.close = document.getElementById('close');\n    this.close.textContent = 'Close';\n    this.generate = document.getElementById('generate');\n    this.generate.textContent = 'Go to PLX';\n    this.insert(super.getScripts());\n  }\n\n  insert (scripts) {\n    console.log('Scripts ::', scripts);\n    scripts.forEach( (script, index ) => {\n      const li = document.createElement('li');\n      li.textContent = script.title;\n      li.classList.add('listed-item');\n      li.dataset.index = index;\n      this.scriptsListContainer.insertBefore(\n        li,\n        this.scriptsListContainer.childNodes[0]);\n    });\n    this.toggleScriptsContainer();\n  }\n\n  toggleScriptsContainer() {\n    this.primaryParent.classList.add('show');\n  }\n\n  resetContainerFor (level) {\n    if ( level == 'all' ){\n      this.resetChildren('children');\n      if ( this.primaryParent ) {\n        this.parentPane.removeChild(this.primaryParent);\n      } \n      this.primaryParent = null;\n    } else if ( level == 'children' ) {\n      this.resetChildren('children');\n    } else if ( level == 'link' ) {\n      this.resetChildren('link');\n    }\n  }\n\n  resetChildren(level) {\n    if ( level == 'children' ){\n      if ( super.getCurrentlySelectedScript === Element ){\n        this.removeActive(super.getCurrentlySelectedScript);\n          //  this.myState.currentlySelectedScript.classList.remove('active');\n      }\n      // if ( this.plxOutputLink ){\n      //      this.scriptButtonContainer.removeChild(this.plxOutputLink);\n      // }\n      if ( this.params ) {\n           this.parametersInnerContainer.removeChild(this.params);\n      }\n      if ( this.secondaryParent ) {\n           this.scriptsListContainer.removeChild(this.secondaryParent);\n      }\n    }\n    //  else if ( level == 'link' ){\n    //     if ( this.plxOutputLink ){\n    //          this.paramButtonContainer.removeChild(this.plxOutputLink);\n    //          this.setNull(this.plxOutputLink);\n    //     }\n    // }\n    // this.plxOutputLink = null;\n    this.params = null;\n    this.secondaryParent = null;\n  }\n\n  // setNull (element) {\n  //   if ( element ){\n  //     if ( element.id == 'plxOutput' ){\n  //       element.removeAttribute('href');\n  //     }\n  //     super.setFullUrlTo(this.emptyString);\n  //     element = null;\n  //   }\n  // }\n\n  insertParametersContainer () {\n    if ( !this.secondaryParent ){\n          this.secondaryParent = document.createElement('div');\n          this.secondaryParent.classList.add('card');\n          this.secondaryParent.id = 'secondaryContainer';\n          this.secondaryParentinnerHTML = ( () => {\n            return super.getParametersParentHTML();\n          })();\n          this.secondaryParent.innerHTML = this.secondaryParentinnerHTML;\n          this.scriptsListContainer.insertAdjacentElement(\n            'afterbegin',\n            this.secondaryParent);\n          this.grabSecondaryComponent();\n    }\n  }\n\n  grabSecondaryComponent() {\n    this.cardInner = document.getElementById('card-inner');\n    this.parametersInnerContainer = document.getElementById('parameters');\n  }\n\n  toggleParamsContainer() {\n    this.secondaryParent.classList.add('show');\n  }\n\n  checkActiveOn (script) {\n    const item = script;\n    if ( item && item.classList.contains('listed-item' )){\n        if ( item.classList.contains('active' )){\n             this.removeActive(item);\n        } else {\n             this.resetListItems();\n             item.classList.add('active');\n        }\n    }\n  }\n\n  resetListItems() {\n    const items = document.getElementsByClassName('listed-item');\n    for ( let i = 0; i < items.length; i++ ){\n      const item = items[i];\n      if ( item.classList.contains('active' )){\n           this.removeActive(item);\n      }\n    }\n  }\n\n  removeActive (onListedItem) {\n    const item = onListedItem;\n    item.classList.remove('active');\n  }\n\n  renderParams (parameters) {\n    if ( !this.params ){\n        this.params = document.createElement('div');\n        this.params.id = 'params';\n    }\n    this.parametersHtml = '';\n    parameters.forEach( (parameter) => {\n      this.parametersHtml += super.getParameterHTML(parameter);\n    });\n    this.params.innerHTML = this.parametersHtml;\n    this.parametersInnerContainer.insertBefore(this.params, this.parametersInnerContainer.childNodes[0]);\n    this.secondaryParent.classList.toggle('show');\n  }\n\n  matchParamsTo (placeholders) {\n    let parameterExample;\n    const fieldSamples = Object.entries(placeholders.parameters);\n    fieldSamples.forEach(( [key, value], index ) => {\n      parameterExample = document.getElementById(`${key}`);\n      if (parameterExample) {\n        parameterExample.setAttribute('placeholder', `${value}`);\n      }\n    });\n  }\n\n  clickPlxUrl() {\n    let url = super.getFullUrl();\n    console.log(url, '\\n');\n     async function open (url){\n      window.open(url, '_blank');\n     }\n    console.log('Object representation of current state :: ', this.myState);\n    open(url);\n  }\n\n  isValid (input, status) {\n    let field = input;\n    console.log('Is ', field.id, 'valid? ', status, ' ===', field.value);\n    if( field && field.classList.contains('valid')){\n      console.log('Input is already marked as valid...');\n      } else if ( field && field.classList.contains('invalid')){\n          console.log('Input is now valid!');\n          field.classList.toggle('invalid');\n          field.classList.toggle('valid');\n      } else if ( field && !field.classList.toggle('valid')) {\n          console.log('Input has been initially marked as valid, great!');\n          field.classList.toggle('valid');\n      }\n  }\n\n  isInvalid (input, status) {\n    let field = input;\n    console.log('Is ', field.id, 'valid? ', status, ' ===', field.value);\n    if( field && field.classList.contains('invalid')){\n        console.log('Input is already marked as invalid...');\n    } else if ( field && field.classList.contains('valid')){\n        console.log('Input is no longer valid!');\n        field.classList.toggle('valid');\n        field.classList.toggle('invalid');\n    } else if ( field && !field.classList.toggle('invalid')) {\n        console.log('Input has been initially marked as invalid...');\n        field.classList.toggle('invalid');\n    }\n  }\n}\n\n","export default class Test {\n    constructor(){\n\n    }\n\n    test(field, filter, match) {\n        if ( field.value || field.value && field.value.search(filterRegEx) > -1) {\n            field.value = field.value.replace(filter, \"\");\n            let result = {\n                matchesFilter: match.test(field.value),\n                input: field,\n            };\n            return result;\n        }\n    }\n}","import Test from './test';\n\nexport default class Validate extends Test {\n    constructor() {\n        super();\n    }\n\n    is_client_id(input) {\n        console.log(input, 'Input value:: ', input.value);\n        let field = input;\n        let filterRegEx = /[^a-z-0-9]{1,25}/gi;\n        let matchRegEx = /[a-z]{3}-[a-z0-9]{2,25}/gi;\n        let test = {\n            result: super.test(field, filterRegEx, matchRegEx)\n        };      \n        return test.result;\n    }\n\n    is_case_number(input) {\n        console.log(input, 'Input value:: ', input.value);\n        let field = input;\n        let filterRegEx = /[^0-9]{1,8}/g;\n        let matchRegEx = /[0-9]{6,8}/g;\n        let test = {\n            result: super.test(field, filterRegEx, matchRegEx)\n        };      \n        return test.result;\n    }\n\n    is_project_number(input) {\n        console.log(input, 'Input value:: ', input.value);\n        let field = input;\n        let filterRegEx = /[^0-9]{1,12}/g;\n        let matchRegEx = /[0-9]{8,12}/g;\n        let test = {\n            result: super.test(field, filterRegEx, matchRegEx)\n        };      \n        return test.result;\n    }\n\n    is_date_from_YYYY_MM_DD(input) {\n        console.log(input, 'Input value:: ', input.value);\n        let field = input;\n        let filterRegEx = /[^-0-9]{1,10}/g;\n        let matchRegEx = /[0-9]{4}-[0-9]{2}-[0-9]{2}/g;\n        let test = {\n            result: super.test(field, filterRegEx, matchRegEx)\n        };      \n        return test.result;\n    }\n\n    is_date_to_YYYY_MM_DD(input) {\n        console.log(input, 'Input value:: ', input.value);\n        let field = input;\n        let filterRegEx = /[^-0-9]{1,10}/g;\n        let matchRegEx = /[0-9]{4}-[0-9]{2}-[0-9]{2}/g;\n        let test = {\n            result: super.test(field, filterRegEx, matchRegEx)\n        };      \n        return test.result;\n    }\n}\n\n    // isNumberField (minLimit, maxLimit, input) {\n    //     let min = minLimit;\n    //     let max = maxLimit;\n    //     let limit = `{${min}},${max}}`;\n    //     let filterRegEx = `/[^0-9]${limit}+$/g;`\n    //     let matchRegEx = `/[0-9]${limit}+$/g`;\n    //     console.log(input, input.value);\n    //     let field = input;\n    //     let result = {\n    //         isFiltered: matchRegEx.test(field.value),\n    //         input: field,\n    //     };\n    //     if ( field.value.search(filterRegEx) > -1 ) {\n    //         field.value = field.value.replace(filterRegEx, \"\");\n    //         let result = {\n    //             isFiltered: matchRegEx.test(field.value),\n    //             input: field,\n    //         };\n    //     return result;\n    //     }\n    //     return result;\n    // }\n\n    // isMixedField (minLimit, maxLimit, input) {\n    //     let min = minLimit;\n    //     let max = maxLimit;\n    //     let limit = `{${min}},${max}}`;\n    //     let filterRegEx = `/[^a-z0-9]${limit}/gi`;\n    //     console.log(input, input.value);\n    //     let field = input;\n    //     let result = {\n    //         isFiltered: matchRegEx.test(field.value),\n    //         input: field,\n    //     };\n    //     if ( field.value.search(filterRegEx) > -1 ) {\n    //         field.value = field.value.replace(regEx, \"\");\n    //         let result = {\n    //             isFiltered: matchRegEx.test(field.value),\n    //             input: field,\n    //         };\n    //     return result;\n    //     }\n    //     return result;\n    // }\n\n    // is_api_key (input) {\n    //     let field = input;\n    //     if (field) {\n    //         return this.isMixedField(15, field);\n    //     }\n    // }\n\n    // is_domain (input) {\n    //     let field = input;\n    //     if (field) {\n    //         return this.isTextField(16, field);\n    //     }\n    // }\n\n    // is_ip_range (input) {\n    //     let field = input;\n    //     if (field) {\n    //         return this.isNumberField(6, field);\n    //     }\n    // }\n\n    // is_place_Id (input) {\n    //     let field = input;\n    //     if (field) {\n    //         return this.isMixedField(6, field);\n    //     }\n    // }\n\n\n    // is_lat_lng (input) {\n    //     let regEx = /[^0-9.,]/g;\n    //     let field = input;\n    //     let result = {\n    //         isFiltered: true,\n    //         input: field,\n    //     };\n    //     if ( field.value.search(regEx) > -1 ) {\n    //             field.value = field.value.replace(regEx, \"\");\n    //             let result = {\n    //                 isFiltered: true,\n    //                 input: field,\n    //             };\n    //         let split = field.split(',');\n    //         split[2] = {\n    //             lat: null,\n    //             lng: null,\n    //         };\n    //         if (split.length >= 2) {\n    //             const lat = split[0];\n    //             const lng = split[1];\n    //             split[2].lat = this.isNumberField(4, 9, lat);\n    //             split[2].lng = this.isNumberField(4, 9, lng);\n    //             if ( Math.abs(lat) <= 90 && Math.abs(lng) <= 180 && split[2].lat == true && split[2].lng == true ) {\n    //                 const latLng = lat + ',' + lng;\n    //                 result.latLng = latLng;\n    //                 return result;\n    //             }\n\n    //         }\n\n    //     }\n    //     return result;      \n    // }","export default class AppModel {\n  constructor() {\n    this.placeholders = [{\n      parameters: {\n        'case_number': 'Unify case number',\n        'ip_range': '10.0.0.0/32 1234:5678::/48',\n        'query_type': 'Geocoding_API_query/Place_API_details_query',\n        'api_endpoint_type': 'Endpoint_Javascript_API/_Web_Service',\n        'table_suffix': '20180503, last3days, latest, all',\n        'project_number': '1234567891012',\n        'client_id': 'gme-XXXXX',\n        'date_from_YYYY_MM_DD': 'YYYY-MM-DD',\n        'date_to_YYYY_MM_DD': 'YYYY-MM-DD',\n        'api_key': 'AIzaSy***********',\n        'table_column': 'QPS column in logs.web_service_qps.all- \"places\"',\n        'domain': 'domain.com',\n        'url': 'domain.com/path',\n      },\n    }];\n    this.views = {};\n    this.listOfElementsByClass = [{\n      classArrays : [{\n          classList_1 : [],\n          classList_2 : [],\n          classList_3 : [],\n          classList_4 : [],\n          classList_5 : [],\n          classList_6 : [],\n          classList_7 : [],\n          classList_8 : [],\n      }]\n    }];\n\n  }\n\n  resetChildViews () {\n    this.views.non_iretableViews = null;\n    this.views.iterable_views = [];\n  }\n\n  getChildViews () {\n    return this.views.iterable_views;\n  }\n\n  setNewChildView (view) {\n    this.views.iterable_views.push(view);\n  }\n\n  getClassList () {\n    return this.listOfElementsByClass[0];\n  }\n\n  getClassListValues () {\n    return Object.valueOf(this.listOfElementsByClass[0].classArrays);\n  }\n\n  getClassListKeys () {\n    return Object.keys(this.listOfElementsByClass[0].classArrays);\n  }\n\n  getFieldSamples () {\n    return this.placeholders;\n  }\n\n  getParametersList () {\n    return this.placeholders[0];\n  }\n\n  getParameterValues () {\n    return Object.valueOf(this.placeholders[0].parameters);\n  }\n\n  getParameterKeys () {\n    return Object.keys(this.placeholders[0].parameters);\n  }\n}\n","import AppModel from './model';\n\nexport default class AppView extends AppModel {\n  constructor () {\n    super ();\n    this.head = document.getElementsByTagName('head')[0];\n    this.viewsButtons = document.getElementsByClassName('dropbtn');\n    this.mainMenu = document.getElementsByTagName('main')[0];\n    this.plxButton = document.getElementById('plx_button');\n    this.plxButton.textContent = 'PLX';\n    // this.mapsButton = document.getElementById('map_button');\n    // this.mapsButton.textContent = 'Dynamic Map'\n    // this.wsButton = document.getElementById('ws_button');\n    // this.wsButton.textContent = 'WS Tester';\n    // this.staticMapButton = document.getElementById('static_map_button');\n    // this.staticMapButton.textContent = 'Static Map';\n    this.viewsPane = document.createElement('section');\n    this.viewsPane.id = 'views_pane';\n    this.mainMenu.insertAdjacentElement('afterend', this.viewsPane);\n  }\n\n  checkAttachedPanes () {\n     if (this.views.iterable_views !== []){\n        this.viewsListHasChildNodes ();\n     } else {\n        super.resetChildViews ();\n        let views = this.viewsPane.childNodes;\n        this.views.non_iterableViews = views;\n        this.checkAndListChildNodes(this.views.non_iterableViews);\n     }\n  }\n\n  viewsListHasChildNodes() {\n    this.clearClassesOnChildNodes();\n    super.resetChildViews();\n    let views = this.viewsPane.childNodes;\n    this.checkAndListChildNodes(views);\n    this.checkEachViewIndex();\n  }\n\n  checkAndListChildNodes (views) {\n    for (let i = 0; i < views.length; i++){\n      let iteratedView = views[i];\n      let index = i;\n      let objectView = {\n        view: iteratedView,\n        count: index\n      };\n      super.setNewChildView(objectView);\n    }\n  }\n\n  clearClassesOnChildNodes () {\n    let values = super.getChildViews ();\n    if(values){\n        for(let i = 0; i < values.length; i++){\n          let $elInArray = values[i];\n          if ($elInArray.view.classList.contains('one')) {\n              $elInArray.view.classList.toggle('one');\n              this.listOfElementsByClass[0].classArrays[0].classList_1.pop($elInArray);\n            } else if ($elInArray.view.classList.contains('two')){\n                $elInArray.view.classList.toggle('two');\n                this.listOfElementsByClass[0].classArrays[0].classList_2.pop($elInArray);\n            } else if ($elInArray.view.classList.contains('three')){\n                $elInArray.view.classList.toggle('three');\n                this.listOfElementsByClass[0].classArrays[0].classList_3.pop($elInArray);\n            } else if  ($elInArray.view.classList.contains('four')){\n                $elInArray.view.classList.toggle('four');\n                this.listOfElementsByClass[0].classArrays[0].classList_4.pop($elInArray);\n            } else if  ($elInArray.view.classList.contains('five')){\n                $elInArray.view.classList.toggle('five');\n                this.listOfElementsByClass[0].classArrays[0].classList_5.pop($elInArray);\n            } else if  ($elInArray.view.classList.contains('six')){\n                $elInArray.view.classList.toggle('six');\n                this.listOfElementsByClass[0].classArrays[0].classList_6.pop($elInArray);\n            } else if  ($elInArray.view.classList.contains('seven')){\n                $elInArray.view.classList.toggle('seven');\n                this.listOfElementsByClass[0].classArrays[0].classList_7.pop($elInArray);\n            } else {\n                $elInArray.view.classList.toggle('eight');\n                this.listOfElementsByClass[0].classArrays[0].classList_8.pop($elInArray);\n            }\n        }\n    }\n  }\n\n  checkEachViewIndex () {\n    this.views.iterable_views.forEach((viewObject) => {\n        let object = viewObject;\n        if( object.count == 0 ){\n            object.view.classList.add('one');\n            this.listOfElementsByClass[0].classArrays[0].classList_1.push(object);\n          } else if ( object.count == 1 ) {\n                      object.view.classList.add('two');\n                      this.listOfElementsByClass[0].classArrays[0].classList_2.push(object);\n          } else if ( object.count == 2 ) {\n                      object.view.classList.add('three');\n                      this.listOfElementsByClass[0].classArrays[0].classList_3.push(object);\n          } else {\n                      object.view.classList.add('four');\n                      this.listOfElementsByClass[0].classArrays[0].classList_4.push(object);\n        }\n        console.log('Classlist for ',\n          object.view.id, ' is now: ',\n          object.view.classList.value,\n          );\n    });\n  }\n}\n\n","// import { ApiKey } from '../utilities/api_key';\nimport AppView from './view';\nimport ScriptsController from '../plx/controller';\n// import MapsController from '../dynamic_map_modules/maps_base/controller';\n// import StaticWSController from '../static_map/controller';\n\nexport default class AppController extends AppView {\n  constructor(Util) {\n    super();\n    this.util = new Util();\n    // this.cl_apiKey = ApiKey;\n    this.actionButtons = [];\n    this.onLoadCheckForActionButtons();\n  }\n\n  onLoadCheckForActionButtons() {\n    for (let i = 0; i < this.viewsButtons.length; i++){\n      let button = this.viewsButtons[i];\n      this.actionButtons.push(button);\n    }\n    this.loadControllers();\n  }\n\n  loadControllers() {\n    this.instantiateControllersWith(\n          this.util,\n          super.getParametersList(),\n          this.mapsButton,\n          this.plxButton,\n          this.staticMapButton,\n          this.head,\n          this.cl_apiKey,\n          this.viewsPane,);\n    this.controllerIsNowlistening();\n  }\n\n  instantiateControllersWith (util, placeholders, mapsButton, plxButton, staticButton, head, cl_apiKey, viewsPane) {\n    if (!this.scriptsController){\n    this.scriptsController = new ScriptsController(util, placeholders, plxButton, viewsPane);\n    }\n    // if (!this.mapsController){\n    // this.mapsController = new MapsController (util, placeholders, mapsButton, viewsPane, cl_apiKey, head);\n    // }\n    // if (!this.StaticWSController){\n    //   this.staticWSController = new StaticWSController (util, placeholders, staticButton, viewsPane, cl_apiKey, head);\n    // }\n\n  }\n\n  plxShouldLoad() {\n    this.scriptsController.init();\n  }\n\n  controllerIsNowlistening() {\n    this.actionButtons.forEach( (button) => {\n      button.addEventListener(\n        'click', this.oneButtonWasClicked.bind(this),\n        true);\n    });\n  }\n\n  oneButtonWasClicked (e) {\n    e.preventDefault();\n    if (e.target.id == 'plx_button'){\n        this.plxShouldLoad();\n    } \n    // else if (e.target.id == 'map_button'){\n    //     this.mapShouldLoad();\n    // } else if (e.target.id == 'ws_button') {\n    //     this.wsShouldLoad();\n    // } else if (e.target.id == 'static_map_button') {\n    //     this.staticMapShouldLoad();\n    // }\n    super.checkAttachedPanes();\n    console.log(this);\n  }\n  \n  // mapShouldLoad() {\n  //   this.mapsController.init();\n  // }\n\n  // wsShouldLoad() {\n  // }\n\n  // staticMapShouldLoad() {\n  //   this.staticWSController.init();\n  // }\n}\n\n","\nimport '../../.././css/dyn_map.css';\nimport '../../.././css/index.css';\nimport Util from './util';\nimport AppController from '../main_app/controller';\n\nexport default (function initialize(util) {\n  const main = new AppController(util);\n})(Util);\n\n\n\n","import Validate from './validate_input.js';\n\n\nexport default class Util extends Validate {\n\tconstructor () {\n\t\tsuper();\n\t}\n\n\tclearConsole () {\n\t\tconsole.clear();\n\t}\n\n\tlog (data) {\n\t\tconsole.log(data);\n\t}\n}"],"sourceRoot":""}