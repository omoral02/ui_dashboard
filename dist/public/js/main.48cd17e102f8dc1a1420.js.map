{"version":3,"sources":["webpack://./src/js/gator_components/utilities/api_key.js?","webpack://./src/js/gator_components/plx/controller.js?","webpack://./src/js/gator_components/dynamic_map_modules/maps_base/controller.js?","webpack://./src/js/gator_components/plx/view.js?","webpack://./src/js/gator_components/plx/model.js?","webpack://./src/js/gator_components/dynamic_map_modules/maps_base/view.js?","webpack://./src/js/gator_components/dynamic_map_modules/maps_base/model.js?","webpack://./src/js/gator_components/static_map/controller.js?","webpack://./src/js/gator_components/static_map/view.js?","webpack://./src/js/gator_components/static_map/model.js?","webpack://./src/js/gator_components/dremel/controller.js?","webpack://./src/js/gator_components/dremel/view.js?","webpack://./src/js/gator_components/dremel/model.js?","webpack://./src/js/gator_components/main_app/controller.js?","webpack://./src/js/gator_components/main_app/view.js?","webpack://./src/js/gator_components/main_app/model.js?","webpack://./src/js/gator_components/utilities/main.js?","webpack://./src/js/gator_components/utilities/util.js?","webpack://./src/js/gator_components/utilities/validate_input.js?","webpack://./src/js/gator_components/utilities/test.js?"],"names":["module","exports","cl_ApiKey","ScriptsController","util","placeholders","plxButton","viewPane","super","this","currentlySelectedItem","validator","paramBuild","inputCount","setInitialStateObject","initializeView","scriptTitleParametersToggle","setMyStateToInitialWorkingState","scriptsListContainer","addEventListener","onScriptTitleClick","bind","e","target","classList","contains","insertParametersContainer","scriptIndex","parseInt","dataset","index","getNewWorkingState","checkShowOn","secondaryParent","id","visualManager","removeEventListener","generate","onPlxClick","removeTitleListener","removePlxClickListener","removeActive","getStateCurrentlySelectedScript","checkForScriptsContainer","init","hideInactive","innerComponentIsNowListening","value","secondaryParentContainsShowRemove","checkActiveOn","renderParams","getParameterNames","getStateCurrentlySelectedScriptIndex","matchParamsTo","level","resetContainerFor","childnodes","document","getElementsByTagName","n","length","inputNode","getAttribute","onParameterInput","preventDefault","node","inputDetectedOn","push","console","log","buildClick","alert","inputField","validateInputOn","filteredResult","eval","matchesFilter","validateOutputOn","result","validationCheck","input","regEx","test","setParameterValue","Object","defineProperty","writable","final","finalResult","field","status","valid","isValid","isInvalid","generateScriptId","setScriptParamsTo","parameterEntries","entries","getScriptParameterValues","forEach","key","setScriptLinkTo","clickPlxUrl","scriptId","getCurrentlySelectedScript","setScriptIdTo","link","URL","getBasePlxUrl","getScriptId","getParameterInputs","setFullUrlTo","url","getFullUrl","myState","window","open","focus","MapController","mapButton","head","resultsPane","insertMaps","insertMapContainer","isNowListening","listenForChanges","resetPrimaryContainer","appendChild","Element","prototype","urlCatchers","element","isGMapAccessScript","tagName","src","some","includes","call","close","reset","mapReset","search","autocomplete","addListener","place","getPlace","place_id","address_components","geometry","viewport","_map","fitBounds","map","ctx","marker","google","maps","Marker","position","location","title","uniqueId","setMap","setMarker","getMarkers","newMarker","setCenter","setZoom","markerBank","markers","clearMarkers","panTo","LatLng","america","lat","lng","searchSubmit","matchesTest","dataType","initialState","workingState","statebasePlxUrl","params","parameters","currentlySelectedScript","currentlySelectedScriptIndex","setInitialState","param1","param2","state","basePlxUrl","setMyStateToWorkingState","parameterName","parameterValue","scriptsParentHtml","parametersParentHTML","parameter","paramaterHtml","scripts","getCurrentlySelectedScriptIndex","script","setNewState","keys","utility","parentPane","emptyString","primaryParent","createElement","add","primaryParentinnerHTML","getScriptsParentHTML","innerHTML","insertBefore","childNodes","grabInnerComponent","getElementById","scriptButtonContainer","insert","getScripts","li","textContent","toggleScriptsContainer","resetChildren","removeChild","formContainer","secondaryParentinnerHTML","getParametersParentHTML","insertAdjacentElement","grabSecondaryComponent","cardInner","parametersInnerContainer","item","resetListItems","items","getElementsByClassName","i","toggle","removeInactive","onListedItem","remove","parametersHtml","getParameterHTML","parameterExample","setAttribute","geocodes","ids","mapParentHtml","secondaryHTML","getMapParentHTML","getMapSecondaryHTML","jsForm","mapContainer","mapsReady","Map","zoom","center","trafficLayer","mapTypeControlOptions","mapTypeIds","infoWindow","InfoWindow","content","places","Autocomplete","geocoder","Geocoder","event","latLng","placeId","geocode","results","removeAttribute","keyChooserHtml","resetPrimaryContainerFor","getStaticMapParentHTML","grabKeySelector","keySelection","keySelectionInnerHTML","getKeyChooser","secondaryParentInnerHTML","getStaticSecondaryHTML","staticForm","mapStaticButton","staticButton","apikey","getDremelParentHTML","getDremelSecondaryHTML","views","non_iretableViews","iterable_views","view","valueOf","viewsButtons","mainMenu","menuBotton","menuButtons","mapsButton","firstHalf","secondHalf","viewsPane","viewportWidth","viewportHeight","minimumWindow","actionButtons","menuClicked","viewsListHasChildNodes","resetChildViews","non_iterableViews","checkAndListChildNodes","checkEachViewIndex","objectView","count","setNewChildView","setOrder","viewObject","arr","object","style","order","innerWidth","documentElement","clientWidth","innerHeight","clientHeight","current","ceiling","Util","require","cl_apiKey","onLoadCheckForActionButtons","button","loadControllers","instantiateControllersWith","getParametersList","staticMapButton","dremelButton","scriptsController","StaticWSController","staticWSController","mapsController","mapScripts","async","dremelController","controllerIsNowlistening","oneButtonWasClicked","plxShouldLoad","menuItemClicked","menuShouldRender","mapShouldLoad","staticMapShouldLoad","checkAttachedPanes","AppController","filter","match","filterRegEx","replace","inputType","matchOpenInputRegEx","matchPlaceIdRegEx","matchLatLngRegEx","lastCharacter","filterField","searchTest","_split","split","Math","abs","clear","data"],"mappings":"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","file":"js/main.48cd17e102f8dc1a1420.js","sourcesContent":[" const cl_ApiKey = 'AIzaSyCp1Uh6UoZpdVygwUVL6snGHZZaWyA4D1I';\n\nmodule.exports = {cl_ApiKey};\n","import ScriptsView from './view';\n\nexport default class ScriptsController extends ScriptsView {\n  constructor( util, placeholders, plxButton, viewPane ) {\n    super( util, placeholders, viewPane);\n    this.currentlySelectedItem;\n    this.plxButton = plxButton;\n    this.validator = util; //input validation class\n    this.paramBuild;\n    this.inputCount = [];\n  }\n\n  init() {\n    super.setInitialStateObject();\n    super.initializeView();\n    this.scriptTitleParametersToggle();\n  }\n\n  scriptTitleParametersToggle() {\n    super.setMyStateToInitialWorkingState();\n    this.scriptsListContainer.addEventListener(\n      'click', this.onScriptTitleClick.bind(this),\n       false);\n  }\n\n  onScriptTitleClick (e) {\n    this.currentlySelectedItem;\n    // if ( e === Event ) {\n    //   e.preventDefault();\n    //   this.currentlySelectedItem = e.target;\n    // } else if ( e === Element ) {\n    //   this.currentlySelectedItem = e;\n    // }\n\n    //primary container\n    this.currentlySelectedItem = e.target;\n    if ( this.currentlySelectedItem.classList.contains('listed-item') ) {\n        super.insertParametersContainer();\n        let scriptIndex = parseInt(this.currentlySelectedItem.dataset.index);\n        super.getNewWorkingState(scriptIndex, this.currentlySelectedItem);\n        this.checkShowOn(this.secondaryParent);\n    // secondary form container\n    } else if ( this.currentlySelectedItem.id === 'close_plx' ){\n              this.visualManager('all');\n              super.setMyStateToInitialWorkingState();\n    } else if ( this.currentlySelectedItem.id === 'reset_plx' ){\n              this.checkShowOn(this.secondaryParent);\n              super.setMyStateToInitialWorkingState();\n    }\n  }\n\n  removeTitleListener(){\n    this.scriptsListContainer.removeEventListener(\n      'click', this.onScriptTitleClick.bind(this),\n       false); \n  }\n\n  removePlxClickListener(){\n    this.generate.removeEventListener(\n      'click', this.onPlxClick.bind(this),\n      false);\n  }\n\n  checkShowOn (secondaryParent) {\n    if ( secondaryParent.classList.contains('show') ){\n      this.removeTitleListener();\n      this.removePlxClickListener();\n      this.visualManager('remove');\n      super.removeActive(super.getStateCurrentlySelectedScript());\n      super.setMyStateToInitialWorkingState();\n      super.checkForScriptsContainer();\n      this.init();\n    } else {\n          this.visualManager('insert');\n          super.hideInactive();\n          this.innerComponentIsNowListening();\n    }\n  }\n\n  visualManager (value) {\n    if ( value === 'remove' ) {\n      this.secondaryParentContainsShowRemove('children');\n      super.checkActiveOn(super.getStateCurrentlySelectedScript());\n    } else if ( value === 'all' ) {\n      this.secondaryParentContainsShowRemove('all');\n    } else if ( value === 'insert' ) {\n        super.insertParametersContainer();\n        super.renderParams(super.getParameterNames(super.getStateCurrentlySelectedScriptIndex()));\n        super.matchParamsTo(this.placeholders);\n        super.checkActiveOn(super.getStateCurrentlySelectedScript());\n    }\n  }\n\n  secondaryParentContainsShowRemove (level) {\n    super.resetContainerFor(level);\n  }\n\n  innerComponentIsNowListening() {\n    /** formData test  **/\n    // this.parametersInnerContainer.addEventListener('submit', (e) => {\n    //   console.log('Form data event fired: ', e);\n    //   // on form submission, prevent default\n    //   e.preventDefault();\n\n    //   // grab input nodes\n    //   let childnodes = document.getElementsByTagName('input');\n    //   console.log(childnodes);\n    //   if(childnodes){\n    //       for(let n=0; n < childnodes.length; n++){\n    //           let inputNode = childnodes[n];\n    //           if (inputNode){\n    //             this.onParameterInput(inputNode); \n    //             // inputNode.addEventListener(\n    //             // 'input', this.onParameterInput.bind(this),\n    //             // false)\n    //           }\n    //         }\n    //   }\n     \n    // construct a FormData object, which fires the formdata event\n    //  let data = new FormData(this.parametersInnerContainer);\n    //  console.log(data);\n    // });\n\n    /** input listener setup **/\n    let childnodes = document.getElementsByTagName('input');\n    // console.log(childnodes);\n    /** listen for field inputs:\n     - if values are typed in\n     - listen for click trigger\n      */\n    if(childnodes){\n      for(let n=0; n < childnodes.length; n++){\n          let inputNode = childnodes[n];\n          if (inputNode.getAttribute('rel') === 'plxInput'){\n            inputNode.addEventListener(\n            'input', this.onParameterInput.bind(this), \n            false);\n            // inputNode.addEventListener(\n            // 'onkeydown', this.onParameterInput.bind(this),\n            // false)\n          }\n        }\n      }\n    this.generate.addEventListener(\n      'click', this.onPlxClick.bind(this),\n      false);\n  }\n\n  onParameterInput (e) {\n    e.preventDefault();\n    let node = e.target;\n    this.inputDetectedOn(node);\n  }\n\n  onPlxClick (e) {\n    e.preventDefault();\n    this.removePlxClickListener();\n    this.inputCount = [];\n    let childnodes = document.getElementsByTagName('input');\n    // console.log(childnodes);\n    if(childnodes){\n      let inputCount = [];\n      for(let n=0; n < childnodes.length; n++){  \n        let node = childnodes[n];\n          if (node.getAttribute('rel') === 'plxInput'){\n            // this.inputDetectedOn(node); \n            //   console.log(node);\n            if (node.value.length > 0){\n              inputCount.push(node);\n              this.inputDetectedOn(node); \n              console.log(node);\n            }\n          }\n       }\n\n      // if( this.inputCount.length >= 4){\n      //   this.buildClick();\n      // } else {\n      //   console.log('We only have these entries: ', inputCount);\n      //   alert('Please ensure all fields have valid data!')\n\n      if( inputCount.length >= 3){\n        this.buildClick();\n      } else {\n        console.log('We only have these entries: ', inputCount);\n        alert('Please ensure the following fields have valid data in the listed form inputs:\\n\\n\\bProject: 123456789 AND / OR ClientID: gme-xxxxx \\nAND \\nDate From: YYYY-MM-DD \\nDate To: YYYY-MM-DD');\n      }\n    }\n  }\n\n  inputDetectedOn(target){\n    let inputField = target\n    if ( inputField.classList.contains('input') && inputField.value ) {\n      this.validateInputOn(inputField);\n    }\n  }\n\n  validateInputOn (target) {\n    let inputField = target;\n        // use eval to dynamically invoke regEx functions that filter input\n        // based on target id as the ids are part of the function names.\n        // from `validate_input.js`.\n        // ex: `this.validator.is_project_number(value, validatorFunction)` < validate project number\n        // ex: `this.validator.is_case_number(value, validatorFunction)` < validate case number\n        let id = inputField.id;\n        console.log('Input to filter :: ' + id);\n        let filteredResult = eval('this.validator.is_'+ id)(inputField);\n        console.log('Does input match filter? :: ', filteredResult.matchesFilter);\n        this.validateOutputOn(filteredResult);\n  }\n\n  validateOutputOn (result) {\n    let validationCheck = result;\n    let input = validationCheck.input;\n    // this regEx tests the input.value to ensure\n    // there is no white-space in the tested result.\n    let regEx = /[^\\S+]/gi;\n    console.log(validationCheck);\n    if ( input.value ) {\n        console.log('Whitespace in input? :: ', regEx.test(input.value));\n              // add the property `validationcheck.valid`\n              // to be either true or false\n              super.setParameterValue(input.id, input.value);\n              if ( validationCheck.matchesFilter === true && regEx.test(input.value) === false ){\n                Object.defineProperty(validationCheck, 'valid', {value:true, writable: true});\n                this.inputCount.push(validationCheck);\n                this.final(validationCheck);\n              } else {\n                Object.defineProperty(validationCheck, 'valid', {value:false, writable: true});\n                this.inputCount.push(validationCheck);\n                this.final(validationCheck);\n             }    \n      }\n  }\n\n  final (finalResult) {\n      let final = finalResult;\n      let field = final.input;\n      let status = final.valid;\n      if ( final && status == true ) {\n        console.log('This', `${field.id}`, 'meets the minimum requirements'); \n        super.isValid(field, status);\n        return true;\n      } else if ( final && status == false ) {\n        super.isInvalid(field, status);\n        console.log('This does not meet the minimum requirements for a', `${field.id}`);\n        return false;\n      }\n        return false;\n  }\n\n  buildClick () {\n    this.generateScriptId();\n    this.paramBuild = '';\n    super.setScriptParamsTo(this.paramBuild);\n     const parameterEntries = Object.entries(super.getScriptParameterValues());\n     console.log(parameterEntries);\n     if(parameterEntries.length >= 1){\n         parameterEntries.forEach(( [key, value], index ) => {\n               this.paramBuild += `${key}` + ':' +`${value}`;\n                 if ( index !== parameterEntries.length - 1 ) {\n                   this.paramBuild += ',';\n                 }\n         });\n         console.log('String representation of parameter inputs :: ', this.paramBuild, '\\n');\n         this.setScriptLinkTo(this.paramBuild);    \n     }\n     this.clickPlxUrl();\n   }\n \n   generateScriptId() {\n     let script = super.getCurrentlySelectedScript();\n     const scriptId = `${script.id}?p=`;\n     super.setScriptIdTo(scriptId);\n   }\n \n   setScriptLinkTo(link){\n     super.setScriptParamsTo(link);\n     let URL  = super.getBasePlxUrl();\n     URL += super.getScriptId();\n     URL += super.getParameterInputs();\n     super.setFullUrlTo(URL);\n   }\n \n   clickPlxUrl() {\n     let url = super.getFullUrl();\n     function open (url){\n        let _window = window.open(url, '_blank');\n        _window.focus();\n \n      }\n     console.log(url, '\\n');\n     console.log('Object representation of current state :: ', this.myState);\n     open(url);\n   }\n}\n\n","import MapView from './view';\n\nexport default class MapController extends MapView {\n  constructor ( util, placeholders, mapButton, viewPane, key, head, resultsPane ) {\n        super(placeholders, viewPane, key, head, resultsPane);\n        this.mapButton = mapButton;\n        // this.apikey = key;\n        // this.head = head;\n        this.validator = util; //form input validation class\n  }\n\n  init(){\n    let viewReady = super.initializeView();\n      if (viewReady === true){\n        this.insertMaps();\n        console.log('Map Insert')\n        return\n      }\n      console.log('Map Eject');\n  }\n\n  insertMaps(){\n    let mapReady = super.insertMapContainer();\n      if (mapReady === true ){\n        console.log('map ready true');\n        this.isNowListening();\n        this.listenForChanges();\n        return\n      } \n      console.log('not Map ready');\n      super.resetPrimaryContainer();\n  }\n  \n  isNowListening(){\n     // Store old reference\n     const appendChild = Element.prototype.appendChild;\n  \n     // All services to catch\n     const urlCatchers = [\n       \"/AuthenticationService.Authenticate?\",\n       \"/QuotaService.RecordEvent?\"\n     ];\n   \n     // Google Map is using JSONP.\n     // So we only need to detect the services removing access and disabling them by not\n    //  // inserting them inside the DOM\n     Element.prototype.appendChild = function (element) {\n       const isGMapScript = element.tagName === 'SCRIPT' && /maps\\.googleapis\\.com/i.test(element.src);\n       const isGMapAccessScript = isGMapScript && urlCatchers.some(url => element.src.includes(url));\n      \n       const isDataImage = element.tagName === 'img' && /data:image\\/svg\\+xml/i.test(element.src);\n\n       if (!isGMapAccessScript){\n          // if (isDataImage) {\n          //   console.log('Caught: ', element);\n          //   //ignore Maps APIs image injections\n          //   return appendChild.call(this, element);\n          // }\n           return appendChild.call(this, element);\n       } else if (isGMapAccessScript){\n            console.log('Tokenized: ', element.src);\n           return appendChild.call(this, element);\n       }\n   \n       // Extract the callback to call it with success data\n       // (actually this part is not needed at all but maybe in the future ?)\n       //const callback = element.src.split(/.*callback=([^\\&]+)/, 2).pop();\n       //const [a, b] = callback.split('.');\n       //window[a][b]([1, null, 0, null, null, [1]]);\n   \n       // Returns the element to be compliant with the appendChild API\n      \n       return element;\n      }\n  }\n\n  listenForChanges(){\n\n    this.close.addEventListener(\n      'click', this.resetPrimaryContainer.bind(this), \n      false\n    )\n   \n    // this.jsForm.addEventListener(\n    //   'submit', this.searchEntrySubmission,\n    //   false);\n\n    this.reset.addEventListener(\n      'click',  this.mapReset.bind(this), \n      false);\n\n    // this.searchSubmit.addEventListener(\n    //   'click', this.searchEntrySubmission.bind(this),\n    //   false);\n    \n    this.search.addEventListener(\n      'input', this.onParameterInput.bind(this),\n       false);\n\n    this.autocomplete.addListener('place_changed', ()=>{\n        let place = this.autocomplete.getPlace();\n        console.log('Get Place call ::', place.place_id, place);\n        if (place && place.address_components){\n          if (place.geometry.viewport) {\n            this._map.fitBounds(place.geometry.viewport);\n            console.log('Has ViewPort Bounds');\n            // restTest(place, this.key);\n            newMarker(place, this._map, this);\n          } else {\n            console.log('No ViewPort Bounds');\n            this._map.setCenter(place.geometry.location);\n            this._map.setZoom(14);\n          }\n          // this.searchEntrySubmission();\n        }\n\n        function newMarker (place, map, ctx){\n          let marker = new google.maps.Marker({\n            position: place.geometry.location,\n            map: map,\n            title: 'Place ID client-side geocode geometry location',\n          });\n          // map.setZoom(8);\n          marker.id = ctx.uniqueId++\n          marker.setMap(map);\n          ctx.setMarker(marker);\n          console.log(ctx.getMarkers());\n        }\n\n        // function restTest (place, _key){\n        //   if (place.place_id){\n        //     let placeId = place.place_id;\n        //     let key = _key;\n        //     console.log(placeId);\n        //     console.log(key);\n        //     async function getWsResponse(){\n        //       console.log('Async invoked');\n        //       const response = await fetch('https://rest-proxy.appspot.com',{\n        //         method: 'PUT',\n        //         headers: {\n        //           'Content-Type': 'application/json'\n        //         },\n        //         // mode: 'no-cors',\n        //         body: {\n        //           \"url\":`https://maps.googleapis.com/maps/api/geocode/json?place_id=${placeId}&key=${key}`},\n        //       });\n        //     }\n        //     getWsResponse()\n        //       .then((data)=>{\n        //         const resultJson = document.createElement('div');\n        //         resultJson.innerHTML = data;\n        //         this.resultsPane.appendChild(resultJson);\n\n        //         console.log(data)\n        //       });\n        //   }\n        // };\n    });\n  }\n\n  mapReset (){\n    this.search.value = '';\n    this.markerBank.markers.forEach((marker)=>{\n      marker.setMap(null);\n      super.clearMarkers();\n      // field.value = field.value.replace(filter, \"\");\n    });\n    this._map.panTo(new google.maps.LatLng(this.america.lat, this.america.lng));\n    this._map.setZoom(10);\n  }\n\n  searchEntrySubmission (){\n    this.inputDetectedOn(this.searchSubmit);\n  }\n\n  onParameterInput (e){\n    e.preventDefault();\n    let node = e.target;\n    this.inputDetectedOn(node);\n  }\n\n  inputDetectedOn (target){\n    let inputField = target\n    if ( inputField.classList.contains('input') && inputField.value.length > 2 ) {\n      this.validateInputOn(inputField);\n    }\n  }\n\n  validateInputOn (target) {\n    let inputField = target;\n        // use eval to dynamically invoke regEx functions that filter input\n        // based on target's id as the ids are part of the function names.\n        // from `validate_input.js`.\n        // ex: `this.validator.is_project_number(HTMLtarget)` < validate project number\n        // ex: `this.validator.is_client_id(HTMLtarget)` < validate case number\n        let id = inputField.id;\n        console.log('Input to filter :: ' + id);\n        let filteredResult = eval('this.validator.is_'+ id)(inputField);\n        console.log('Does input match test? :: ', filteredResult.matchesTest);\n        this.validateOutputOn(filteredResult);\n  }\n\n\n  validateOutputOn (result) {\n    let validationCheck = result;\n    let input = validationCheck.input;\n    // this regEx tests the input.value to ensure\n    // there is no white-space in the tested result.\n    let regEx = /[^\\S+]/gi;\n    console.log(validationCheck);\n    if ( input.value ) {\n        console.log('Whitespace in input? :: ', regEx.test(input.value));\n              // add the property `validationcheck.valid`\n              // to be either true or false\n              // super.setParameterValue(input.id, input.value);\n              if ( validationCheck.matchesTest){\n                Object.defineProperty(validationCheck, 'valid', {value:true, writable: true});\n                // this.inputCount.push(validationCheck);\n                this.final(validationCheck);\n              } \n              else {\n                Object.defineProperty(validationCheck, 'valid', {value:false, writable: true});\n                // this.inputCount.push(validationCheck);\n                this.final(validationCheck);\n             }    \n      }\n  }\n\n  final (finalResult) {\n      let final = finalResult;\n      let field = final.input;\n      let status = final.valid;\n      if ( final && status == true ) {\n        console.log('This', `${field.id}`, 'meets the minimum requirements for a', `${final.dataType}`); \n        super.isValid(final);\n        return true;\n      } else if ( final && status == false ) {\n        // super.isInvalid(field, status);\n        console.log('This does not meet the minimum requirements for a', `${final.dataType}`);\n        return false;\n      }\n        return false;\n  }\n}\n","import ScriptsModel from './model';\n\nexport default class ScriptsView extends ScriptsModel {\n  constructor (util, placeholders, viewPane) {\n    super(util);\n    this.utility = super.util;\n    this.placeholders = placeholders;\n    this.parentPane = viewPane;\n    this.emptyString = '';\n  }\n\n  initializeView() {\n    this.checkForScriptsContainer();\n  }\n\n  checkForScriptsContainer () {\n    if ( !this.primaryParent ) {\n          this.primaryParent = document.createElement('div');\n          this.primaryParent.id = 'scriptsPrimaryContainer';\n          this.primaryParent.classList.add('card');\n          this.primaryParent.classList.add('component');\n          this.primaryParentinnerHTML = ( () => {\n            return super.getScriptsParentHTML();\n          })();\n          this.primaryParent.innerHTML = this.primaryParentinnerHTML;\n          this.parentPane.insertBefore(\n            this.primaryParent,\n            this.parentPane.childNodes[0]);\n          this.grabInnerComponent();\n    } else {\n          this.resetContainerFor('all');\n    }\n  }\n\n  grabInnerComponent() {\n    this.scriptsListContainer = document.getElementById('plx-InnerCard');\n    this.scriptButtonContainer = document.getElementById('scriptButtonContainer');\n    this.insert(super.getScripts());\n  }\n\n  insert (scripts) {\n    console.log('Plx scripts :: ', scripts);\n    scripts.forEach( (script, index ) => {\n      const li = document.createElement('li');\n      li.textContent = script.title;\n      li.classList.add('listed-item');\n      li.title = 'Click this title name to select the script or to reset your script selection.';\n      li.dataset.index = index;\n      this.scriptsListContainer.appendChild(li);\n    });\n    this.toggleScriptsContainer();\n  }\n\n  toggleScriptsContainer() {\n    this.primaryParent.classList.add('show');\n  }\n\n  resetContainerFor (level) {\n    if ( level === 'all' ){\n      this.resetChildren('children');\n      if ( this.primaryParent ) {\n        this.parentPane.removeChild(this.primaryParent);\n      } \n      this.primaryParent = null;\n    } else if ( level === 'children' ) {\n      this.resetChildren('children');\n    }\n  }\n\n  resetChildren(level) {\n    if ( level === 'children' ){\n      if ( super.getCurrentlySelectedScript === Element ){\n        this.removeActive(super.getCurrentlySelectedScript);\n      }\n      if ( this.params ) {\n           this.formContainer.removeChild(this.params);\n      }\n      if ( this.secondaryParent ) {\n           this.scriptsListContainer.removeChild(this.secondaryParent);\n      }\n    }\n    this.params = null;\n    this.secondaryParent = null;\n  }\n\n  insertParametersContainer () {\n    if ( !this.secondaryParent ){\n          this.secondaryParent = document.createElement('div');\n          this.secondaryParent.classList.add('card');\n          this.secondaryParent.id = 'secondaryContainer';\n          this.secondaryParentinnerHTML = ( () => {\n            return super.getParametersParentHTML();\n          })();\n          this.secondaryParent.innerHTML = this.secondaryParentinnerHTML;\n          this.scriptsListContainer.insertAdjacentElement(\n            'afterbegin',\n            this.secondaryParent);\n          this.grabSecondaryComponent();\n    }\n  }\n\n  grabSecondaryComponent() {\n    this.cardInner = document.getElementById('card-inner');\n    this.parametersInnerContainer = document.getElementById('plxParametersForm');\n    this.close = document.getElementById('close_plx');\n    this.close.textContent = 'Close';\n    this.generate = document.getElementById('gen_plx');\n    this.generate.textContent = 'Submit PLX params';\n    this.reset = document.getElementById('reset_plx');\n    this.reset.textContent = 'Reset';\n  }\n\n  toggleParamsContainer() {\n    this.secondaryParent.classList.add('show');\n  }\n\n  checkActiveOn (script) {\n    const item = script;\n    if ( item && item.classList.contains('listed-item' )){\n        if ( item.classList.contains('active' )){\n             this.removeActive(item);\n        } else {\n             this.resetListItems();\n             item.classList.add('active');\n             item.focus();\n        }\n    }\n  }\n\n  hideInactive(){\n    let items = document.getElementsByClassName('listed-item');\n    for(let i=0; i < items.length; i++){\n      let item = items[i];\n      if( !item.classList.contains('active')){\n        item.classList.toggle('inactive');\n      }\n    }\n  }\n\n  resetListItems() {\n    const items = document.getElementsByClassName('listed-item');\n    for ( let i = 0; i < items.length; i++ ){\n      const item = items[i];\n      if ( item.classList.contains('active' )){\n           this.removeActive(item);\n      }\n      if ( item.classList.contains('inactive')){\n           this.removeInactive(item);\n      }\n    }\n  }\n\n  removeActive (onListedItem) {\n    const item = onListedItem;\n    item.classList.remove('active');\n  }\n\n  removeInactive (onListedItem) {\n    const item = onListedItem;\n    item.classList.remove('inactive');\n  }\n\n  renderParams (parameters) {\n    if ( !this.params ){\n        this.params = document.createElement('div');\n        this.params.id = 'params';\n    }\n    this.parametersHtml = '';\n    parameters.forEach( (parameter) => {\n      this.parametersHtml += super.getParameterHTML(parameter);\n    });\n    this.params.innerHTML = this.parametersHtml;\n    this.formContainer = document.getElementById('plxForm');\n    this.formContainer.insertBefore(this.params, this.formContainer.childNodes[0]);\n    this.secondaryParent.classList.toggle('show');\n  }\n\n  matchParamsTo (placeholders) {\n    let parameterExample;\n    const fieldSamples = Object.entries(placeholders.parameters);\n    fieldSamples.forEach(( [key, value], index ) => {\n      parameterExample = document.getElementById(`${key}`);\n      if (parameterExample) {\n        parameterExample.setAttribute('placeholder', `${value}`);\n      }\n    });\n  }\n\n  isValid (input, status) {\n    let field = input;\n    console.log('Is ', field.id, 'valid? ', status, ' === ', field.value);\n    if( field && field.classList.contains('valid')){\n      console.log('Input is already marked as valid...');\n      } else if ( field && field.classList.contains('invalid')){\n          console.log('Input is now valid!');\n          field.classList.toggle('invalid');\n          field.classList.toggle('valid');\n      } else if ( field && !field.classList.toggle('valid')) {\n          console.log('Input has been initially marked as valid, great!');\n          field.classList.toggle('valid');\n      }\n  }\n\n  isInvalid (input, status) {\n    let field = input;\n    console.log('Is ', field.id, 'valid? ', status, ' ===', field.value);\n    if( field && field.classList.contains('invalid')){\n        console.log('Input is already marked as invalid...');\n    } else if ( field && field.classList.contains('valid')){\n        console.log('Input is no longer valid!');\n        field.classList.toggle('valid');\n        field.classList.toggle('invalid');\n    } else if ( field && !field.classList.toggle('invalid')) {\n        console.log('Input has been initially marked as invalid...');\n        field.classList.toggle('invalid');\n    }\n  }\n}\n\n","export default class ScriptsModel {\n  constructor(util) {\n    this.util = util;\n    this.initialState = {};\n    this.workingState = this.initialState;\n    this.myState = {};\n  }\n\n  /**\n   * Reduce lines of code with something like this:\n   *\n    Foo() {\n      let _acctNum = '';\n\n      return {\n          getAcctNum: function() {\n              return _acctNum;\n          },\n          setAcctNum: function (newAcctNum) {\n            _acctNum = newAcctNum;\n          },\n        }\n      }\n   *\n   */\n\n  setInitialStateObject() {\n    let state = {\n      statebasePlxUrl: 'http://plx/scripts2/',\n      id: '',\n      params: '',\n      parameters: {},\n      url: null,\n      currentlySelectedScript: '',\n      currentlySelectedScriptIndex: '',\n    };\n    this.initialState = state;\n    this.setInitialState(this.initialState);\n  }\n\n  setInitialState (initialState) {\n    this.workingState = initialState;\n  }\n\n  setMyStateToInitialWorkingState () {\n    this.setInitialStateObject();\n    this.myState = this.workingState;\n  }\n\n  setNewState (param1, param2) {\n    this.workingState = {};\n    let state = {\n      basePlxUrl: 'http://plx/scripts2/',\n      id: '',\n      params: '',\n      parameters: {},\n      url: null,\n      currentlySelectedScript: param1,\n      currentlySelectedScriptIndex: param2,\n    };\n    this.workingState = state;\n    this.setMyStateToWorkingState(this.workingState);\n  }\n\n  setMyStateToWorkingState(workingState) {\n    this.myState = workingState;\n  }\n\n  setScriptIdTo (id) {\n    this.myState.id = id;\n  }\n\n  setScriptParamsTo (params) {\n    this.myState.params = params;\n  }\n\n  setFullUrlTo (url) {\n    this.myState.url = url;\n  }\n\n  setParameterValue (parameterName, parameterValue) {\n    this.myState.parameters[parameterName] = parameterValue;\n  }\n\n  getScriptsParentHTML() {\n    this.scriptsParentHtml =\n       `<div id='scriptList' rel='plxScriptWindow' class=''>\n          <h2 class='card-header'>PLX Scripts</h2>\n          <ul class='card-inner' id='plx-InnerCard'></ul>\n        </div>`;\n    return this.scriptsParentHtml;\n    // const higher_order_template = require('./pug/higher_order_component.pug');\n    // async function template(fileTemplate){\n    //   this.inserts = {\n    //     parentId: 'scriptsParentHtml',\n    //     rel: 'plxScriptWindow',\n    //     secondaryId: 'scriptButtonContainer'\n    //   };\n      \n    //   const pugModule = import(/* webpackChunkName: \"pug\" */ 'pug').then(module => {\n    //      const pug = module.default;\n    //      async function generateTemplate(pug){\n    //       const file = pug.compileFile(fileTemplate);\n    //       return file;\n    //      }\n    //      return template = generateTemplate(pug);\n    //     });\n      \n    //   };\n\n    // return template(higher_order_template);\n  }\n\n  getParametersParentHTML() {\n    this.parametersParentHTML =\n      `<div id='card-inner' class='card-inner'>\n          <h2 class='card-header'>Parameters</h2>\n          <div id='plxParametersForm' class='parametersForm'>\n            <form id=\"plxForm\" onsubmit=\"return false;\" name=\"plx_form\">\n              <ul id='scriptButtonContainer' class='buttonContainer'>\n                <button type='button' class='exitbtn' id='close_plx' title='Close this PLX Window.'></button>\n                <button type='button' class='exitbtn' id='reset_plx' title='Reset this script selection.'></button>\n                <input type='submit' id='gen_plx' class='exitbtn' title='Generate URL for PLX with case info.'>\n              </ul>\n            </form>\n         </div>\n      </div>`;\n    return this.parametersParentHTML;\n  }\n\n  getParameterHTML (parameter) {\n    let paramaterHtml;\n    if (parameter === 'date_from_YYYY_MM_DD' || parameter === 'date_to_YYYY_MM_DD'){\n      if (parameter === 'date_from_YYYY_MM_DD'){\n        paramaterHtml =\n        `<div class='parameter'>\n                <label for='${parameter}'>Date From:</label>\n                <input type='text' size='20' maxlength='10' rel='plxInput' class='input' id='${parameter}' placeholder='' required>\n        </div>`;\n      }\n      else if (parameter === 'date_to_YYYY_MM_DD') {\n        paramaterHtml =\n        `<div class='parameter'>\n              <label for='${parameter}'>Date To:</label>\n              <input type='text' size='20' maxlength='10' rel='plxInput' class='input' id='${parameter}' placeholder='' required>\n        </div>`;\n      }\n    } else if (parameter === 'project_number') {\n      paramaterHtml =\n        `<div class='parameter'>\n              <label for='${parameter}'>Project:</label>\n              <input type='text' name='project' size='20' rel='plxInput' class='input' id='${parameter}' placeholder='' autofocus required>\n        </div>`;\n    } else if (parameter === 'client_id') {\n      paramaterHtml =\n        `<div class='parameter'>\n              <label for='${parameter}'>ClientID (if applicable):</label>  \n              <input type='text' name='clientID' size='20' rel='plxInput' class='input' id='${parameter}' placeholder='' >\n        </div>`;\n    }\n    // if (parameter === 'date_from_YYYY_MM_DD' || parameter === 'date_to_YYYY_MM_DD'){\n    //   if (parameter === 'date_from_YYYY_MM_DD'){\n    //     paramaterHtml =\n    //     `<div class='innerParam'>\n    //           <p class='parameter'>\n    //             <label for='${parameter}'>Date From</label>\n    //             <input type='text' size='20' maxlength='10' class='input' id='${parameter}' placeholder=''required>\n    //           </p>\n    //       </div>`;\n    //   }\n    //   else if (parameter === 'date_to_YYYY_MM_DD') {\n    //     paramaterHtml =\n    //     `<div class='innerParam'>\n    //           <p class='parameter'>\n    //               <label for='${parameter}'>Date To</label>\n    //           </p>\n    //           <p>\n    //             <input type='text' size='20' maxlength='10' class='input' id='${parameter}' placeholder='' required>\n    //           </p>\n    //       </div>`;\n    //   }\n    // } else if (parameter === 'project_number') {\n    //   paramaterHtml =\n    //     `<div class='innerParam'>\n    //           <p class='parameter'>\n    //               <label for='${parameter}'>Project</label>\n    //           </p>\n    //           <p>\n    //             <input type='text' name='project' size='20' class='input' id='${parameter}' placeholder='' autofocus required>\n    //           </p>\n    //       </div>`;\n    // } else if (parameter === 'client_id') {\n    //   paramaterHtml =\n    //     `<div class='innerParam'>\n    //           <p class='parameter'>\n    //               <label for='${parameter}'>ClientID (if applicable)</label>\n    //           </p>\n    //           <p>\n    //             <input type='text' name='clientID' size='20' class='input' id='${parameter}' placeholder='' required>\n    //           </p>\n    //       </div>`;\n    // }\n    return paramaterHtml;\n  }\n\n  getScripts() {\n    this.scripts = [\n          // {\n          //    title: 'API usage for specified mafe_weblog API by IP',\n          //    id: 'script_5b._a15f62_0000_2cc9_bcc5_001a11404b34',\n          //    parameters: {\n          //      'case_number': '',\n          //      'ip_range': '',\n          //      'query_type': '',\n          //      'api_endpoint_type': '',\n          //      'table_suffix': '',\n          //      'project_number': '',\n          //      'client_id': '',\n          //      },\n          //    },\n          //    {\n          //      title: 'QPS breakdown from Web-Service',\n          //      id: 'script_5b._a16102_0000_254d_940f_089e0822b400',\n          //      parameters: {\n          //        'table_column': '',\n          //        'project_number': '',\n          //        'date_from_YYYY_MM_DD': '',\n          //        'date_to_YYYY_MM_DD': '',\n          //      },\n          // },\n          // {\n          //   title: 'Daily client and web service requests project and API key',\n          //   id: 'script_5b._4e734f_0000_2d6d_af2d_94eb2c05a52e',\n          //   parameters: {\n          //     'client_id': '',\n          //     'project_number': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n          // {\n          //   title: 'Daily client-side requests per Day & API key',\n          //   id: 'script_5d._03c800_0000_2a6b_85d2_883d24f8e3d4',\n          //   parameters: {\n          //     'client_id': '',\n          //     'project_number': '',\n          //     // 'api_key': '',\n          //     // 'domain': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n          // {\n          //   title: 'Daily requests by API key & Channel',\n          //   id: 'script_5b._4e734f_0000_2d6d_af2d_94eb2c05a52e',\n          //   parameters: {\n          //     'project_number': '',\n          //     'client_id': '',\n          //     // 'api_key': '',\n          //     // 'domain': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n          // {\n          //   title: 'Total client-side requests by Domain, API key & Days Used',\n          //   id: 'script_5d._03c5d4_0000_2961_9985_24058873f66c',\n          //   parameters: {\n          //     'client_id': '',\n          //     'project_number': '',\n          //     // 'api_key': '',\n          //     // 'domain': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n          {\n            title: 'Total URL Stats(redacted) by URL, Domain, Project & Days Used',\n            id: 'script_5d._07f69f_0000_21a9_b028_f403043e7540',\n            parameters: {\n              'project_number': '',\n              'client_id': '',\n              // 'url': '',\n              // 'api_key': '',\n              // 'domain': '',\n              'date_from_YYYY_MM_DD': '',\n              'date_to_YYYY_MM_DD': '',\n            },\n          },\n          {\n            title: 'F1 - Historic Maps APIs: Daily client and web service requests',\n            id: 'script_5e._1f6a23_0000_2fff_b6b3_30fd381779c0',\n            parameters: {\n                    'project_number': '',\n                    'client_id': '',\n                    'date_from_YYYY_MM_DD': '',\n                    'date_to_YYYY_MM_DD': '',\n                  },\n          },\n          {\n            title: 'Dremel - Historic Maps APIs: Daily client and web service requests',\n            id: 'script_5e._44a39a_0000_24b9_a898_f4f5e8077214',\n            parameters: {\n              'project_number': '',\n              'client_id': '',\n              // 'url': '',\n              // 'api_key': '',\n              // 'domain': '',\n              'date_from_YYYY_MM_DD': '',\n              'date_to_YYYY_MM_DD': '',\n            },\n          },\n          {\n            title: 'GeoStats Domain & Web-services w/ IP obfuscation',\n            id: 'script_5d._5ef884_0000_2398_b5bf_089e082dbdd4',\n            parameters:{\n              'project_number': '',\n              'client_id': '',\n              // 'url': '',\n              // 'api_key': '',\n              // 'domain': '',\n              'date_from_YYYY_MM_DD': '',\n              'date_to_YYYY_MM_DD': '',\n\n            },\n          },\n          // {\n          //   title: 'Places Autocomplete Sessions V2',\n          //   id: 'maps_support_recent_places_autocomplete_sessions2',\n          //   parameters: {\n          //     'client_id': '',\n          //     'project_number': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n          // {\n          //   title: 'Historic Maps APIs: Daily client and web service requests',\n          //   id: 'script_5d._7814be_0000_2f72_80a4_001a11405cb4',\n          //   parameters: {\n          //           'project_number': '',\n          //           'client_id': '',\n          //           'date_from_YYYY_MM_DD': '',\n          //           'date_to_YYYY_MM_DD': '',\n          //         },\n          // },\n          // {\n          //   title: 'User-Agent script - provided by Seth S.',\n          //   id: 'script_5d._5f020f_0000_2cfb_9763_001a11c0ea40 ',\n          //   parameters: {\n          //     'client_id': '',\n          //     'project_number': '',\n          //     'date_from_YYYY_MM_DD': '',\n          //     'date_to_YYYY_MM_DD': '',\n          //   },\n          // },\n    ];\n    return this.scripts;\n  }\n\n  getScript (index) {\n    return this.scripts[index];\n  }\n\n  getCurrentlySelectedScript() {\n    return this.scripts[this.getCurrentlySelectedScriptIndex()];\n  }\n\n  getCurrentlySelectedScriptIndex() {\n    return this.myState.currentlySelectedScriptIndex;\n  }\n\n  getStateCurrentlySelectedScript () {\n    return this.myState.currentlySelectedScript;\n  }\n\n  getStateCurrentlySelectedScriptIndex () {\n    return this.myState.currentlySelectedScriptIndex;\n  }\n\n  getNewWorkingState (index, script) {\n    let workingState = this.setNewState(script, index);\n    return workingState;\n  }\n\n  getParameterNames (scriptIndex) {\n    return Object.keys(this.scripts[scriptIndex].parameters);\n  }\n\n  getParameterInputs () {\n    return this.myState.params;\n  }\n\n  getBasePlxUrl() {\n    return this.myState.basePlxUrl;\n  }\n\n  getScriptId() {\n    return this.myState.id;\n  }\n\n  getScriptParameterValues() {\n    return this.myState.parameters;\n  }\n\n  getFullUrl() {\n    return this.myState.url;\n  }\n}\n","import MapModel from './model';\n\nexport default class MapView extends MapModel{\n    constructor (placeholders, viewPane, key, head, resultsPane) {\n    super();\n    this.placeholders = placeholders;\n    this.parentPane = viewPane;\n    this.key = key;\n    this.head = head;\n    this.resultsPane = resultsPane;\n    this.emptyString = '';\n  }\n\n    initializeView(){\n        if ( !this.primaryParent ) {\n            this.primaryParent = document.createElement('div');\n            this.primaryParent.id = 'mapPrimaryContainer';\n            this.primaryParent.classList.add('card');\n            this.primaryParent.classList.add('component');\n            this.primaryParent.innerHTML = super.getMapParentHTML();\n            this.parentPane.insertBefore(\n            this.primaryParent,\n            this.parentPane.childNodes[0]);\n            this.grabInnerComponent();\n            return true\n            // insert static map primary container\n        } else {\n                this.resetPrimaryContainer();\n                return false\n                // remove scripts primary container if it exists.\n        }\n    }\n\n    grabInnerComponent(){\n      this.secondaryParent = document.createElement('div');\n      this.secondaryParent.id = 'mapSecondary';\n      this.secondaryParent.innerHTML = super.getMapSecondaryHTML();\n      // this.iframe = document.createElement('iframe');\n      // this.iframe.id = 'testIframe';\n      // this.iframe.src = require('./index.html');\n      // console.log(this.iframe.src);\n      // this.secondaryParent.appendChild(this.iframe);\n      this.primaryParent.appendChild(this.secondaryParent);\n      this.jsForm = document.getElementById('jsgeo_api_form');\n      this.searchSubmit = document.getElementById('submit_search');\n    }\n\n    insertMapContainer(){\n      if (!this.mapContainer){\n        this.close = document.getElementById('close_dyn');\n        this.search = document.getElementById('search');\n        this.reset = document.getElementById('res_map');\n        this.mapContainer = document.createElement('div');\n        this.mapContainer.id = 'map';\n        this.resultsPane.appendChild(this.mapContainer);\n        this.mapsReady();\n        return true;\n      } else {\n        this.resetPrimaryContainer();\n        return false;\n      }\n    }\n\n    // insertMapsLib(){\n    //   this.mapScripts = document.createElement('script');\n    //   this.mapScripts.src = `https://maps.googleapis.com/maps/api/js?libraries=geometry,places&key=${this.key}`;\n    //   this.mapScripts.async = 'true';\n    //   this.mapScripts.setAttribute('defer','');\n    //   this.head.insertBefore(this.mapScripts, this.head.childNodes[0]);\n    // }\n\n    mapsReady(){\n      this._map = new google.maps.Map(this.mapContainer, {\n        zoom: 14,\n        center: new google.maps.LatLng(this.america.lat, this.america.lng),\n        trafficLayer: true,\n        mapTypeControlOptions: {\n                mapTypeIds: ['roadmap', 'satellite', 'hybrid', 'terrain',]\n              },\n        });\n      // this._map.controls[google.maps.ControlPosition.TOP_LEFT].push(this.primaryParent);\n      this.infoWindow = new google.maps.InfoWindow({\n          content: null,\n        });\n      this.autocomplete = new google.maps.places.Autocomplete(this.search, \n        {\n          // 'componentRestrictions': {'country': 'US'},\n          // 'types': ['geocode', 'regions'],\n        });\n      this.geocoder = new google.maps.Geocoder();\n\n      google.maps.event.addListener(this._map,'click', (e)=>{\n          let marker = new google.maps.Marker({\n            position: e.latLng,\n            map: this._map,\n            title: 'Marker Click',\n          });\n          this._map.panTo(e.latLng);\n          this._map.setZoom(14);\n          marker.id = this.uniqueId++\n          marker.setMap(this._map);\n          super.setMarker(marker);\n          console.log(super.getMarkers());\n          });\n    }\n\n    isValid(result){\n      let target = result.input;\n      let id = target.id;\n      if (id === 'search'){\n        if (result.dataType === 'placeId'){\n          console.log('PlaceId Value:: ', result.placeId);\n          this.geocoder.geocode({'placeId':result.placeId},(results, status)=>{\n            if (status === 'OK') {\n              console.log(results);\n              this._map.fitBounds(results[0].geometry.viewport);\n              this._map.panTo(results[0].geometry.location);\n              let marker = new google.maps.Marker({\n                position: results[0].geometry.location,\n                map: this._map,\n                title: 'Place ID client-side geocode geometry location',\n              });\n              this._map.setZoom(14);\n              marker.id = this.uniqueId++\n              marker.setMap(this._map);\n              super.setMarker(marker);\n              console.log(super.getMarkers());\n            }\n          })\n        } else if (result.dataType === 'latlng'){\n          console.log('LatLng:: ', result.latLng);\n          this.geocoder.geocode({'location': new google.maps.LatLng(result.latLng[0], result.latLng[1])},(results, status)=>{\n            if (status === 'OK') {\n              console.log(results);\n              this._map.fitBounds(results[0].geometry.viewport);\n              this._map.panTo(results[0].geometry.location);\n              let marker = new google.maps.Marker({\n                position: results[0].geometry.location,\n                map: this._map,\n                title: 'LatLng client-side geocode geometry location',\n              });\n              this._map.setZoom(14);\n              marker.id = this.uniqueId++\n              marker.setMap(this._map);\n              super.setMarker(marker);\n              console.log(super.getMarkers());\n            }\n          })\n          \n        } else if (result.dataType === 'text') {\n          console.log('Address Value:: ', target.value);\n          this.geocoder.geocode({'address':target.value},(results, status)=>{\n            if (status === 'OK') {\n              console.log(results);\n              this._map.panTo(results[0].geometry.location);\n            } else {\n              console.log(status);\n            }\n          })\n        }\n          \n      }\n    }\n\n    resetPrimaryContainer () {\n      this.parentPane.removeChild(this.primaryParent);\n      this.resultsPane.removeChild(document.getElementById('map'));\n      delete this.primaryParent;\n      delete this.mapContainer;\n        // if ( level === 'all' ){\n        //   this.resetChildren('children');\n        //   if ( this.primaryParent ) {\n        //     this.parentPane.removeChild(this.primaryParent);\n        //   }\n        //   this.primaryParent = null;\n        // } else if ( level === 'children' ) {\n        //   this.resetChildren('children');\n        // } else if ( level === 'link' ) {\n        //   this.resetChildren('link');\n        // }\n      }\n    resetChildren(level) {\n        // if ( level == 'children' ){\n        // if (  ){\n        // }\n        // if (  ){\n        // }\n        // if (  ) {\n        // }\n        // if (  ) {\n        //\n        // } else if (  ){\n        //     if (  ){       \n        //     }\n        // }\n    }\n\n    setNull (element) {\n        if ( element ){\n        if ( element.id == '' ){\n            element.removeAttribute('href');\n        }\n        super.setFullUrlTo(this.emptyString);\n        element = null;\n        }\n    }\n}\n","export default class MapModel {\n  constructor(){\n    this.america = {\n      lat:30.2672,\n      lng:-97.7431\n    };\n    this.markerBank = {\n      markers: [],\n      geocodes: [],\n      ids: []\n    };\n    this.uniqueId = 0;\n  }\n\n  getMapParentHTML(){\n    this.mapParentHtml =\n       `<div id='mapMain' rel='mapTester' class=''>\n          <h2 class='card-header'>Dynamic Map Testing</h2>\n        </div>`;\n    return this.mapParentHtml;\n  }\n\n  getMapSecondaryHTML(){\n    // this.secondaryHTML = \n    //   `<div id=\"mapInner\" class=\"card-inner\">\n    //       <ul class=\"card\">\n    //       <p>JS API V3</p>\n    //       <p>\n    //           <label for=\"center\">Center:</label>\n    //           <input id=\"center\" size='40' placeholder=\" Austin, TX \">\n    //       </p>\n    //       <p>\n    //           <label for=\"zoom\">Zoom:</label>\n    //           <input id=\"zoom\" size='40' maxlength='2'placeholder=\" 14 (Accepts 1-20)\">\n    //       </p>\n    //       <p>\n    //           <label for=\"size\">Size:</label>\n    //           <input id=\"size\" size='40' maxlength='9' placeholder=\" 400x400 || 2048x2048(PP) \">\n    //       </p>\n    //       <p>\n    //         <label for=\"scale\">Scale:</label>\n    //         <input id=\"scale\" size='40' maxlength='2' placeholder=\" 2 || 4 (default is 1) \">\n    //       </p>\n    //       </ul>\n    //   </div>`;\n    // this.secondaryHTML = \n    //     `<div id='mapInner' class='card-inner'>\n    //       <form name='jsgeo_api_form' id='js_form'>\n    //         <ul>\n    //           <label>Search:</label>\n    //           <input type='text' size='42' class='input' id='search' placeholder='autocomplete | placeID ' autofocus required>\n    //         </ul>\n    //         <ul id='mapButtonContainer' class='buttonContainer'>\n    //           <button type='button' class='exitbtn' id='close_dyn' title='Close this map window'>Close</button>\n    //           <button type='button' class='exitbtn' id='res_map' title='Reset map selections'>Reset</button>\n    //           <button type='button' class='exitbtn' id='submit_search' title='Search entry'>Search</button>\n    //         </ul>\n    //       </form>\n    //     </div>`;\n\n        this.secondaryHTML = \n        `<div id='mapInner' class='card-inner'>\n          <form name='jsgeo_api_form' onsubmit=\"return false;\" id='jsgeo_api_form'>\n            <div>\n              <label for=\"search\">Search:</label>\n              <input type='text' name=\"searchField\" size='48' class='input' id='search' placeholder='autocomplete | placeID | latLng ' autocomplete=\"on\" required>\n            </div>\n            <ul id='mapButtonContainer' class='buttonContainer'>\n              <button type='button' class='exitbtn' id='close_dyn' title='Close this map window'>Close</button>\n              <button type='button' class='exitbtn' id='res_map' title='Reset map selections'>Reset</button>\n            </ul>\n          </form>\n        </div>`;\n    return this.secondaryHTML;\n  }\n\n  setMarker(marker){\n    this.markerBank.markers.push(marker);\n  }\n\n  getMarkers (){\n    this.markerBank.markers.forEach((marker)=>{\n      console.log(marker.id);\n    });\n    return this.markerBank.markers;\n  }\n\n  clearMarkers (){\n    this.uniqueId = 0;\n    this.markerBank.markers = [];\n  }\n\n}\n","import StaticWSView from './view';\n\nexport default class StaticWSController extends StaticWSView {\n  constructor ( util, placeholders, mapStaticButton, viewPane, key, head ) {\n        super(placeholders, viewPane);\n        this.staticButton = mapStaticButton;\n        this.apikey = key;\n        this.head = head;\n        this.validator = util; //form input validation class\n  }\n\n  init(){\n    super.initializeView();\n    this.isNowListening();\n  }\n\n  isNowListening(){\n\n  }\n}\n","import StaticWSModel from './model';\n\nexport default class StaticWSView extends StaticWSModel{\n    constructor (placeholders, viewPane) {\n    super();\n    this.placeholders = placeholders;\n    this.parentPane = viewPane;\n    this.emptyString = '';\n  }\n\n    initializeView(){\n        if ( !this.primaryParent ) {\n            this.primaryParent = document.createElement('div');\n            this.primaryParent.id = 'staticMapPrimaryContainer';\n            this.primaryParent.classList.add('card');\n            this.primaryParent.classList.add('component');\n            this.primaryParentinnerHTML = ( () => {\n                return super.getStaticMapParentHTML()\n            })();\n            this.primaryParent.innerHTML = this.primaryParentinnerHTML;\n            this.parentPane.insertBefore(\n            this.primaryParent,\n            this.parentPane.childNodes[0]);\n            this.grabKeySelector();\n            // this.grabInnerComponent();\n            // insert static map primary container\n        } else {\n                this.resetPrimaryContainerFor('all');\n                // remove static map primary container if it exists.\n        }\n    }\n\n    grabKeySelector(){\n      this.keySelection = document.createElement('div');\n      this.keySelection.id = 'primary_static_key_selector';\n      this.keySelectionInnerHTML = (()=>{\n        return super.getKeyChooser();\n      })();\n      this.keySelection.innerHTML = this.keySelectionInnerHTML;\n      this.primaryParent.insertBefore(this.keySelection, this.primaryParent.childNodes[0]);\n      this.grabInnerComponent();\n    }\n\n    grabInnerComponent(){\n      this.secondaryParent = document.createElement('div');\n      this.secondaryParent.id = 'staticSecondary';\n      this.secondaryParentInnerHTML = (()=>{\n        return super.getStaticSecondaryHTML();\n      })();\n      this.secondaryParent.innerHTML= this.secondaryParentInnerHTML;\n      this.staticForm = document.getElementById('staticForm');\n      console.log(this.staticForm);\n      this.staticForm.insertBefore(this.secondaryParent, this.staticForm.childNodes[1]);\n    }\n\n    resetPrimaryContainerFor (level) {\n        if ( level === 'all' ){\n          this.resetChildren('children');\n          if ( this.primaryParent ) {\n            this.parentPane.removeChild(this.primaryParent);\n          }\n          this.primaryParent = null;\n        } else if ( level === 'children' ) {\n          this.resetChildren('children');\n        } else if ( level === 'link' ) {\n          this.resetChildren('link');\n        }\n      }\n    resetChildren(level) {\n        // if ( level == 'children' ){\n        // if (  ){\n        // }\n        // if (  ){\n        // }\n        // if (  ) {\n        // }\n        // if (  ) {\n        //\n        // } else if (  ){\n        //     if (  ){       \n        //     }\n        // }\n    }\n\n    setNull (element) {\n        if ( element ){\n        if ( element.id == '' ){\n            element.removeAttribute('href');\n        }\n        super.setFullUrlTo(this.emptyString);\n        element = null;\n        }\n    }\n}\n","export default class StaticWSModel {\n  constructor(){\n\n  }\n\n  getKeyChooser(){\n      this.keyChooserHtml = \n      `<div>\n          <h2 class='card-header'>API key selector</h2>\n          <div id='staticKeySelectorForm' class='parametersForm'>\n            <form id='staticKeyForm' name='staticKeySelector'>\n              <ul id='staticKeySelector' class='buttonContainer'>\n                <button type='radio' class='exitbtn' id='internal_key_button' title='Internal Project Key'></button>\n                <button type='radio' class='exitbtn' id='customer_key_button' title='Customer Project Key'></button>\n                <button type='button' class='exitbtn' id='reset_key_selection' title='Reset Key Selection'></button>\n              </ul>\n            </form>\n          </div>\n       </div>`;\n       return this.keyChooserHtml;\n  }\n\n  getStaticMapParentHTML(){\n    this.scriptsParentHtml =     \n       `<div id='staticMain' rel='staticTester' class='card-inner'>\n          <h2 class='card-header'>Static Map W/S Tester</h2>\n          <div id='staticParametersForm' class='parametersForm'>\n              <form id=\"staticForm\" name=\"static_form\">\n                  <ul id='wsButtonContainer' class='buttonContainer'>\n                    <button type='button' class='exitbtn' id='close_static' title='Close this Static Maps Window.'></button>\n                    <button type='button' class='exitbtn' id='reset_static' title='Reset form.'></button>\n                    <input type='submit' id='gen_static' class='exitbtn' title='Generate URL for Static Map.'>\n                  </ul>\n                </form>\n            </div>\n         </div>`;\n    return this.scriptsParentHtml;\n  }\n\n  getStaticSecondaryHTML(){\n    this.secondaryHTML = \n      `<div id=\"staticInner\" class=\"card component\">\n          <div id=\"staticSample class=\"urlSample\">\n            <p>https://maps.googleapis.com/maps/api/staticmap?</p>\n          </div>\n          <p>\n              <label for=\"center\">Center:</label>\n              <input id=\"center\" size='40' placeholder=\" Austin, TX \">\n          </p>\n          <p>\n              <label for=\"zoom\">Zoom:</label>\n              <input id=\"zoom\" size='40' maxlength='2'placeholder=\" 14 (Accepts 1-20)\">\n          </p>\n          <p>\n              <label for=\"size\">Size:</label>\n              <input id=\"size\" size='40' maxlength='9' placeholder=\" 400x400 || 2048x2048(PP) \">\n          </p>\n          <p>\n            <label for=\"scale\">Scale:</label>\n            <input id=\"scale\" size='40' maxlength='2' placeholder=\" 2 || 4 (default is 1) \">\n          </p>\n      </div>`;\n    return this.secondaryHTML;\n  }\n\n}\n","import StaticWSView from './view';\n\nexport default class StaticWSController extends StaticWSView {\n  constructor ( util, placeholders, mapStaticButton, viewPane, key, head ) {\n        super(placeholders, viewPane);\n        this.staticButton = mapStaticButton;\n        this.apikey = key;\n        this.head = head;\n        this.validator = util; //form input validation class\n  }\n\n  init(){\n    super.initializeView();\n    this.isNowListening();\n  }\n\n  isNowListening(){\n\n  }\n}\n","import DremelModel from './model';\n\nexport default class DremelView extends DremelModel{\n    constructor (placeholders, viewPane) {\n    super();\n    this.placeholders = placeholders;\n    this.parentPane = viewPane;\n    this.emptyString = '';\n  }\n\n    initializeView(){\n        if ( !this.primaryParent ) {\n            this.primaryParent = document.createElement('div');\n            this.primaryParent.id = 'dremelPrimaryContainer';\n            this.primaryParent.classList.add('card');\n            this.primaryParent.classList.add('component');\n            this.primaryParentinnerHTML = ( () => {\n                return super.getDremelParentHTML()\n            })();\n            this.primaryParent.innerHTML = this.primaryParentinnerHTML;\n            this.parentPane.insertBefore(\n            this.primaryParent,\n            this.parentPane.childNodes[0]);\n            this.grabInnerComponent();\n            // insert static map primary container\n        } else {\n                this.resetPrimaryContainerFor('all');\n                // remove scripts primary container if it exists.\n        }\n    }\n\n    grabInnerComponent(){\n      this.secondaryParent = document.createElement('div');\n      this.secondaryParent.id = 'dremelSecondary';\n      this.secondaryParentInnerHTML =( ()=>{\n        return super.getDremelSecondaryHTML();\n      })();\n      this.secondaryParent.innerHTML= this.secondaryParentInnerHTML;\n      this.primaryParent.appendChild(this.secondaryParent);\n    }\n\n    resetPrimaryContainerFor (level) {\n        if ( level === 'all' ){\n          this.resetChildren('children');\n          if ( this.primaryParent ) {\n            this.parentPane.removeChild(this.primaryParent);\n          }\n          this.primaryParent = null;\n        } else if ( level === 'children' ) {\n          this.resetChildren('children');\n        } else if ( level === 'link' ) {\n          this.resetChildren('link');\n        }\n      }\n    resetChildren(level) {\n        // if ( level == 'children' ){\n        // if (  ){\n        // }\n        // if (  ){\n        // }\n        // if (  ) {\n        // }\n        // if (  ) {\n        //\n        // } else if (  ){\n        //     if (  ){       \n        //     }\n        // }\n    }\n\n    setNull (element) {\n        if ( element ){\n        if ( element.id == '' ){\n            element.removeAttribute('href');\n        }\n        super.setFullUrlTo(this.emptyString);\n        element = null;\n        }\n    }\n}\n","export default class DremelModel {\n  constructor(){\n\n  }\n\n  getDremelParentHTML(){\n    this.scriptsParentHtml =\n       `<div id='dremelMain' rel='dremel' class=''>\n          <h2 class='card-header'>Dremel Scripts</h2>\n          <ul id='dremelButtonContainer' class='buttonContainer'>\n              <button type='button' class='exitbtn' id='close_dremel' title='Close this Dremel Window.'></button>\n              <button type='button' id='gen_dremel' class='exitbtn' title='Generate URL for Dremel query.'></button>\n          </ul>\n          <ul class='card-inner' id='dremel-InnerCard'></ul>\n        </div>`;\n    return this.scriptsParentHtml;\n  }\n\n  getDremelSecondaryHTML(){\n    this.secondaryHTML = \n      `<div id=\"dremelInner\" class=\"card\">\n          <p>\n              <label for=\"center\">Center:</label>\n              <input id=\"center\" size='40' placeholder=\" Austin, TX \">\n          </p>\n          <p>\n              <label for=\"zoom\">Zoom:</label>\n              <input id=\"zoom\" size='40' maxlength='2'placeholder=\" 14 (Accepts 1-20)\">\n          </p>\n          <p>\n              <label for=\"size\">Size:</label>\n              <input id=\"size\" size='40' maxlength='9' placeholder=\" 400x400 || 2048x2048(PP) \">\n          </p>\n          <p>\n            <label for=\"scale\">Scale:</label>\n            <input id=\"scale\" size='40' maxlength='2' placeholder=\" 2 || 4 (default is 1) \">\n          </p>\n      </div>`;\n    return this.secondaryHTML;\n  }\n\n}\n","import { cl_ApiKey } from '../utilities/api_key.js';\nimport AppView from './view.js';\nimport ScriptsController from '../plx/controller.js';\nimport MapsController from '../dynamic_map_modules/maps_base/controller.js';\nimport StaticWSController from '../static_map/controller.js';\nimport DremelController from '../dremel/controller.js'\n\nexport default class AppController extends AppView {\n  constructor(Util, require) {\n    super();\n    this.util = new Util();\n    this.require = require;\n    this.cl_apiKey = cl_ApiKey;\n    this.actionButtons = [];\n    this.onLoadCheckForActionButtons();\n  }\n\n  onLoadCheckForActionButtons() {\n    for (let i = 0; i < this.viewsButtons.length; i++){\n      let button = this.viewsButtons[i];\n      this.actionButtons.push(button);\n    }\n    this.loadControllers();\n  }\n\n  loadControllers() {\n    this.instantiateControllersWith(\n          this.util,\n          super.getParametersList(),\n          this.mapsButton,\n          this.plxButton,\n          this.staticMapButton,\n          this.dremelButton,\n          this.head,\n          this.cl_apiKey,\n          this.viewsPane,\n          this.resultsPane);\n  }\n\n  instantiateControllersWith (util, placeholders, mapsButton, plxButton, staticButton, dremelButton, head, cl_apiKey, viewsPane, resultsPane) {\n    if (!this.scriptsController){\n        this.scriptsController = new ScriptsController(util, placeholders, plxButton, viewsPane);\n    }\n    if (!this.StaticWSController){\n      this.staticWSController = new StaticWSController (util, placeholders, staticButton, viewsPane, cl_apiKey, head);\n    }\n    if (!this.mapsController){\n      this.mapScripts = document.createElement('script');\n      this.mapScripts.src = `https://maps.googleapis.com/maps/api/js?libraries=geometry,places&key=${this.cl_apiKey}`;\n      this.mapScripts.async = 'true';\n      this.mapScripts.setAttribute('defer','');\n      this.head.insertBefore(this.mapScripts, this.head.childNodes[0]);\n      this.mapsController = new MapsController (util, placeholders, mapsButton, viewsPane, cl_apiKey, head, resultsPane);\n    }\n\n    if (!this.dremelController){\n      this.dremelController = new DremelController(util, placeholders, dremelButton, viewsPane);\n    }\n    this.controllerIsNowlistening();\n  }\n\n  controllerIsNowlistening() {\n    // window.addEventListener('resize', this.windowEvent, false);\n    this.actionButtons.forEach( (button) => {\n      if (button.id === 'menu_button'){\n        button.focus();\n      }\n      button.addEventListener(\n        'click', this.oneButtonWasClicked.bind(this),\n        true);\n     \n    });\n  }\n\n  windowEvent() {\n    // super.resize();\n    // super.logView();\n  }\n\n  oneButtonWasClicked (e) {\n    e.preventDefault();\n    if (e.target.id === 'plx_button'){\n        this.plxShouldLoad();\n        super.menuItemClicked();\n    } else if (e.target.id === 'menu_button'){\n        this.menuShouldRender();\n    } else if (e.target.id === 'maps_button') {\n        this.mapShouldLoad();\n        super.menuItemClicked();\n    } else if (e.target.id === 'static_map_button') {\n        this.staticMapShouldLoad();\n        super.menuItemClicked();\n    }\n    super.checkAttachedPanes();\n    console.log('SPA App-level controller :: ', this);\n  }\n\n  menuShouldRender() {\n    super.menuClicked();\n  }\n\n  plxShouldLoad() {\n    this.scriptsController.init();\n  }\n\n  staticMapShouldLoad() {\n    this.staticWSController.init();\n  }\n  \n  mapShouldLoad() {\n    this.mapsController.init();\n  }\n}\n\n","import AppModel from './model';\n\nexport default class AppView extends AppModel {\n  constructor () {\n    super ();\n    this.head = document.getElementsByTagName('head')[0];\n    this.viewsButtons = document.getElementsByClassName('dropbtn');\n    this.mainMenu = document.getElementById('main_menu');\n    this.menuBotton = document.getElementById('menu_title');\n    this.menuButtons = document.getElementById('menu_options');\n    this.plxButton = document.getElementById('plx_button');\n    this.plxButton.textContent = 'PLX Scripts';\n    this.mapsButton = document.getElementById('maps_button');\n    this.mapsButton.textContent = 'Dynamic Map Testing';\n    // this.wsButton = document.getElementById('ws_button');\n    // this.wsButton.textContent = 'WS Tester';\n    // this.dremelButton = document.getElementById('dremel_button');\n    // this.dremelButton.textContent = 'Dremel';\n    // this.staticMapButton = document.getElementById('static_map_button');\n    // this.staticMapButton.textContent = 'Static Map W/S Tester';\n    this.firstHalf = document.getElementById('firstHalf');\n    this.secondHalf = document.getElementById('secondHalf');\n    this.results = document.getElementById('results');\n    this.viewsPane = document.getElementById('views_pane');\n    this.secondHalf.insertBefore(this.viewsPane, this.secondHalf.childNodes[0]);\n    this.resultsPane = document.getElementById('results_pane');\n    this.viewportWidth;\n    this.viewportHeight\n    this.minimumWindow;\n  }\n\n  menuClicked() {\n    this.menuButtons.classList.toggle('visible');\n    this.firstHalf.classList.toggle('visible');\n    if ( this.actionButtons[0]){\n         this.actionButtons[0].focus();\n    }\n  }\n\n  menuItemClicked() {\n    this.menuClicked();\n  }\n\n  checkAttachedPanes () {\n     if (this.views.iterable_views !== []){\n        this.viewsListHasChildNodes ();\n     } else {\n        super.resetChildViews ();\n        let views = this.viewsPane.childNodes;\n        this.views.non_iterableViews = views;\n        this.checkAndListChildNodes(this.views.non_iterableViews);\n     }\n  }\n\n  viewsListHasChildNodes() {\n    super.resetChildViews();\n    let views = this.viewsPane.childNodes;\n    this.checkAndListChildNodes(views);\n    this.checkEachViewIndex();\n  }\n\n  checkAndListChildNodes (views) {\n    for (let i = 0; i < views.length; i++){\n      let iteratedView = views[i];\n      // let index = i;\n      let objectView = {\n        view: iteratedView,\n        count: i\n      };\n      super.setNewChildView(objectView);\n    }\n  }\n\n  checkEachViewIndex () {\n    if (this.views.iterable_views.length > 0){\n      console.log('Child components of the SPA :: ', this.views.iterable_views);\n      this.views.iterable_views.forEach(this.setOrder);\n    }\n  }\n\n  setOrder(viewObject, i, arr){\n      let object = viewObject;\n          object.view.style.order = `${i}`;\n          object.count = [i];\n  }\n\n  resize(){\n    // console.log('Window resize');\n    this.viewportWidth = window.innerWidth || document.documentElement.clientWidth;\n    this.viewportHeight = window.innerHeight || document.documentElement.clientHeight;\n    this.minimumWindow = [700, 520];\n    let current = [this.viewportWidth, this.viewportHeight];\n    let ceiling = [];\n    let i = 2;\n    while(i-- > 0){\n      ceiling[i] = this.minimumWindow[i] > current[i] ? this.minimumWindow[i] : current[i];\n    }\n    console.log(`Ceiling:: W=${ceiling[0]}, H=${ceiling[1]}`)\n    if (this.viewportWidth > 640) {\n      console.log('Current width:: ', current[0], 'Current Height:: ', current[1]);\n    } else {\n      console.log('Width to restrict by:: ', current[0], 'Height to restrict by:: ', current[1]);\n    }\n  }\n\n  logView(){\n    // console.log(this.minimum);\n    if (this.viewportWidth > 640){\n      console.log(`WIDE :: W=${this.viewportWidth}, H=${this.viewportHeight}`);\n    } else {\n      console.log(`SMALL :: W=${this.viewportWidth}, H=${this.viewportHeight}`);\n    }\n  }\n}\n","export default class AppModel {\n  constructor() {\n    this.placeholders = [{\n      parameters: {\n        'case_number': 'Unify case number',\n        'ip_range': '10.0.0.0/32 1234:5678::/48',\n        'query_type': 'Geocoding_API_query/Place_API_details_query',\n        'api_endpoint_type': 'Endpoint_Javascript_API/_Web_Service',\n        'table_suffix': '20180503, last3days, latest, all',\n        'project_number': '1234567891012',\n        'client_id': 'gme-XXXXX',\n        'date_from_YYYY_MM_DD': 'YYYY-MM-DD',\n        'date_to_YYYY_MM_DD': 'YYYY-MM-DD',\n        'api_key': 'AIzaSy***********',\n        'table_column': 'QPS column in logs.web_service_qps.all- \"places\"',\n        'domain': 'domain.com',\n        'url': 'domain.com/path',\n      },\n    }];\n    this.views = {};\n  }\n\n  resetChildViews () {\n    this.views.non_iretableViews = null;\n    this.views.iterable_views = [];\n  }\n\n  getChildViews () {\n    return this.views.iterable_views;\n  }\n\n  setNewChildView (view) {\n    this.views.iterable_views.push(view);\n  }\n\n  getFieldSamples () {\n    return this.placeholders;\n  }\n\n  getParametersList () {\n    return this.placeholders[0];\n  }\n\n  getParameterValues () {\n    return Object.valueOf(this.placeholders[0].parameters);\n  }\n\n  getParameterKeys () {\n    return Object.keys(this.placeholders[0].parameters);\n  }\n}\n","\n// require(['require', 'strip-ansi'], (require)=> {\n//   let module_ = require('strip-ansi');\n//   return module_;\n// });\nimport '../../.././css/dyn_map.css';\nimport '../../.././css/index.css';\nimport Util from './util';\nimport AppController from '../main_app/controller';\n\nexport default (function initialize(util) {\n  return new AppController(util);\n  \n})(Util);\n\n\n\n","import Validate from './validate_input.js';\n\nexport default class Util extends Validate {\n\tconstructor () {\n\t\tsuper();\n\t}\n\n\tclearConsole () {\n\t\tconsole.clear();\n\t}\n\n\tlog (data) {\n\t\tconsole.log(data);\n\t}\n}","import Test from './test';\n\nexport default class Validate extends Test {\n    constructor() {\n        super();\n    }\n\n    is_client_id(input) {\n        let field = input;\n        console.log(input, 'Input value:: ', field.value);\n        let filterRegEx = /[^a-z-0-9]{1,25}/gi;\n        let matchRegEx = /[a-z]{3}-[a-z0-9]{2,25}/gi;\n        let test = {\n            result: super.test(field, filterRegEx, matchRegEx)\n        };      \n        return test.result;\n    }\n\n    is_case_number(input) {\n        let field = input;\n        console.log(field, 'Input value:: ', field.value);\n        let filterRegEx = /[^0-9]{1,8}/g;\n        let matchRegEx = /[0-9]{6,8}/g;\n        let test = {\n            result: super.test(field, filterRegEx, matchRegEx)\n        };      \n        return test.result;\n    }\n\n    is_project_number(input) {\n        let field = input;\n        console.log(field, 'Input value:: ', field.value);\n        let filterRegEx = /[^0-9]{1,12}/g;\n        let matchRegEx = /[0-9]{8,12}/g;\n        let test = {\n            result: super.test(field, filterRegEx, matchRegEx)\n        };      \n        return test.result;\n    }\n\n    is_date_from_YYYY_MM_DD(input) {\n        let field = input;\n        console.log(field, 'Input value:: ', field.value);\n        let filterRegEx = /[^-0-9]{1,10}/g;\n        let matchRegEx = /[0-9]{4}-[0-9]{2}-[0-9]{2}/g;\n        let test = {\n            result: super.test(field, filterRegEx, matchRegEx)\n        };      \n        return test.result;\n    }\n\n    is_date_to_YYYY_MM_DD(input) {\n        let field = input;\n        console.log(field, 'Input value:: ', field.value);\n        let filterRegEx = /[^-0-9]{1,10}/g;\n        let matchRegEx = /[0-9]{4}-[0-9]{2}-[0-9]{2}/g;\n        let test = {\n            result: super.test(field, filterRegEx, matchRegEx)\n        };      \n        return test.result;\n    }\n\n    is_search(input){\n        let field = input;\n        console.log(field, 'Input value:: ', field.value);\n        let matchOpenInputRegEx = /[\\(?:0-9a-zA-Z\\)\\(?:\\s|-|,|.|_\\)?]+$/gi;\n        let searchPlaceIdRegEx = /[ChIJ]/g;\n        let matchPlaceIdRegEx = /[^a-zA-Z0-9_-]+$/gi;\n        let matchLatLngRegEx = /(?:-)?\\d{1,8}(?:[.]?\\d{1,8}\\s?),(?:\\s?)(?:-)?\\d{1,8}(?:[.]?\\d{1,8}?)/g;\n        // let copy_matchLatLngRegEx = /(?:-)?[0-9]+$(?:[.]?[0-9]+$]\\s?),(?:\\s-)?[0-9]+$](?:[.]?[0-9]+$]?)/g;\n        let filterRegEx = /[^0-9-.,a-z\\s\\(\\)]+$/gi;\n        /**\n         * Does input have what the filter is looking for?\n         * if not, treat it as a place id or lat lng\n         * \n         */\n        let lastCharacter = field.value.length -1;\n        if ( lastCharacter == /\\s/){\n            console.log('whitespace at the end of input');\n            field.value[lastCharacter] = '';\n        }\n        if (field.value.search(searchPlaceIdRegEx) > -1 && matchOpenInputRegEx.test(field.value) && field.value.length >= 27 ){\n            console.log('placeIdmatch');\n            let filterField = /\\s/;\n            field.value = field.value.replace(filterField, \"\");  \n            let test = {\n                result: super.searchTest(field, filterRegEx, matchPlaceIdRegEx, 'placeId')\n            };    \n            return test.result;\n        } else if (field.value.search(matchLatLngRegEx) > -1){\n            console.log('latlngmatch');\n            field.value = field.value.replace(/\\s/, \"\");\n            let _split = field.value.split(',');\n            console.log(_split);\n            _split[2] = {\n                lat: null,\n                lng: null,\n            };\n            if (_split.length >= 2) {\n                console.log('comma-delimited coordinate values received!');\n                let lat = _split[0];\n                let lng = _split[1];\n                console.log(lat, lng);\n                const latLng = `${lat}, ${lng}`;\n                if (Math.abs(lat) <= 90 && Math.abs(lng) <= 180) {\n                    field.value = latLng;\n                    let test = {\n                        result: super.searchTest(field, filterRegEx, matchLatLngRegEx, 'latlng')\n                    };    \n                    return test.result;\n  \n                  } else {\n                    console.log('not real coordinates...');\n                    let test = {\n                        result: super.searchTest(field, filterRegEx, matchLatLngRegEx, 'latlng')\n                    };    \n                    return test.result;\n                }\n            } else {\n                console.log('split less than 2! Please ensure you pass-in comma-delimited coordinates...');\n                // let test = {\n                //     result: super.searchTest(field, filterRegEx, matchLatLngRegEx, 'latlng')\n                // };    \n                // return test.result;\n            }\n        } else {\n            console.log('search query');\n            if(field.value.search(filterRegEx)){\n                console.log('elsematch');   \n                let test = {\n                    result: super.searchTest(field, filterRegEx, matchOpenInputRegEx, 'text')\n                };   \n                return test.result;\n            }\n        }\n    }\n}\n\n    // isNumberField (minLimit, maxLimit, input) {\n    //     let min = minLimit;\n    //     let max = maxLimit;\n    //     let limit = `{${min}},${max}}`;\n    //     let filterRegEx = `/[^0-9]${limit}+$/g;`\n    //     let matchRegEx = `/[0-9]${limit}+$/g`;\n    //     console.log(input, field.value);\n    //     let field = input;\n    //     let result = {\n    //         isFiltered: matchRegEx.test(field.value),\n    //         input: field,\n    //     };\n    //     if ( field.value.search(filterRegEx) > -1 ) {\n    //         field.value = field.value.replace(filterRegEx, \"\");\n    //         let result = {\n    //             isFiltered: matchRegEx.test(field.value),\n    //             input: field,\n    //         };\n    //     return result;\n    //     }\n    //     return result;\n    // }\n\n    // isMixedField (minLimit, maxLimit, input) {\n    //     let min = minLimit;\n    //     let max = maxLimit;\n    //     let limit = `{${min}},${max}}`;\n    //     let filterRegEx = `/[^a-z0-9]${limit}/gi`;\n    //     console.log(input, field.value);\n    //     let field = input;\n    //     let result = {\n    //         isFiltered: matchRegEx.test(field.value),\n    //         input: field,\n    //     };\n    //     if ( field.value.search(filterRegEx) > -1 ) {\n    //         field.value = field.value.replace(regEx, \"\");\n    //         let result = {\n    //             isFiltered: matchRegEx.test(field.value),\n    //             input: field,\n    //         };\n    //     return result;\n    //     }\n    //     return result;\n    // }\n\n    // is_api_key (input) {\n    //     let field = input;\n    //     if (field) {\n    //         return this.isMixedField(15, field);\n    //     }\n    // }\n\n    // is_domain (input) {\n    //     let field = input;\n    //     if (field) {\n    //         return this.isTextField(16, field);\n    //     }\n    // }\n\n    // is_ip_range (input) {\n    //     let field = input;\n    //     let ip_regex = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/\n    //     if (field) {\n    //         return this.isNumberField(6, field);\n    //     }\n    // }\n\n    // is_place_Id (input) {\n    //     let field = input;\n    //     if (field) {\n    //         return this.isMixedField(6, field);\n    //     }\n    // }\n\n\n    // is_lat_lng (input) {\n    //     let regEx = /[^0-9.,]/g;\n    //     let field = input;\n    //     let result = {\n    //         isFiltered: true,\n    //         input: field,\n    //     };\n    //     if ( field.value.search(regEx) > -1 ) {\n    //             field.value = field.value.replace(regEx, \"\");\n    //             let result = {\n    //                 isFiltered: true,\n    //                 input: field,\n    //             };\n    //         let split = field.split(',');\n    //         split[2] = {\n    //             lat: null,\n    //             lng: null,\n    //         };\n    //         if (split.length >= 2) {\n    //             const lat = split[0];\n    //             const lng = split[1];\n    //             split[2].lat = this.isNumberField(4, 9, lat);\n    //             split[2].lng = this.isNumberField(4, 9, lng);\n    //             if ( Math.abs(lat) <= 90 && Math.abs(lng) <= 180 && split[2].lat == true && split[2].lng == true ) {\n    //                 const latLng = lat + ',' + lng;\n    //                 result.latLng = latLng;\n    //                 return result;\n    //             }\n\n    //         }\n\n    //     }\n    //     return result;      \n    // }","export default class Test {\n    constructor(){\n\n    }\n\n    test(field, filter, match) {\n        if ( field.value || field.value && field.value.search(filterRegEx) > -1) {\n            field.value = field.value.replace(filter, \"\");\n            let result = {\n                matchesFilter: match.test(field.value),\n                input: field,\n            };\n            return result;\n        }\n    }\n\n    searchTest(field, filter, match, inputType){\n        if ( field.value || field.value && field.value.search(filterRegEx) > -1) {\n            field.value = field.value.replace(filter, \"\");\n            let result = {\n                matchesTest: match.test(field.value),\n                input: field,\n                dataType: inputType,\n            };\n            if (inputType === 'latlng'){\n                Object.defineProperty(result, 'latLng', {value: field.value, writable: true });\n                return result;\n            } else if (inputType === 'placeId'){\n                Object.defineProperty(result, 'placeId', {value: field.value, writable: true });\n                return result;\n            } else {\n                Object.defineProperty(result, 'address', {value: field.value, writable: true });\n                return result;\n            }\n        }\n    }\n}"],"sourceRoot":""}